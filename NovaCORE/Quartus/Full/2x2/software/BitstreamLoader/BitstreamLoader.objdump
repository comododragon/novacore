
BitstreamLoader.elf:     file format elf32-littlenios2
BitstreamLoader.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0008022c

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x0000fec0 memsz 0x0000fec0 flags r-x
    LOAD off    0x00010ee0 vaddr 0x0008fee0 paddr 0x000919cc align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000134b8 vaddr 0x000934b8 paddr 0x000934b8 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000020c  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f82c  0008022c  0008022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000488  0008fa58  0008fa58  00010a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0008fee0  000919cc  00010ee0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  000934b8  000934b8  000134b8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  00093618  00093618  000129cc  2**0
                  CONTENTS
  7 .bitstream_memory 00000000  00100000  00100000  000129cc  2**0
                  CONTENTS
  8 .comment      00000039  00000000  00000000  000129cc  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000d50  00000000  00000000  00012a08  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00025a2a  00000000  00000000  00013758  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009679  00000000  00000000  00039182  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b6f5  00000000  00000000  000427fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002160  00000000  00000000  0004def0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000383c  00000000  00000000  00050050  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017357  00000000  00000000  0005388c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  0006abe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001350  00000000  00000000  0006abf8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006f114  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  0006f117  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006f121  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006f122  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  0006f123  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  0006f12c  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  0006f135  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000f  00000000  00000000  0006f13e  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000059  00000000  00000000  0006f14d  2**0
                  CONTENTS, READONLY
 27 .jdi          0000440b  00000000  00000000  0006f1a6  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0005fb94  00000000  00000000  000735b1  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
0008022c l    d  .text	00000000 .text
0008fa58 l    d  .rodata	00000000 .rodata
0008fee0 l    d  .rwdata	00000000 .rwdata
000934b8 l    d  .bss	00000000 .bss
00093618 l    d  .onchip_memory2	00000000 .onchip_memory2
00100000 l    d  .bitstream_memory	00000000 .bitstream_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../BitstreamLoader_bsp//obj/HAL/src/crt0.o
00080264 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
0008fee0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0008fc32 l     O .rodata	00000010 zeroes.4155
0008fc42 l     O .rodata	00000010 blanks.4154
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00082bec l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000846c4 l     F .text	00000008 __fp_lock
000846cc l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
00090324 l     O .rwdata	00000020 lc_ctype_charset
00090304 l     O .rwdata	00000020 lc_message_charset
00090344 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0008fc70 l     O .rodata	0000000c p05.2652
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
0008789c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00087d3c l     F .text	000000fc __sprint_r.part.0
0008fda4 l     O .rodata	00000010 blanks.4099
0008fd94 l     O .rodata	00000010 zeroes.4100
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0008a964 l     F .text	00000070 udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0008d224 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008d344 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008d370 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008d474 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008d56c l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008d650 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0008d830 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000919bc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0008daa8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0008dbec l     F .text	00000038 alt_dev_reg
0009092c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0008ded8 l     F .text	000001fc altera_avalon_jtag_uart_irq
0008e0d4 l     F .text	000000a4 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0008e6ec l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0008e944 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0008edd0 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0008ef28 l     F .text	00000050 alt_get_errno
0008ef78 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000934ec g     O .bss	00000004 alt_instruction_exception_handler
000871c4 g     F .text	00000074 _mprec_log10
000872b0 g     F .text	00000088 __any_on
00089804 g     F .text	00000064 _isatty_r
0008fc7c g     O .rodata	00000028 __mprec_tinytens
0008d778 g     F .text	00000078 alt_main
0008075c g     F .text	000000b8 _puts_r
00093518 g     O .bss	00000100 alt_irq
00089868 g     F .text	0000006c _lseek_r
000919cc g       *ABS*	00000000 __flash_rwdata_start
0008bcb8 g     F .text	00000084 .hidden __eqdf2
00093618 g       *ABS*	00000000 __alt_heap_start
00080720 g     F .text	0000003c printf
00089adc g     F .text	0000009c _wcrtomb_r
00087c34 g     F .text	0000005c __sseek
00084770 g     F .text	0000019c __sinit
00089940 g     F .text	00000180 __swbuf_r
00085480 g     F .text	00000070 _setlocale_r
000846e0 g     F .text	00000078 __sfmoreglue
0008d810 g     F .text	00000020 __malloc_unlock
000860c0 g     F .text	0000013c memmove
00084758 g     F .text	00000018 _cleanup
00086310 g     F .text	000000a8 _Balloc
0008bd3c g     F .text	000000d8 .hidden __gtdf2
0008f364 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00080000 g     F .entry	0000000c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
0008979c g     F .text	00000068 _fstat_r
000934d0 g     O .bss	00000004 errno
0008089c g     F .text	00000014 __srget
00087bb0 g     F .text	00000008 __seofread
000934d8 g     O .bss	00000004 alt_argv
0009998c g       *ABS*	00000000 _gp
000907ac g     O .rwdata	00000180 alt_fd_list
000805e8 g     F .text	00000080 _getc_r
00080668 g     F .text	0000008c getc
0008f384 g     F .text	00000090 alt_find_dev
00085fb4 g     F .text	0000010c memcpy
000846d4 g     F .text	0000000c _cleanup_r
0008d008 g     F .text	000000d0 .hidden __floatsidf
0008eeb0 g     F .text	00000078 alt_io_redirect
0008be14 g     F .text	000000ec .hidden __ltdf2
0008fa58 g       *ABS*	00000000 __DTOR_END__
00080814 g     F .text	00000014 puts
0008f5fc g     F .text	000000a0 alt_exception_cause_generated_bad_addr
00087a90 g     F .text	00000068 __fpclassifyd
00087124 g     F .text	000000a0 __ratio
00089298 g     F .text	00000024 __vfiprintf_internal
0008e2cc g     F .text	00000208 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
000806f4 g     F .text	0000002c _printf_r
0008aa68 g     F .text	00000008 .hidden __udivsi3
0008d4c4 g     F .text	000000a8 isatty
0008fccc g     O .rodata	000000c8 __mprec_tens
000854f0 g     F .text	0000000c __locale_charset
000934cc g     O .bss	00000004 __malloc_top_pad
00091994 g     O .rwdata	00000004 __mb_cur_max
00085520 g     F .text	0000000c _localeconv_r
00086740 g     F .text	0000003c __i2b
00084e74 g     F .text	000004ac __sfvwrite_r
00087af8 g     F .text	00000064 _sbrk_r
000898d4 g     F .text	0000006c _read_r
000919b4 g     O .rwdata	00000004 alt_max_fd
00089464 g     F .text	00000128 _fclose_r
00084694 g     F .text	00000030 fflush
000934c8 g     O .bss	00000004 __malloc_max_sbrked_mem
0008aaa0 g     F .text	0000087c .hidden __adddf3
00086ef0 g     F .text	000000f0 __b2d
0008a330 g     F .text	00000634 .hidden __umoddi3
0008d6a0 g     F .text	000000d8 lseek
0009198c g     O .rwdata	00000004 _global_impure_ptr
00087338 g     F .text	00000564 _realloc_r
00093618 g       *ABS*	00000000 __bss_end
0008ece0 g     F .text	000000f0 alt_iic_isr_register
0008f260 g     F .text	00000104 alt_tick
00089cdc g     F .text	00000654 .hidden __udivdi3
000895a0 g     F .text	00000184 _fputwc_r
0008fca4 g     O .rodata	00000028 __mprec_bigtens
00086524 g     F .text	00000104 __s2b
0008d0d8 g     F .text	000000a0 .hidden __floatunsidf
00086c80 g     F .text	00000060 __mcmp
00084a38 g     F .text	00000018 __fp_lock_all
0008ec94 g     F .text	0000004c alt_ic_irq_enabled
0008f1c8 g     F .text	00000098 alt_alarm_stop
000934e0 g     O .bss	00000004 alt_irq_active
000800fc g     F .exceptions	000000d0 alt_irq_handler
00090784 g     O .rwdata	00000028 alt_dev_null
0008e928 g     F .text	0000001c alt_dcache_flush_all
00086628 g     F .text	00000068 __hi0bits
0008cf88 g     F .text	00000080 .hidden __fixdfsi
000919cc g       *ABS*	00000000 __ram_rwdata_end
000919ac g     O .rwdata	00000008 alt_dev_list
0008daf8 g     F .text	000000f4 write
0008fee0 g       *ABS*	00000000 __ram_rodata_end
0008d3c0 g     F .text	000000b4 fstat
0008be14 g     F .text	000000ec .hidden __ledf2
00100000 g       *ABS*	00000000 __alt_mem_bitstream_memory
000869e8 g     F .text	00000148 __pow5mult
00087e50 g     F .text	00001448 ___vfiprintf_internal_r
000934c0 g     O .bss	00000004 __nlocale_changed
0008aa70 g     F .text	00000008 .hidden __umodsi3
00093618 g       *ABS*	00000000 end
0008de18 g     F .text	000000c0 altera_avalon_jtag_uart_init
000801cc g     F .exceptions	00000060 alt_instruction_exception_entry
0008fa58 g       *ABS*	00000000 __CTOR_LIST__
000c0000 g       *ABS*	00000000 __alt_stack_pointer
0008e760 g     F .text	00000088 alt_avalon_timer_sc_init
0008d178 g     F .text	000000ac .hidden __clzsi2
0008e4d4 g     F .text	00000218 altera_avalon_jtag_uart_write
00084a28 g     F .text	00000004 __sfp_lock_acquire
00085ecc g     F .text	000000e8 memchr
0008093c g     F .text	00002154 ___vfprintf_internal_r
00084ba4 g     F .text	000002d0 _free_r
000854fc g     F .text	00000010 __locale_mb_cur_max
0008f880 g     F .text	000001a4 __call_exitprocs
00080828 g     F .text	00000074 __srget_r
000934bc g     O .bss	00000004 __mlocale_changed
00091998 g     O .rwdata	00000004 __malloc_sbrk_base
0008022c g     F .text	0000003c _start
000934e4 g     O .bss	00000004 _alt_tick_rate
00086b30 g     F .text	00000150 __lshift
000934e8 g     O .bss	00000004 _alt_nticks
0008d880 g     F .text	000000f8 read
0008dc58 g     F .text	0000005c alt_sys_init
0008f764 g     F .text	0000011c __register_exitproc
0008677c g     F .text	0000026c __multiply
0008e178 g     F .text	00000068 altera_avalon_jtag_uart_close
0008aa78 g     F .text	00000028 .hidden __mulsi3
0008fee0 g       *ABS*	00000000 __ram_rwdata_start
0008fa58 g       *ABS*	00000000 __ram_rodata_start
000934f0 g     O .bss	00000028 __malloc_current_mallinfo
00086fe0 g     F .text	00000144 __d2b
0008dcb4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0008f528 g     F .text	000000d4 alt_get_fd
00089328 g     F .text	00000064 _close_r
0008f6e8 g     F .text	0000007c memcmp
0008dd74 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00093618 g       *ABS*	00000000 __alt_stack_base
0008ddc4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00082ab4 g     F .text	00000138 __swsetup_r
0008b31c g     F .text	0000099c .hidden __divdf3
0008490c g     F .text	0000011c __sfp
00087238 g     F .text	00000078 __copybits
0009037c g     O .rwdata	00000408 __malloc_av_
00084a34 g     F .text	00000004 __sinit_lock_release
0008bf00 g     F .text	00000800 .hidden __muldf3
00087b5c g     F .text	00000054 __sread
0008f414 g     F .text	00000114 alt_find_file
0008e994 g     F .text	000000a0 alt_dev_llist_insert
0008d7f0 g     F .text	00000020 __malloc_lock
0008d9f8 g     F .text	000000b0 sbrk
00084450 g     F .text	00000244 _fflush_r
0008938c g     F .text	000000d8 _calloc_r
000934b8 g       *ABS*	00000000 __bss_start
000861fc g     F .text	00000114 memset
00080268 g     F .text	00000380 main
000934dc g     O .bss	00000004 alt_envp
000934c4 g     O .bss	00000004 __malloc_max_total_mem
0008dd14 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00089ac0 g     F .text	0000001c __swbuf
00087c90 g     F .text	00000008 __sclose
000c0000 g       *ABS*	00000000 __alt_heap_limit
0008958c g     F .text	00000014 fclose
00082e14 g     F .text	0000163c _dtoa_r
00085708 g     F .text	000007c4 _malloc_r
00089c50 g     F .text	00000030 __ascii_wctomb
000919b8 g     O .rwdata	00000004 alt_errno
00085320 g     F .text	000000a8 _fwalk
0008a9d4 g     F .text	00000048 .hidden __divsi3
00084a68 g     F .text	0000013c _malloc_trim_r
0008fa58 g       *ABS*	00000000 __CTOR_END__
00087c98 g     F .text	000000a4 strcmp
0008fa58 g       *ABS*	00000000 __flash_rodata_start
0008fa58 g       *ABS*	00000000 __DTOR_LIST__
0008bcb8 g     F .text	00000084 .hidden __nedf2
0008dc24 g     F .text	00000034 alt_irq_init
0008d978 g     F .text	00000080 alt_release_fd
0008fdb4 g     O .rodata	00000100 .hidden __clz_tab
000934b8 g     O .bss	00000004 _PathLocale
0008f69c g     F .text	00000014 atexit
000892bc g     F .text	0000006c _write_r
0008552c g     F .text	0000001c setlocale
00091990 g     O .rwdata	00000004 _impure_ptr
000934d4 g     O .bss	00000004 alt_argc
0008ea90 g     F .text	0000005c _do_dtors
00085518 g     F .text	00000008 __locale_cjk_lang
000878b8 g     F .text	000001d8 __srefill_r
00080020 g       .exceptions	00000000 alt_irq_entry
00086e90 g     F .text	00000060 __ulp
00084a50 g     F .text	00000018 __fp_unlock_all
000919a4 g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00085548 g     F .text	0000000c localeconv
00080000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0008eb08 g     F .text	00000050 alt_ic_isr_register
000919cc g       *ABS*	00000000 _edata
00093618 g       *ABS*	00000000 _end
0008022c g       *ABS*	00000000 __ram_exceptions_end
0008e1e0 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0008ebf4 g     F .text	000000a0 alt_ic_irq_disable
00087bb8 g     F .text	0000007c __swrite
0009199c g     O .rwdata	00000004 __malloc_trim_threshold
0008550c g     F .text	0000000c __locale_msgcharset
0008f6b0 g     F .text	00000038 exit
000853c8 g     F .text	000000b8 _fwalk_reent
00086ce0 g     F .text	000001b0 __mdiff
0008aa1c g     F .text	0000004c .hidden __modsi3
000c0000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
00084a2c g     F .text	00000004 __sfp_lock_release
0008fa24 g     F .text	00000034 _exit
0008e7e8 g     F .text	00000140 alt_alarm_start
00085554 g     F .text	000001b4 __smakebuf_r
000808b0 g     F .text	0000008c strlen
0008f06c g     F .text	0000015c open
0008bd3c g     F .text	000000d8 .hidden __gedf2
000919a0 g     O .rwdata	00000004 __wctomb
00087e38 g     F .text	00000018 __sprint_r
0008eaec g     F .text	0000001c alt_icache_flush_all
000919c0 g     O .rwdata	00000004 alt_priority_mask
0008eb58 g     F .text	0000009c alt_ic_irq_enable
00082a90 g     F .text	00000024 __vfprintf_internal
00089c80 g     F .text	0000005c _wctomb_r
0008c700 g     F .text	00000888 .hidden __subdf3
00086690 g     F .text	000000b0 __lo0bits
000919c4 g     O .rwdata	00000008 alt_alarm_list
0008ea34 g     F .text	0000005c _do_ctors
00089b78 g     F .text	000000d8 wcrtomb
0008d274 g     F .text	000000d0 close
0008d5d0 g     F .text	00000080 alt_load
00089724 g     F .text	00000078 fputwc
00000000  w      *UND*	00000000 free
00084a30 g     F .text	00000004 __sinit_lock_acquire
000863e0 g     F .text	00000144 __multadd
000863b8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80000:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80004:	08408b14 	ori	at,at,556
    jmp r1
   80008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   80044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800fc0 	call	800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000706 	br	800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   8008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   80094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   80098:	00801cc0 	call	801cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   8009c:	1000021e 	bne	r2,zero,800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800f8:	ef80083a 	eret

000800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800fc:	defff904 	addi	sp,sp,-28
   80100:	dfc00615 	stw	ra,24(sp)
   80104:	df000515 	stw	fp,20(sp)
   80108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   8010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80110:	0005313a 	rdctl	r2,ipending
   80114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   80118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   8011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   80120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80124:	00800044 	movi	r2,1
   80128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   8012c:	e0fffb17 	ldw	r3,-20(fp)
   80130:	e0bffc17 	ldw	r2,-16(fp)
   80134:	1884703a 	and	r2,r3,r2
   80138:	10001726 	beq	r2,zero,80198 <alt_irq_handler+0x9c>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8013c:	00c00274 	movhi	r3,9
   80140:	18cd4604 	addi	r3,r3,13592
   80144:	e0bffd17 	ldw	r2,-12(fp)
   80148:	100490fa 	slli	r2,r2,3
   8014c:	1885883a 	add	r2,r3,r2
   80150:	10800017 	ldw	r2,0(r2)
   80154:	01000274 	movhi	r4,9
   80158:	210d4604 	addi	r4,r4,13592
   8015c:	e0fffd17 	ldw	r3,-12(fp)
   80160:	180690fa 	slli	r3,r3,3
   80164:	20c7883a 	add	r3,r4,r3
   80168:	18c00104 	addi	r3,r3,4
   8016c:	18c00017 	ldw	r3,0(r3)
   80170:	1809883a 	mov	r4,r3
   80174:	103ee83a 	callr	r2
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   80178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   8017c:	0005313a 	rdctl	r2,ipending
   80180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   80184:	e0bfff17 	ldw	r2,-4(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   80188:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   8018c:	e0bffb17 	ldw	r2,-20(fp)
   80190:	103fe31e 	bne	r2,zero,80120 <alt_irq_handler+0x24>
   80194:	00000706 	br	801b4 <alt_irq_handler+0xb8>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   80198:	e0bffc17 	ldw	r2,-16(fp)
   8019c:	1085883a 	add	r2,r2,r2
   801a0:	e0bffc15 	stw	r2,-16(fp)
      i++;
   801a4:	e0bffd17 	ldw	r2,-12(fp)
   801a8:	10800044 	addi	r2,r2,1
   801ac:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   801b0:	003fde06 	br	8012c <alt_irq_handler+0x30>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   801b4:	0001883a 	nop
}
   801b8:	e037883a 	mov	sp,fp
   801bc:	dfc00117 	ldw	ra,4(sp)
   801c0:	df000017 	ldw	fp,0(sp)
   801c4:	dec00204 	addi	sp,sp,8
   801c8:	f800283a 	ret

000801cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   801cc:	defffb04 	addi	sp,sp,-20
   801d0:	dfc00415 	stw	ra,16(sp)
   801d4:	df000315 	stw	fp,12(sp)
   801d8:	df000304 	addi	fp,sp,12
   801dc:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   801e0:	00bfffc4 	movi	r2,-1
   801e4:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   801e8:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   801ec:	d0a6d817 	ldw	r2,-25760(gp)
   801f0:	10000726 	beq	r2,zero,80210 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   801f4:	d0a6d817 	ldw	r2,-25760(gp)
   801f8:	e0fffd17 	ldw	r3,-12(fp)
   801fc:	1809883a 	mov	r4,r3
   80200:	e17fff17 	ldw	r5,-4(fp)
   80204:	e1bffe17 	ldw	r6,-8(fp)
   80208:	103ee83a 	callr	r2
   8020c:	00000206 	br	80218 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   80210:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   80214:	0005883a 	mov	r2,zero
}
   80218:	e037883a 	mov	sp,fp
   8021c:	dfc00117 	ldw	ra,4(sp)
   80220:	df000017 	ldw	fp,0(sp)
   80224:	dec00204 	addi	sp,sp,8
   80228:	f800283a 	ret

Disassembly of section .text:

0008022c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   8022c:	06c00334 	movhi	sp,12
    ori sp, sp, %lo(__alt_stack_pointer)
   80230:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   80234:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   80238:	d6a66314 	ori	gp,gp,39308
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   8023c:	00800274 	movhi	r2,9
    ori r2, r2, %lo(__bss_start)
   80240:	108d2e14 	ori	r2,r2,13496

    movhi r3, %hi(__bss_end)
   80244:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
   80248:	18cd8614 	ori	r3,r3,13848

    beq r2, r3, 1f
   8024c:	10c00326 	beq	r2,r3,8025c <_start+0x30>

0:
    stw zero, (r2)
   80250:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   80254:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   80258:	10fffd36 	bltu	r2,r3,80250 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   8025c:	008d5d00 	call	8d5d0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   80260:	008d7780 	call	8d778 <alt_main>

00080264 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   80264:	003fff06 	br	80264 <alt_after_alt_main>

00080268 <main>:
#include "system.h"
#include "altera_avalon_pio_regs.h"

#define BITSTREAM_SZ 76

int main(void) {
   80268:	defff904 	addi	sp,sp,-28
   8026c:	dfc00615 	stw	ra,24(sp)
   80270:	df000515 	stw	fp,20(sp)
   80274:	df000504 	addi	fp,sp,20
	char c;
	bool quit = false;
   80278:	e03ffb05 	stb	zero,-20(fp)
	unsigned int i, curDim = 0, memWord;
   8027c:	e03ffd15 	stw	zero,-12(fp)

	printf(">> Changing NovaCORE mode to CONFIG...\n");
   80280:	01000274 	movhi	r4,9
   80284:	213e9604 	addi	r4,r4,-1448
   80288:	00808140 	call	80814 <puts>
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_BUS_BASE, 0x0);
   8028c:	0007883a 	mov	r3,zero
   80290:	00800474 	movhi	r2,17
   80294:	10841804 	addi	r2,r2,4192
   80298:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_UID_BASE, 0x0);
   8029c:	0007883a 	mov	r3,zero
   802a0:	00800474 	movhi	r2,17
   802a4:	10840804 	addi	r2,r2,4128
   802a8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x0);
   802ac:	0007883a 	mov	r3,zero
   802b0:	00800474 	movhi	r2,17
   802b4:	10840c04 	addi	r2,r2,4144
   802b8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMENSION_BASE, curDim);
   802bc:	e0fffd17 	ldw	r3,-12(fp)
   802c0:	00800474 	movhi	r2,17
   802c4:	10841004 	addi	r2,r2,4160
   802c8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x0);
   802cc:	0007883a 	mov	r3,zero
   802d0:	00800474 	movhi	r2,17
   802d4:	10841404 	addi	r2,r2,4176
   802d8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_BASE, 0x1);
   802dc:	00c00044 	movi	r3,1
   802e0:	00800474 	movhi	r2,17
   802e4:	10841c04 	addi	r2,r2,4208
   802e8:	10c00035 	stwio	r3,0(r2)

	printf(">> Setting dimension to 0...\n");
   802ec:	01000274 	movhi	r4,9
   802f0:	213ea004 	addi	r4,r4,-1408
   802f4:	00808140 	call	80814 <puts>
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMENSION_BASE, 0x0);
   802f8:	0007883a 	mov	r3,zero
   802fc:	00800474 	movhi	r2,17
   80300:	10841004 	addi	r2,r2,4160
   80304:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x1);
   80308:	00c00044 	movi	r3,1
   8030c:	00800474 	movhi	r2,17
   80310:	10841404 	addi	r2,r2,4176
   80314:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x0);
   80318:	0007883a 	mov	r3,zero
   8031c:	00800474 	movhi	r2,17
   80320:	10841404 	addi	r2,r2,4176
   80324:	10c00035 	stwio	r3,0(r2)

	printf("Welcome to NovaCORE Blaster.\n");
   80328:	01000274 	movhi	r4,9
   8032c:	213ea804 	addi	r4,r4,-1376
   80330:	00808140 	call	80814 <puts>

	do {
		printf("Available options:\n");
   80334:	01000274 	movhi	r4,9
   80338:	213eb004 	addi	r4,r4,-1344
   8033c:	00808140 	call	80814 <puts>
		printf(" a) Load and run bitstream;\n");
   80340:	01000274 	movhi	r4,9
   80344:	213eb504 	addi	r4,r4,-1324
   80348:	00808140 	call	80814 <puts>
		printf(" b) Change dimension;\n");
   8034c:	01000274 	movhi	r4,9
   80350:	213ebc04 	addi	r4,r4,-1296
   80354:	00808140 	call	80814 <puts>
		printf(" q) Quit.\n");
   80358:	01000274 	movhi	r4,9
   8035c:	213ec204 	addi	r4,r4,-1272
   80360:	00808140 	call	80814 <puts>
		printf("Option: ");
   80364:	01000274 	movhi	r4,9
   80368:	213ec504 	addi	r4,r4,-1260
   8036c:	00807200 	call	80720 <printf>

		c = getchar();
   80370:	00800274 	movhi	r2,9
   80374:	10866404 	addi	r2,r2,6544
   80378:	10800017 	ldw	r2,0(r2)
   8037c:	10800117 	ldw	r2,4(r2)
   80380:	1009883a 	mov	r4,r2
   80384:	00806680 	call	80668 <getc>
   80388:	e0bffe05 	stb	r2,-8(fp)
		getchar();
   8038c:	00800274 	movhi	r2,9
   80390:	10866404 	addi	r2,r2,6544
   80394:	10800017 	ldw	r2,0(r2)
   80398:	10800117 	ldw	r2,4(r2)
   8039c:	1009883a 	mov	r4,r2
   803a0:	00806680 	call	80668 <getc>

		switch(c) {
   803a4:	e0bffe07 	ldb	r2,-8(fp)
   803a8:	10c018a0 	cmpeqi	r3,r2,98
   803ac:	1800491e 	bne	r3,zero,804d4 <main+0x26c>
   803b0:	10c01c60 	cmpeqi	r3,r2,113
   803b4:	1800781e 	bne	r3,zero,80598 <main+0x330>
   803b8:	10801860 	cmpeqi	r2,r2,97
   803bc:	10007926 	beq	r2,zero,805a4 <main+0x33c>
			case 'a':
				printf(">> Programming NovaCORE...\n");
   803c0:	01000274 	movhi	r4,9
   803c4:	213ec804 	addi	r4,r4,-1248
   803c8:	00808140 	call	80814 <puts>
				printf(">> Changing NovaCORE mode to CONFIG...\n");
   803cc:	01000274 	movhi	r4,9
   803d0:	213e9604 	addi	r4,r4,-1448
   803d4:	00808140 	call	80814 <puts>
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_BASE, 0x1);
   803d8:	00c00044 	movi	r3,1
   803dc:	00800474 	movhi	r2,17
   803e0:	10841c04 	addi	r2,r2,4208
   803e4:	10c00035 	stwio	r3,0(r2)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x0);
   803e8:	0007883a 	mov	r3,zero
   803ec:	00800474 	movhi	r2,17
   803f0:	10841404 	addi	r2,r2,4176
   803f4:	10c00035 	stwio	r3,0(r2)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x0);
   803f8:	0007883a 	mov	r3,zero
   803fc:	00800474 	movhi	r2,17
   80400:	10840c04 	addi	r2,r2,4144
   80404:	10c00035 	stwio	r3,0(r2)

				printf(">> Sending data...\n");
   80408:	01000274 	movhi	r4,9
   8040c:	213ecf04 	addi	r4,r4,-1220
   80410:	00808140 	call	80814 <puts>
				for(i = 0; i < BITSTREAM_SZ; i++) {
   80414:	e03ffc15 	stw	zero,-16(fp)
   80418:	00002006 	br	8049c <main+0x234>
					memWord = IORD(BITSTREAM_MEMORY_BASE, i);
   8041c:	e0bffc17 	ldw	r2,-16(fp)
   80420:	1085883a 	add	r2,r2,r2
   80424:	1085883a 	add	r2,r2,r2
   80428:	1007883a 	mov	r3,r2
   8042c:	00800434 	movhi	r2,16
   80430:	1885883a 	add	r2,r3,r2
   80434:	10800037 	ldwio	r2,0(r2)
   80438:	e0bfff15 	stw	r2,-4(fp)
					IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_UID_BASE, (memWord >> 28) & 0xf);
   8043c:	e0bfff17 	ldw	r2,-4(fp)
   80440:	1004d73a 	srli	r2,r2,28
   80444:	1007883a 	mov	r3,r2
   80448:	00800474 	movhi	r2,17
   8044c:	10840804 	addi	r2,r2,4128
   80450:	10c00035 	stwio	r3,0(r2)
					IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_BUS_BASE, memWord & 0xfffffff);
   80454:	e0ffff17 	ldw	r3,-4(fp)
   80458:	00840034 	movhi	r2,4096
   8045c:	10bfffc4 	addi	r2,r2,-1
   80460:	1886703a 	and	r3,r3,r2
   80464:	00800474 	movhi	r2,17
   80468:	10841804 	addi	r2,r2,4192
   8046c:	10c00035 	stwio	r3,0(r2)

					IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x1);
   80470:	00c00044 	movi	r3,1
   80474:	00800474 	movhi	r2,17
   80478:	10840c04 	addi	r2,r2,4144
   8047c:	10c00035 	stwio	r3,0(r2)
					IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x0);
   80480:	0007883a 	mov	r3,zero
   80484:	00800474 	movhi	r2,17
   80488:	10840c04 	addi	r2,r2,4144
   8048c:	10c00035 	stwio	r3,0(r2)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_BASE, 0x1);
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x0);
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x0);

				printf(">> Sending data...\n");
				for(i = 0; i < BITSTREAM_SZ; i++) {
   80490:	e0bffc17 	ldw	r2,-16(fp)
   80494:	10800044 	addi	r2,r2,1
   80498:	e0bffc15 	stw	r2,-16(fp)
   8049c:	e0bffc17 	ldw	r2,-16(fp)
   804a0:	10801330 	cmpltui	r2,r2,76
   804a4:	103fdd1e 	bne	r2,zero,8041c <main+0x1b4>

					IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x1);
					IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_CLK_BASE, 0x0);
				}

				printf(">> Changing NovaCORE mode to RUN...\n");
   804a8:	01000274 	movhi	r4,9
   804ac:	213ed404 	addi	r4,r4,-1200
   804b0:	00808140 	call	80814 <puts>
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_BASE, 0x0);
   804b4:	0007883a 	mov	r3,zero
   804b8:	00800474 	movhi	r2,17
   804bc:	10841c04 	addi	r2,r2,4208
   804c0:	10c00035 	stwio	r3,0(r2)
				printf(">> Done!\n");
   804c4:	01000274 	movhi	r4,9
   804c8:	213edd04 	addi	r4,r4,-1164
   804cc:	00808140 	call	80814 <puts>
				break;
   804d0:	00003806 	br	805b4 <main+0x34c>
			case 'b':
				printf(">> Changing NovaCORE dimension from %d to %d...\n", curDim, (curDim + 1) % 4);
   804d4:	e0bffd17 	ldw	r2,-12(fp)
   804d8:	10800044 	addi	r2,r2,1
   804dc:	108000cc 	andi	r2,r2,3
   804e0:	01000274 	movhi	r4,9
   804e4:	213ee004 	addi	r4,r4,-1152
   804e8:	e17ffd17 	ldw	r5,-12(fp)
   804ec:	100d883a 	mov	r6,r2
   804f0:	00807200 	call	80720 <printf>
				printf(">> Changing NovaCORE mode to CONFIG...\n");
   804f4:	01000274 	movhi	r4,9
   804f8:	213e9604 	addi	r4,r4,-1448
   804fc:	00808140 	call	80814 <puts>
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_BASE, 0x1);
   80500:	00c00044 	movi	r3,1
   80504:	00800474 	movhi	r2,17
   80508:	10841c04 	addi	r2,r2,4208
   8050c:	10c00035 	stwio	r3,0(r2)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x0);
   80510:	0007883a 	mov	r3,zero
   80514:	00800474 	movhi	r2,17
   80518:	10841404 	addi	r2,r2,4176
   8051c:	10c00035 	stwio	r3,0(r2)

				printf(">> Changing dimension...\n");
   80520:	01000274 	movhi	r4,9
   80524:	213eed04 	addi	r4,r4,-1100
   80528:	00808140 	call	80814 <puts>
				curDim = (curDim + 1) % 4;
   8052c:	e0bffd17 	ldw	r2,-12(fp)
   80530:	10800044 	addi	r2,r2,1
   80534:	108000cc 	andi	r2,r2,3
   80538:	e0bffd15 	stw	r2,-12(fp)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMENSION_BASE, curDim);
   8053c:	e0fffd17 	ldw	r3,-12(fp)
   80540:	00800474 	movhi	r2,17
   80544:	10841004 	addi	r2,r2,4160
   80548:	10c00035 	stwio	r3,0(r2)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x1);
   8054c:	00c00044 	movi	r3,1
   80550:	00800474 	movhi	r2,17
   80554:	10841404 	addi	r2,r2,4176
   80558:	10c00035 	stwio	r3,0(r2)
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_C_DIMSWITCH_BASE, 0x0);
   8055c:	0007883a 	mov	r3,zero
   80560:	00800474 	movhi	r2,17
   80564:	10841404 	addi	r2,r2,4176
   80568:	10c00035 	stwio	r3,0(r2)

				printf(">> Changing NovaCORE mode to RUN...\n");
   8056c:	01000274 	movhi	r4,9
   80570:	213ed404 	addi	r4,r4,-1200
   80574:	00808140 	call	80814 <puts>
				IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_BASE, 0x0);
   80578:	0007883a 	mov	r3,zero
   8057c:	00800474 	movhi	r2,17
   80580:	10841c04 	addi	r2,r2,4208
   80584:	10c00035 	stwio	r3,0(r2)
				printf(">> Done!\n");
   80588:	01000274 	movhi	r4,9
   8058c:	213edd04 	addi	r4,r4,-1164
   80590:	00808140 	call	80814 <puts>
				break;
   80594:	00000706 	br	805b4 <main+0x34c>
			case 'q':
				quit = true;
   80598:	00800044 	movi	r2,1
   8059c:	e0bffb05 	stb	r2,-20(fp)
				break;
   805a0:	00000406 	br	805b4 <main+0x34c>
			default:
				printf("Invalid option.\n");
   805a4:	01000274 	movhi	r4,9
   805a8:	213ef404 	addi	r4,r4,-1072
   805ac:	00808140 	call	80814 <puts>
				break;
   805b0:	0001883a 	nop
		}
	} while(!quit);
   805b4:	e0bffb03 	ldbu	r2,-20(fp)
   805b8:	1080005c 	xori	r2,r2,1
   805bc:	10803fcc 	andi	r2,r2,255
   805c0:	103f5c1e 	bne	r2,zero,80334 <main+0xcc>

	printf("Bye!\n");
   805c4:	01000274 	movhi	r4,9
   805c8:	213ef804 	addi	r4,r4,-1056
   805cc:	00808140 	call	80814 <puts>

	return 0;
   805d0:	0005883a 	mov	r2,zero
}
   805d4:	e037883a 	mov	sp,fp
   805d8:	dfc00117 	ldw	ra,4(sp)
   805dc:	df000017 	ldw	fp,0(sp)
   805e0:	dec00204 	addi	sp,sp,8
   805e4:	f800283a 	ret

000805e8 <_getc_r>:
   805e8:	defffd04 	addi	sp,sp,-12
   805ec:	dc400115 	stw	r17,4(sp)
   805f0:	dc000015 	stw	r16,0(sp)
   805f4:	dfc00215 	stw	ra,8(sp)
   805f8:	2023883a 	mov	r17,r4
   805fc:	2821883a 	mov	r16,r5
   80600:	20000226 	beq	r4,zero,8060c <_getc_r+0x24>
   80604:	20800e17 	ldw	r2,56(r4)
   80608:	10001026 	beq	r2,zero,8064c <_getc_r+0x64>
   8060c:	0084a280 	call	84a28 <__sfp_lock_acquire>
   80610:	80800117 	ldw	r2,4(r16)
   80614:	10bfffc4 	addi	r2,r2,-1
   80618:	80800115 	stw	r2,4(r16)
   8061c:	10000d16 	blt	r2,zero,80654 <_getc_r+0x6c>
   80620:	80800017 	ldw	r2,0(r16)
   80624:	10c00044 	addi	r3,r2,1
   80628:	80c00015 	stw	r3,0(r16)
   8062c:	14000003 	ldbu	r16,0(r2)
   80630:	0084a2c0 	call	84a2c <__sfp_lock_release>
   80634:	8005883a 	mov	r2,r16
   80638:	dfc00217 	ldw	ra,8(sp)
   8063c:	dc400117 	ldw	r17,4(sp)
   80640:	dc000017 	ldw	r16,0(sp)
   80644:	dec00304 	addi	sp,sp,12
   80648:	f800283a 	ret
   8064c:	00847700 	call	84770 <__sinit>
   80650:	003fee06 	br	8060c <_getc_r+0x24>
   80654:	800b883a 	mov	r5,r16
   80658:	8809883a 	mov	r4,r17
   8065c:	00808280 	call	80828 <__srget_r>
   80660:	1021883a 	mov	r16,r2
   80664:	003ff206 	br	80630 <_getc_r+0x48>

00080668 <getc>:
   80668:	defffd04 	addi	sp,sp,-12
   8066c:	dc400115 	stw	r17,4(sp)
   80670:	04400274 	movhi	r17,9
   80674:	8c466404 	addi	r17,r17,6544
   80678:	88800017 	ldw	r2,0(r17)
   8067c:	dc000015 	stw	r16,0(sp)
   80680:	dfc00215 	stw	ra,8(sp)
   80684:	2021883a 	mov	r16,r4
   80688:	10000226 	beq	r2,zero,80694 <getc+0x2c>
   8068c:	10c00e17 	ldw	r3,56(r2)
   80690:	18001026 	beq	r3,zero,806d4 <getc+0x6c>
   80694:	0084a280 	call	84a28 <__sfp_lock_acquire>
   80698:	80800117 	ldw	r2,4(r16)
   8069c:	10bfffc4 	addi	r2,r2,-1
   806a0:	80800115 	stw	r2,4(r16)
   806a4:	10000e16 	blt	r2,zero,806e0 <getc+0x78>
   806a8:	80800017 	ldw	r2,0(r16)
   806ac:	10c00044 	addi	r3,r2,1
   806b0:	80c00015 	stw	r3,0(r16)
   806b4:	14000003 	ldbu	r16,0(r2)
   806b8:	0084a2c0 	call	84a2c <__sfp_lock_release>
   806bc:	8005883a 	mov	r2,r16
   806c0:	dfc00217 	ldw	ra,8(sp)
   806c4:	dc400117 	ldw	r17,4(sp)
   806c8:	dc000017 	ldw	r16,0(sp)
   806cc:	dec00304 	addi	sp,sp,12
   806d0:	f800283a 	ret
   806d4:	1009883a 	mov	r4,r2
   806d8:	00847700 	call	84770 <__sinit>
   806dc:	003fed06 	br	80694 <getc+0x2c>
   806e0:	89000017 	ldw	r4,0(r17)
   806e4:	800b883a 	mov	r5,r16
   806e8:	00808280 	call	80828 <__srget_r>
   806ec:	1021883a 	mov	r16,r2
   806f0:	003ff106 	br	806b8 <getc+0x50>

000806f4 <_printf_r>:
   806f4:	defffd04 	addi	sp,sp,-12
   806f8:	dfc00015 	stw	ra,0(sp)
   806fc:	d9800115 	stw	r6,4(sp)
   80700:	d9c00215 	stw	r7,8(sp)
   80704:	280d883a 	mov	r6,r5
   80708:	21400217 	ldw	r5,8(r4)
   8070c:	d9c00104 	addi	r7,sp,4
   80710:	008093c0 	call	8093c <___vfprintf_internal_r>
   80714:	dfc00017 	ldw	ra,0(sp)
   80718:	dec00304 	addi	sp,sp,12
   8071c:	f800283a 	ret

00080720 <printf>:
   80720:	defffc04 	addi	sp,sp,-16
   80724:	dfc00015 	stw	ra,0(sp)
   80728:	d9400115 	stw	r5,4(sp)
   8072c:	d9800215 	stw	r6,8(sp)
   80730:	d9c00315 	stw	r7,12(sp)
   80734:	00800274 	movhi	r2,9
   80738:	10866404 	addi	r2,r2,6544
   8073c:	10800017 	ldw	r2,0(r2)
   80740:	200b883a 	mov	r5,r4
   80744:	d9800104 	addi	r6,sp,4
   80748:	11000217 	ldw	r4,8(r2)
   8074c:	0082a900 	call	82a90 <__vfprintf_internal>
   80750:	dfc00017 	ldw	ra,0(sp)
   80754:	dec00404 	addi	sp,sp,16
   80758:	f800283a 	ret

0008075c <_puts_r>:
   8075c:	defff604 	addi	sp,sp,-40
   80760:	dc400815 	stw	r17,32(sp)
   80764:	2023883a 	mov	r17,r4
   80768:	2809883a 	mov	r4,r5
   8076c:	dc000715 	stw	r16,28(sp)
   80770:	dfc00915 	stw	ra,36(sp)
   80774:	2821883a 	mov	r16,r5
   80778:	00808b00 	call	808b0 <strlen>
   8077c:	00c00274 	movhi	r3,9
   80780:	18c66404 	addi	r3,r3,6544
   80784:	18c00017 	ldw	r3,0(r3)
   80788:	11000044 	addi	r4,r2,1
   8078c:	d8800115 	stw	r2,4(sp)
   80790:	18c00217 	ldw	r3,8(r3)
   80794:	00800274 	movhi	r2,9
   80798:	10befb04 	addi	r2,r2,-1044
   8079c:	d8800215 	stw	r2,8(sp)
   807a0:	1940030b 	ldhu	r5,12(r3)
   807a4:	00800044 	movi	r2,1
   807a8:	d8800315 	stw	r2,12(sp)
   807ac:	00800084 	movi	r2,2
   807b0:	d8800515 	stw	r2,20(sp)
   807b4:	dc000015 	stw	r16,0(sp)
   807b8:	d9000615 	stw	r4,24(sp)
   807bc:	dec00415 	stw	sp,16(sp)
   807c0:	2888000c 	andi	r2,r5,8192
   807c4:	1000061e 	bne	r2,zero,807e0 <_puts_r+0x84>
   807c8:	19001917 	ldw	r4,100(r3)
   807cc:	00b7ffc4 	movi	r2,-8193
   807d0:	29480014 	ori	r5,r5,8192
   807d4:	2084703a 	and	r2,r4,r2
   807d8:	1940030d 	sth	r5,12(r3)
   807dc:	18801915 	stw	r2,100(r3)
   807e0:	89400217 	ldw	r5,8(r17)
   807e4:	8809883a 	mov	r4,r17
   807e8:	d9800404 	addi	r6,sp,16
   807ec:	0084e740 	call	84e74 <__sfvwrite_r>
   807f0:	1000061e 	bne	r2,zero,8080c <_puts_r+0xb0>
   807f4:	00800284 	movi	r2,10
   807f8:	dfc00917 	ldw	ra,36(sp)
   807fc:	dc400817 	ldw	r17,32(sp)
   80800:	dc000717 	ldw	r16,28(sp)
   80804:	dec00a04 	addi	sp,sp,40
   80808:	f800283a 	ret
   8080c:	00bfffc4 	movi	r2,-1
   80810:	003ff906 	br	807f8 <_puts_r+0x9c>

00080814 <puts>:
   80814:	00800274 	movhi	r2,9
   80818:	10866404 	addi	r2,r2,6544
   8081c:	200b883a 	mov	r5,r4
   80820:	11000017 	ldw	r4,0(r2)
   80824:	008075c1 	jmpi	8075c <_puts_r>

00080828 <__srget_r>:
   80828:	defffd04 	addi	sp,sp,-12
   8082c:	dc400115 	stw	r17,4(sp)
   80830:	dc000015 	stw	r16,0(sp)
   80834:	dfc00215 	stw	ra,8(sp)
   80838:	2023883a 	mov	r17,r4
   8083c:	2821883a 	mov	r16,r5
   80840:	20000226 	beq	r4,zero,8084c <__srget_r+0x24>
   80844:	20800e17 	ldw	r2,56(r4)
   80848:	10001026 	beq	r2,zero,8088c <__srget_r+0x64>
   8084c:	8809883a 	mov	r4,r17
   80850:	800b883a 	mov	r5,r16
   80854:	00878b80 	call	878b8 <__srefill_r>
   80858:	10000e1e 	bne	r2,zero,80894 <__srget_r+0x6c>
   8085c:	80800017 	ldw	r2,0(r16)
   80860:	81000117 	ldw	r4,4(r16)
   80864:	10c00044 	addi	r3,r2,1
   80868:	213fffc4 	addi	r4,r4,-1
   8086c:	81000115 	stw	r4,4(r16)
   80870:	80c00015 	stw	r3,0(r16)
   80874:	10800003 	ldbu	r2,0(r2)
   80878:	dfc00217 	ldw	ra,8(sp)
   8087c:	dc400117 	ldw	r17,4(sp)
   80880:	dc000017 	ldw	r16,0(sp)
   80884:	dec00304 	addi	sp,sp,12
   80888:	f800283a 	ret
   8088c:	00847700 	call	84770 <__sinit>
   80890:	003fee06 	br	8084c <__srget_r+0x24>
   80894:	00bfffc4 	movi	r2,-1
   80898:	003ff706 	br	80878 <__srget_r+0x50>

0008089c <__srget>:
   8089c:	00800274 	movhi	r2,9
   808a0:	10866404 	addi	r2,r2,6544
   808a4:	200b883a 	mov	r5,r4
   808a8:	11000017 	ldw	r4,0(r2)
   808ac:	00808281 	jmpi	80828 <__srget_r>

000808b0 <strlen>:
   808b0:	208000cc 	andi	r2,r4,3
   808b4:	10001d26 	beq	r2,zero,8092c <strlen+0x7c>
   808b8:	20800007 	ldb	r2,0(r4)
   808bc:	10001d26 	beq	r2,zero,80934 <strlen+0x84>
   808c0:	2005883a 	mov	r2,r4
   808c4:	00000206 	br	808d0 <strlen+0x20>
   808c8:	10c00007 	ldb	r3,0(r2)
   808cc:	18001526 	beq	r3,zero,80924 <strlen+0x74>
   808d0:	10800044 	addi	r2,r2,1
   808d4:	10c000cc 	andi	r3,r2,3
   808d8:	183ffb1e 	bne	r3,zero,808c8 <strlen+0x18>
   808dc:	10c00017 	ldw	r3,0(r2)
   808e0:	01ffbff4 	movhi	r7,65279
   808e4:	39ffbfc4 	addi	r7,r7,-257
   808e8:	01a02074 	movhi	r6,32897
   808ec:	31a02004 	addi	r6,r6,-32640
   808f0:	00000206 	br	808fc <strlen+0x4c>
   808f4:	10800104 	addi	r2,r2,4
   808f8:	10c00017 	ldw	r3,0(r2)
   808fc:	19cb883a 	add	r5,r3,r7
   80900:	00c6303a 	nor	r3,zero,r3
   80904:	28c6703a 	and	r3,r5,r3
   80908:	1986703a 	and	r3,r3,r6
   8090c:	183ff926 	beq	r3,zero,808f4 <strlen+0x44>
   80910:	10c00007 	ldb	r3,0(r2)
   80914:	18000326 	beq	r3,zero,80924 <strlen+0x74>
   80918:	10800044 	addi	r2,r2,1
   8091c:	10c00007 	ldb	r3,0(r2)
   80920:	183ffd1e 	bne	r3,zero,80918 <strlen+0x68>
   80924:	1105c83a 	sub	r2,r2,r4
   80928:	f800283a 	ret
   8092c:	2005883a 	mov	r2,r4
   80930:	003fea06 	br	808dc <strlen+0x2c>
   80934:	0005883a 	mov	r2,zero
   80938:	f800283a 	ret

0008093c <___vfprintf_internal_r>:
   8093c:	defeb604 	addi	sp,sp,-1320
   80940:	dfc14915 	stw	ra,1316(sp)
   80944:	dcc14315 	stw	r19,1292(sp)
   80948:	dc414115 	stw	r17,1284(sp)
   8094c:	d9012c15 	stw	r4,1200(sp)
   80950:	2827883a 	mov	r19,r5
   80954:	3023883a 	mov	r17,r6
   80958:	d9c12f15 	stw	r7,1212(sp)
   8095c:	df014815 	stw	fp,1312(sp)
   80960:	ddc14715 	stw	r23,1308(sp)
   80964:	dd814615 	stw	r22,1304(sp)
   80968:	dd414515 	stw	r21,1300(sp)
   8096c:	dd014415 	stw	r20,1296(sp)
   80970:	dc814215 	stw	r18,1288(sp)
   80974:	dc014015 	stw	r16,1280(sp)
   80978:	00855200 	call	85520 <_localeconv_r>
   8097c:	10800017 	ldw	r2,0(r2)
   80980:	1009883a 	mov	r4,r2
   80984:	d8813415 	stw	r2,1232(sp)
   80988:	00808b00 	call	808b0 <strlen>
   8098c:	d8813815 	stw	r2,1248(sp)
   80990:	d8812c17 	ldw	r2,1200(sp)
   80994:	10000226 	beq	r2,zero,809a0 <___vfprintf_internal_r+0x64>
   80998:	10800e17 	ldw	r2,56(r2)
   8099c:	10010826 	beq	r2,zero,80dc0 <___vfprintf_internal_r+0x484>
   809a0:	9880030b 	ldhu	r2,12(r19)
   809a4:	1108000c 	andi	r4,r2,8192
   809a8:	1007883a 	mov	r3,r2
   809ac:	2000071e 	bne	r4,zero,809cc <___vfprintf_internal_r+0x90>
   809b0:	99001917 	ldw	r4,100(r19)
   809b4:	10c80014 	ori	r3,r2,8192
   809b8:	00b7ffc4 	movi	r2,-8193
   809bc:	2088703a 	and	r4,r4,r2
   809c0:	98c0030d 	sth	r3,12(r19)
   809c4:	1805883a 	mov	r2,r3
   809c8:	99001915 	stw	r4,100(r19)
   809cc:	1900020c 	andi	r4,r3,8
   809d0:	2000ab26 	beq	r4,zero,80c80 <___vfprintf_internal_r+0x344>
   809d4:	99000417 	ldw	r4,16(r19)
   809d8:	2000a926 	beq	r4,zero,80c80 <___vfprintf_internal_r+0x344>
   809dc:	18c0068c 	andi	r3,r3,26
   809e0:	01000284 	movi	r4,10
   809e4:	1900af26 	beq	r3,r4,80ca4 <___vfprintf_internal_r+0x368>
   809e8:	d9010dc4 	addi	r4,sp,1079
   809ec:	d9410e04 	addi	r5,sp,1080
   809f0:	d8800404 	addi	r2,sp,16
   809f4:	2907c83a 	sub	r3,r5,r4
   809f8:	d9012815 	stw	r4,1184(sp)
   809fc:	d9412915 	stw	r5,1188(sp)
   80a00:	d8811e15 	stw	r2,1144(sp)
   80a04:	d8012015 	stw	zero,1152(sp)
   80a08:	d8011f15 	stw	zero,1148(sp)
   80a0c:	d8013515 	stw	zero,1236(sp)
   80a10:	d8013715 	stw	zero,1244(sp)
   80a14:	d8013915 	stw	zero,1252(sp)
   80a18:	d8013b15 	stw	zero,1260(sp)
   80a1c:	d8013a15 	stw	zero,1256(sp)
   80a20:	d8013115 	stw	zero,1220(sp)
   80a24:	1011883a 	mov	r8,r2
   80a28:	05c00274 	movhi	r23,9
   80a2c:	bdff0c84 	addi	r23,r23,-974
   80a30:	d8c13d15 	stw	r3,1268(sp)
   80a34:	88800007 	ldb	r2,0(r17)
   80a38:	10021126 	beq	r2,zero,81280 <___vfprintf_internal_r+0x944>
   80a3c:	00c00944 	movi	r3,37
   80a40:	8821883a 	mov	r16,r17
   80a44:	10c0021e 	bne	r2,r3,80a50 <___vfprintf_internal_r+0x114>
   80a48:	00001406 	br	80a9c <___vfprintf_internal_r+0x160>
   80a4c:	10c00326 	beq	r2,r3,80a5c <___vfprintf_internal_r+0x120>
   80a50:	84000044 	addi	r16,r16,1
   80a54:	80800007 	ldb	r2,0(r16)
   80a58:	103ffc1e 	bne	r2,zero,80a4c <___vfprintf_internal_r+0x110>
   80a5c:	8465c83a 	sub	r18,r16,r17
   80a60:	90000e26 	beq	r18,zero,80a9c <___vfprintf_internal_r+0x160>
   80a64:	d8c12017 	ldw	r3,1152(sp)
   80a68:	d8811f17 	ldw	r2,1148(sp)
   80a6c:	44400015 	stw	r17,0(r8)
   80a70:	1c87883a 	add	r3,r3,r18
   80a74:	10800044 	addi	r2,r2,1
   80a78:	d8c12015 	stw	r3,1152(sp)
   80a7c:	44800115 	stw	r18,4(r8)
   80a80:	d8811f15 	stw	r2,1148(sp)
   80a84:	00c001c4 	movi	r3,7
   80a88:	1880bb16 	blt	r3,r2,80d78 <___vfprintf_internal_r+0x43c>
   80a8c:	42000204 	addi	r8,r8,8
   80a90:	d9013117 	ldw	r4,1220(sp)
   80a94:	2489883a 	add	r4,r4,r18
   80a98:	d9013115 	stw	r4,1220(sp)
   80a9c:	80800007 	ldb	r2,0(r16)
   80aa0:	1000bc26 	beq	r2,zero,80d94 <___vfprintf_internal_r+0x458>
   80aa4:	053fffc4 	movi	r20,-1
   80aa8:	84400044 	addi	r17,r16,1
   80aac:	84800047 	ldb	r18,1(r16)
   80ab0:	d8012785 	stb	zero,1182(sp)
   80ab4:	002d883a 	mov	r22,zero
   80ab8:	d8013015 	stw	zero,1216(sp)
   80abc:	d8012a15 	stw	zero,1192(sp)
   80ac0:	04001604 	movi	r16,88
   80ac4:	05400244 	movi	r21,9
   80ac8:	4039883a 	mov	fp,r8
   80acc:	a007883a 	mov	r3,r20
   80ad0:	8c400044 	addi	r17,r17,1
   80ad4:	90bff804 	addi	r2,r18,-32
   80ad8:	80832036 	bltu	r16,r2,8175c <___vfprintf_internal_r+0xe20>
   80adc:	1085883a 	add	r2,r2,r2
   80ae0:	1085883a 	add	r2,r2,r2
   80ae4:	01400234 	movhi	r5,8
   80ae8:	2942be04 	addi	r5,r5,2808
   80aec:	1145883a 	add	r2,r2,r5
   80af0:	10800017 	ldw	r2,0(r2)
   80af4:	1000683a 	jmp	r2
   80af8:	000814fc 	xorhi	zero,zero,8275
   80afc:	0008175c 	xori	zero,zero,8285
   80b00:	0008175c 	xori	zero,zero,8285
   80b04:	00081518 	cmpnei	zero,zero,8276
   80b08:	0008175c 	xori	zero,zero,8285
   80b0c:	0008175c 	xori	zero,zero,8285
   80b10:	0008175c 	xori	zero,zero,8285
   80b14:	0008175c 	xori	zero,zero,8285
   80b18:	0008175c 	xori	zero,zero,8285
   80b1c:	0008175c 	xori	zero,zero,8285
   80b20:	0008152c 	andhi	zero,zero,8276
   80b24:	00080dcc 	andi	zero,zero,8247
   80b28:	0008175c 	xori	zero,zero,8285
   80b2c:	00080c6c 	andhi	zero,zero,8241
   80b30:	00080dd8 	cmpnei	zero,zero,8247
   80b34:	0008175c 	xori	zero,zero,8285
   80b38:	00080e28 	cmpgeui	zero,zero,8248
   80b3c:	00081338 	rdprs	zero,zero,8268
   80b40:	00081338 	rdprs	zero,zero,8268
   80b44:	00081338 	rdprs	zero,zero,8268
   80b48:	00081338 	rdprs	zero,zero,8268
   80b4c:	00081338 	rdprs	zero,zero,8268
   80b50:	00081338 	rdprs	zero,zero,8268
   80b54:	00081338 	rdprs	zero,zero,8268
   80b58:	00081338 	rdprs	zero,zero,8268
   80b5c:	00081338 	rdprs	zero,zero,8268
   80b60:	0008175c 	xori	zero,zero,8285
   80b64:	0008175c 	xori	zero,zero,8285
   80b68:	0008175c 	xori	zero,zero,8285
   80b6c:	0008175c 	xori	zero,zero,8285
   80b70:	0008175c 	xori	zero,zero,8285
   80b74:	0008175c 	xori	zero,zero,8285
   80b78:	0008175c 	xori	zero,zero,8285
   80b7c:	0008175c 	xori	zero,zero,8285
   80b80:	0008175c 	xori	zero,zero,8285
   80b84:	0008175c 	xori	zero,zero,8285
   80b88:	00080e3c 	xorhi	zero,zero,8248
   80b8c:	00081288 	cmpgei	zero,zero,8266
   80b90:	0008175c 	xori	zero,zero,8285
   80b94:	00081288 	cmpgei	zero,zero,8266
   80b98:	0008175c 	xori	zero,zero,8285
   80b9c:	0008175c 	xori	zero,zero,8285
   80ba0:	0008175c 	xori	zero,zero,8285
   80ba4:	0008175c 	xori	zero,zero,8285
   80ba8:	00081380 	call	8138 <__alt_mem_onchip_memory2-0x77ec8>
   80bac:	0008175c 	xori	zero,zero,8285
   80bb0:	0008175c 	xori	zero,zero,8285
   80bb4:	00081394 	movui	zero,8270
   80bb8:	0008175c 	xori	zero,zero,8285
   80bbc:	0008175c 	xori	zero,zero,8285
   80bc0:	0008175c 	xori	zero,zero,8285
   80bc4:	0008175c 	xori	zero,zero,8285
   80bc8:	0008175c 	xori	zero,zero,8285
   80bcc:	000813dc 	xori	zero,zero,8271
   80bd0:	0008175c 	xori	zero,zero,8285
   80bd4:	0008175c 	xori	zero,zero,8285
   80bd8:	00081550 	cmplti	zero,zero,8277
   80bdc:	0008175c 	xori	zero,zero,8285
   80be0:	0008175c 	xori	zero,zero,8285
   80be4:	0008175c 	xori	zero,zero,8285
   80be8:	0008175c 	xori	zero,zero,8285
   80bec:	0008175c 	xori	zero,zero,8285
   80bf0:	0008175c 	xori	zero,zero,8285
   80bf4:	0008175c 	xori	zero,zero,8285
   80bf8:	0008175c 	xori	zero,zero,8285
   80bfc:	0008175c 	xori	zero,zero,8285
   80c00:	0008175c 	xori	zero,zero,8285
   80c04:	00081454 	movui	zero,8273
   80c08:	000815cc 	andi	zero,zero,8279
   80c0c:	00081288 	cmpgei	zero,zero,8266
   80c10:	00081288 	cmpgei	zero,zero,8266
   80c14:	00081288 	cmpgei	zero,zero,8266
   80c18:	00081598 	cmpnei	zero,zero,8278
   80c1c:	000815cc 	andi	zero,zero,8279
   80c20:	0008175c 	xori	zero,zero,8285
   80c24:	0008175c 	xori	zero,zero,8285
   80c28:	000815ac 	andhi	zero,zero,8278
   80c2c:	0008175c 	xori	zero,zero,8285
   80c30:	0008141c 	xori	zero,zero,8272
   80c34:	000816dc 	xori	zero,zero,8283
   80c38:	00081688 	cmpgei	zero,zero,8282
   80c3c:	0008160c 	andi	zero,zero,8280
   80c40:	0008175c 	xori	zero,zero,8285
   80c44:	00081620 	cmpeqi	zero,zero,8280
   80c48:	0008175c 	xori	zero,zero,8285
   80c4c:	0008171c 	xori	zero,zero,8284
   80c50:	0008175c 	xori	zero,zero,8285
   80c54:	0008175c 	xori	zero,zero,8285
   80c58:	00081494 	movui	zero,8274
   80c5c:	d9413017 	ldw	r5,1216(sp)
   80c60:	d8812f15 	stw	r2,1212(sp)
   80c64:	014bc83a 	sub	r5,zero,r5
   80c68:	d9413015 	stw	r5,1216(sp)
   80c6c:	d8812a17 	ldw	r2,1192(sp)
   80c70:	10800114 	ori	r2,r2,4
   80c74:	d8812a15 	stw	r2,1192(sp)
   80c78:	8c800007 	ldb	r18,0(r17)
   80c7c:	003f9406 	br	80ad0 <___vfprintf_internal_r+0x194>
   80c80:	d9012c17 	ldw	r4,1200(sp)
   80c84:	980b883a 	mov	r5,r19
   80c88:	0082ab40 	call	82ab4 <__swsetup_r>
   80c8c:	10002d1e 	bne	r2,zero,80d44 <___vfprintf_internal_r+0x408>
   80c90:	9880030b 	ldhu	r2,12(r19)
   80c94:	01000284 	movi	r4,10
   80c98:	1007883a 	mov	r3,r2
   80c9c:	18c0068c 	andi	r3,r3,26
   80ca0:	193f511e 	bne	r3,r4,809e8 <___vfprintf_internal_r+0xac>
   80ca4:	98c0038b 	ldhu	r3,14(r19)
   80ca8:	193fffcc 	andi	r4,r3,65535
   80cac:	2120001c 	xori	r4,r4,32768
   80cb0:	21200004 	addi	r4,r4,-32768
   80cb4:	203f4c16 	blt	r4,zero,809e8 <___vfprintf_internal_r+0xac>
   80cb8:	9ac01917 	ldw	r11,100(r19)
   80cbc:	9a800717 	ldw	r10,28(r19)
   80cc0:	9a400917 	ldw	r9,36(r19)
   80cc4:	d9012c17 	ldw	r4,1200(sp)
   80cc8:	d9c12f17 	ldw	r7,1212(sp)
   80ccc:	02010004 	movi	r8,1024
   80cd0:	10bfff4c 	andi	r2,r2,65533
   80cd4:	d8c1078d 	sth	r3,1054(sp)
   80cd8:	d9410404 	addi	r5,sp,1040
   80cdc:	d8c00404 	addi	r3,sp,16
   80ce0:	880d883a 	mov	r6,r17
   80ce4:	d881070d 	sth	r2,1052(sp)
   80ce8:	dac11d15 	stw	r11,1140(sp)
   80cec:	da810b15 	stw	r10,1068(sp)
   80cf0:	da410d15 	stw	r9,1076(sp)
   80cf4:	d8c10415 	stw	r3,1040(sp)
   80cf8:	d8c10815 	stw	r3,1056(sp)
   80cfc:	da010615 	stw	r8,1048(sp)
   80d00:	da010915 	stw	r8,1060(sp)
   80d04:	d8010a15 	stw	zero,1064(sp)
   80d08:	008093c0 	call	8093c <___vfprintf_internal_r>
   80d0c:	1021883a 	mov	r16,r2
   80d10:	10000416 	blt	r2,zero,80d24 <___vfprintf_internal_r+0x3e8>
   80d14:	d9012c17 	ldw	r4,1200(sp)
   80d18:	d9410404 	addi	r5,sp,1040
   80d1c:	00844500 	call	84450 <_fflush_r>
   80d20:	10072a1e 	bne	r2,zero,829cc <___vfprintf_internal_r+0x2090>
   80d24:	d881070b 	ldhu	r2,1052(sp)
   80d28:	1080100c 	andi	r2,r2,64
   80d2c:	10000326 	beq	r2,zero,80d3c <___vfprintf_internal_r+0x400>
   80d30:	9880030b 	ldhu	r2,12(r19)
   80d34:	10801014 	ori	r2,r2,64
   80d38:	9880030d 	sth	r2,12(r19)
   80d3c:	8005883a 	mov	r2,r16
   80d40:	00000106 	br	80d48 <___vfprintf_internal_r+0x40c>
   80d44:	00bfffc4 	movi	r2,-1
   80d48:	dfc14917 	ldw	ra,1316(sp)
   80d4c:	df014817 	ldw	fp,1312(sp)
   80d50:	ddc14717 	ldw	r23,1308(sp)
   80d54:	dd814617 	ldw	r22,1304(sp)
   80d58:	dd414517 	ldw	r21,1300(sp)
   80d5c:	dd014417 	ldw	r20,1296(sp)
   80d60:	dcc14317 	ldw	r19,1292(sp)
   80d64:	dc814217 	ldw	r18,1288(sp)
   80d68:	dc414117 	ldw	r17,1284(sp)
   80d6c:	dc014017 	ldw	r16,1280(sp)
   80d70:	dec14a04 	addi	sp,sp,1320
   80d74:	f800283a 	ret
   80d78:	d9012c17 	ldw	r4,1200(sp)
   80d7c:	980b883a 	mov	r5,r19
   80d80:	d9811e04 	addi	r6,sp,1144
   80d84:	0087e380 	call	87e38 <__sprint_r>
   80d88:	1000081e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   80d8c:	da000404 	addi	r8,sp,16
   80d90:	003f3f06 	br	80a90 <___vfprintf_internal_r+0x154>
   80d94:	d8812017 	ldw	r2,1152(sp)
   80d98:	10000426 	beq	r2,zero,80dac <___vfprintf_internal_r+0x470>
   80d9c:	d9012c17 	ldw	r4,1200(sp)
   80da0:	980b883a 	mov	r5,r19
   80da4:	d9811e04 	addi	r6,sp,1144
   80da8:	0087e380 	call	87e38 <__sprint_r>
   80dac:	9880030b 	ldhu	r2,12(r19)
   80db0:	1080100c 	andi	r2,r2,64
   80db4:	103fe31e 	bne	r2,zero,80d44 <___vfprintf_internal_r+0x408>
   80db8:	d8813117 	ldw	r2,1220(sp)
   80dbc:	003fe206 	br	80d48 <___vfprintf_internal_r+0x40c>
   80dc0:	d9012c17 	ldw	r4,1200(sp)
   80dc4:	00847700 	call	84770 <__sinit>
   80dc8:	003ef506 	br	809a0 <___vfprintf_internal_r+0x64>
   80dcc:	05800ac4 	movi	r22,43
   80dd0:	8c800007 	ldb	r18,0(r17)
   80dd4:	003f3e06 	br	80ad0 <___vfprintf_internal_r+0x194>
   80dd8:	8c800007 	ldb	r18,0(r17)
   80ddc:	00c00a84 	movi	r3,42
   80de0:	88800044 	addi	r2,r17,1
   80de4:	90c6fb26 	beq	r18,r3,829d4 <___vfprintf_internal_r+0x2098>
   80de8:	953ff404 	addi	r20,r18,-48
   80dec:	1023883a 	mov	r17,r2
   80df0:	0007883a 	mov	r3,zero
   80df4:	ad3f3736 	bltu	r21,r20,80ad4 <___vfprintf_internal_r+0x198>
   80df8:	0009883a 	mov	r4,zero
   80dfc:	01400284 	movi	r5,10
   80e00:	008aa780 	call	8aa78 <__mulsi3>
   80e04:	8c800007 	ldb	r18,0(r17)
   80e08:	a089883a 	add	r4,r20,r2
   80e0c:	8c400044 	addi	r17,r17,1
   80e10:	953ff404 	addi	r20,r18,-48
   80e14:	ad3ff92e 	bgeu	r21,r20,80dfc <___vfprintf_internal_r+0x4c0>
   80e18:	2007883a 	mov	r3,r4
   80e1c:	203f2d0e 	bge	r4,zero,80ad4 <___vfprintf_internal_r+0x198>
   80e20:	00ffffc4 	movi	r3,-1
   80e24:	003f2b06 	br	80ad4 <___vfprintf_internal_r+0x198>
   80e28:	d9412a17 	ldw	r5,1192(sp)
   80e2c:	29402014 	ori	r5,r5,128
   80e30:	d9412a15 	stw	r5,1192(sp)
   80e34:	8c800007 	ldb	r18,0(r17)
   80e38:	003f2506 	br	80ad0 <___vfprintf_internal_r+0x194>
   80e3c:	d9412a17 	ldw	r5,1192(sp)
   80e40:	1829883a 	mov	r20,r3
   80e44:	dd812785 	stb	r22,1182(sp)
   80e48:	29400414 	ori	r5,r5,16
   80e4c:	d9412a15 	stw	r5,1192(sp)
   80e50:	d8c12a17 	ldw	r3,1192(sp)
   80e54:	e011883a 	mov	r8,fp
   80e58:	1880080c 	andi	r2,r3,32
   80e5c:	1001e126 	beq	r2,zero,815e4 <___vfprintf_internal_r+0xca8>
   80e60:	d9012f17 	ldw	r4,1212(sp)
   80e64:	20800117 	ldw	r2,4(r4)
   80e68:	25400017 	ldw	r21,0(r4)
   80e6c:	21000204 	addi	r4,r4,8
   80e70:	d9012f15 	stw	r4,1212(sp)
   80e74:	102d883a 	mov	r22,r2
   80e78:	10046916 	blt	r2,zero,82020 <___vfprintf_internal_r+0x16e4>
   80e7c:	df012783 	ldbu	fp,1182(sp)
   80e80:	00c00044 	movi	r3,1
   80e84:	ad84b03a 	or	r2,r21,r22
   80e88:	a0000416 	blt	r20,zero,80e9c <___vfprintf_internal_r+0x560>
   80e8c:	d9412a17 	ldw	r5,1192(sp)
   80e90:	013fdfc4 	movi	r4,-129
   80e94:	290a703a 	and	r5,r5,r4
   80e98:	d9412a15 	stw	r5,1192(sp)
   80e9c:	1002491e 	bne	r2,zero,817c4 <___vfprintf_internal_r+0xe88>
   80ea0:	a002481e 	bne	r20,zero,817c4 <___vfprintf_internal_r+0xe88>
   80ea4:	18c03fcc 	andi	r3,r3,255
   80ea8:	1803871e 	bne	r3,zero,81cc8 <___vfprintf_internal_r+0x138c>
   80eac:	d9012a17 	ldw	r4,1192(sp)
   80eb0:	2080004c 	andi	r2,r4,1
   80eb4:	10038426 	beq	r2,zero,81cc8 <___vfprintf_internal_r+0x138c>
   80eb8:	d9413d17 	ldw	r5,1268(sp)
   80ebc:	00800c04 	movi	r2,48
   80ec0:	d8810dc5 	stb	r2,1079(sp)
   80ec4:	d9412e15 	stw	r5,1208(sp)
   80ec8:	dc010dc4 	addi	r16,sp,1079
   80ecc:	d8812e17 	ldw	r2,1208(sp)
   80ed0:	1500010e 	bge	r2,r20,80ed8 <___vfprintf_internal_r+0x59c>
   80ed4:	a005883a 	mov	r2,r20
   80ed8:	d8812b15 	stw	r2,1196(sp)
   80edc:	d8013315 	stw	zero,1228(sp)
   80ee0:	e0803fcc 	andi	r2,fp,255
   80ee4:	1080201c 	xori	r2,r2,128
   80ee8:	10bfe004 	addi	r2,r2,-128
   80eec:	10000326 	beq	r2,zero,80efc <___vfprintf_internal_r+0x5c0>
   80ef0:	d8c12b17 	ldw	r3,1196(sp)
   80ef4:	18c00044 	addi	r3,r3,1
   80ef8:	d8c12b15 	stw	r3,1196(sp)
   80efc:	d8c12a17 	ldw	r3,1192(sp)
   80f00:	18c0008c 	andi	r3,r3,2
   80f04:	d8c12d15 	stw	r3,1204(sp)
   80f08:	18000326 	beq	r3,zero,80f18 <___vfprintf_internal_r+0x5dc>
   80f0c:	d8c12b17 	ldw	r3,1196(sp)
   80f10:	18c00084 	addi	r3,r3,2
   80f14:	d8c12b15 	stw	r3,1196(sp)
   80f18:	d8c12a17 	ldw	r3,1192(sp)
   80f1c:	18c0210c 	andi	r3,r3,132
   80f20:	d8c13215 	stw	r3,1224(sp)
   80f24:	1802151e 	bne	r3,zero,8177c <___vfprintf_internal_r+0xe40>
   80f28:	d9013017 	ldw	r4,1216(sp)
   80f2c:	d8c12b17 	ldw	r3,1196(sp)
   80f30:	20f9c83a 	sub	fp,r4,r3
   80f34:	0702110e 	bge	zero,fp,8177c <___vfprintf_internal_r+0xe40>
   80f38:	02400404 	movi	r9,16
   80f3c:	d8c12017 	ldw	r3,1152(sp)
   80f40:	d8811f17 	ldw	r2,1148(sp)
   80f44:	4f059a0e 	bge	r9,fp,825b0 <___vfprintf_internal_r+0x1c74>
   80f48:	8809883a 	mov	r4,r17
   80f4c:	01400274 	movhi	r5,9
   80f50:	297f1084 	addi	r5,r5,-958
   80f54:	dc013c15 	stw	r16,1264(sp)
   80f58:	e023883a 	mov	r17,fp
   80f5c:	d9413615 	stw	r5,1240(sp)
   80f60:	482d883a 	mov	r22,r9
   80f64:	054001c4 	movi	r21,7
   80f68:	dc012c17 	ldw	r16,1200(sp)
   80f6c:	2039883a 	mov	fp,r4
   80f70:	00000306 	br	80f80 <___vfprintf_internal_r+0x644>
   80f74:	8c7ffc04 	addi	r17,r17,-16
   80f78:	42000204 	addi	r8,r8,8
   80f7c:	b440130e 	bge	r22,r17,80fcc <___vfprintf_internal_r+0x690>
   80f80:	18c00404 	addi	r3,r3,16
   80f84:	10800044 	addi	r2,r2,1
   80f88:	01000274 	movhi	r4,9
   80f8c:	213f1084 	addi	r4,r4,-958
   80f90:	41000015 	stw	r4,0(r8)
   80f94:	45800115 	stw	r22,4(r8)
   80f98:	d8c12015 	stw	r3,1152(sp)
   80f9c:	d8811f15 	stw	r2,1148(sp)
   80fa0:	a8bff40e 	bge	r21,r2,80f74 <___vfprintf_internal_r+0x638>
   80fa4:	8009883a 	mov	r4,r16
   80fa8:	980b883a 	mov	r5,r19
   80fac:	d9811e04 	addi	r6,sp,1144
   80fb0:	0087e380 	call	87e38 <__sprint_r>
   80fb4:	103f7d1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   80fb8:	8c7ffc04 	addi	r17,r17,-16
   80fbc:	d8c12017 	ldw	r3,1152(sp)
   80fc0:	d8811f17 	ldw	r2,1148(sp)
   80fc4:	da000404 	addi	r8,sp,16
   80fc8:	b47fed16 	blt	r22,r17,80f80 <___vfprintf_internal_r+0x644>
   80fcc:	dc013c17 	ldw	r16,1264(sp)
   80fd0:	e009883a 	mov	r4,fp
   80fd4:	8839883a 	mov	fp,r17
   80fd8:	2023883a 	mov	r17,r4
   80fdc:	d9413617 	ldw	r5,1240(sp)
   80fe0:	e0c7883a 	add	r3,fp,r3
   80fe4:	10800044 	addi	r2,r2,1
   80fe8:	41400015 	stw	r5,0(r8)
   80fec:	47000115 	stw	fp,4(r8)
   80ff0:	d8c12015 	stw	r3,1152(sp)
   80ff4:	d8811f15 	stw	r2,1148(sp)
   80ff8:	010001c4 	movi	r4,7
   80ffc:	20836b16 	blt	r4,r2,81dac <___vfprintf_internal_r+0x1470>
   81000:	d8812787 	ldb	r2,1182(sp)
   81004:	42000204 	addi	r8,r8,8
   81008:	10000c26 	beq	r2,zero,8103c <___vfprintf_internal_r+0x700>
   8100c:	d8811f17 	ldw	r2,1148(sp)
   81010:	d9012784 	addi	r4,sp,1182
   81014:	18c00044 	addi	r3,r3,1
   81018:	10800044 	addi	r2,r2,1
   8101c:	41000015 	stw	r4,0(r8)
   81020:	01000044 	movi	r4,1
   81024:	41000115 	stw	r4,4(r8)
   81028:	d8c12015 	stw	r3,1152(sp)
   8102c:	d8811f15 	stw	r2,1148(sp)
   81030:	010001c4 	movi	r4,7
   81034:	2082ef16 	blt	r4,r2,81bf4 <___vfprintf_internal_r+0x12b8>
   81038:	42000204 	addi	r8,r8,8
   8103c:	d8812d17 	ldw	r2,1204(sp)
   81040:	10000c26 	beq	r2,zero,81074 <___vfprintf_internal_r+0x738>
   81044:	d8811f17 	ldw	r2,1148(sp)
   81048:	d9012704 	addi	r4,sp,1180
   8104c:	18c00084 	addi	r3,r3,2
   81050:	10800044 	addi	r2,r2,1
   81054:	41000015 	stw	r4,0(r8)
   81058:	01000084 	movi	r4,2
   8105c:	41000115 	stw	r4,4(r8)
   81060:	d8c12015 	stw	r3,1152(sp)
   81064:	d8811f15 	stw	r2,1148(sp)
   81068:	010001c4 	movi	r4,7
   8106c:	2082e916 	blt	r4,r2,81c14 <___vfprintf_internal_r+0x12d8>
   81070:	42000204 	addi	r8,r8,8
   81074:	d9013217 	ldw	r4,1224(sp)
   81078:	00802004 	movi	r2,128
   8107c:	20823226 	beq	r4,r2,81948 <___vfprintf_internal_r+0x100c>
   81080:	d9012e17 	ldw	r4,1208(sp)
   81084:	a129c83a 	sub	r20,r20,r4
   81088:	05002d0e 	bge	zero,r20,81140 <___vfprintf_internal_r+0x804>
   8108c:	05800404 	movi	r22,16
   81090:	d8811f17 	ldw	r2,1148(sp)
   81094:	05400274 	movhi	r21,9
   81098:	ad7f0c84 	addi	r21,r21,-974
   8109c:	b5001f0e 	bge	r22,r20,8111c <___vfprintf_internal_r+0x7e0>
   810a0:	8809883a 	mov	r4,r17
   810a4:	dc012d15 	stw	r16,1204(sp)
   810a8:	a023883a 	mov	r17,r20
   810ac:	070001c4 	movi	fp,7
   810b0:	dc012c17 	ldw	r16,1200(sp)
   810b4:	2029883a 	mov	r20,r4
   810b8:	00000306 	br	810c8 <___vfprintf_internal_r+0x78c>
   810bc:	8c7ffc04 	addi	r17,r17,-16
   810c0:	42000204 	addi	r8,r8,8
   810c4:	b440110e 	bge	r22,r17,8110c <___vfprintf_internal_r+0x7d0>
   810c8:	18c00404 	addi	r3,r3,16
   810cc:	10800044 	addi	r2,r2,1
   810d0:	45c00015 	stw	r23,0(r8)
   810d4:	45800115 	stw	r22,4(r8)
   810d8:	d8c12015 	stw	r3,1152(sp)
   810dc:	d8811f15 	stw	r2,1148(sp)
   810e0:	e0bff60e 	bge	fp,r2,810bc <___vfprintf_internal_r+0x780>
   810e4:	8009883a 	mov	r4,r16
   810e8:	980b883a 	mov	r5,r19
   810ec:	d9811e04 	addi	r6,sp,1144
   810f0:	0087e380 	call	87e38 <__sprint_r>
   810f4:	103f2d1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   810f8:	8c7ffc04 	addi	r17,r17,-16
   810fc:	d8c12017 	ldw	r3,1152(sp)
   81100:	d8811f17 	ldw	r2,1148(sp)
   81104:	da000404 	addi	r8,sp,16
   81108:	b47fef16 	blt	r22,r17,810c8 <___vfprintf_internal_r+0x78c>
   8110c:	dc012d17 	ldw	r16,1204(sp)
   81110:	a009883a 	mov	r4,r20
   81114:	8829883a 	mov	r20,r17
   81118:	2023883a 	mov	r17,r4
   8111c:	1d07883a 	add	r3,r3,r20
   81120:	10800044 	addi	r2,r2,1
   81124:	45400015 	stw	r21,0(r8)
   81128:	45000115 	stw	r20,4(r8)
   8112c:	d8c12015 	stw	r3,1152(sp)
   81130:	d8811f15 	stw	r2,1148(sp)
   81134:	010001c4 	movi	r4,7
   81138:	2082a616 	blt	r4,r2,81bd4 <___vfprintf_internal_r+0x1298>
   8113c:	42000204 	addi	r8,r8,8
   81140:	d9412a17 	ldw	r5,1192(sp)
   81144:	2880400c 	andi	r2,r5,256
   81148:	1001b51e 	bne	r2,zero,81820 <___vfprintf_internal_r+0xee4>
   8114c:	d8812e17 	ldw	r2,1208(sp)
   81150:	d9012e17 	ldw	r4,1208(sp)
   81154:	44000015 	stw	r16,0(r8)
   81158:	1887883a 	add	r3,r3,r2
   8115c:	d8811f17 	ldw	r2,1148(sp)
   81160:	10800044 	addi	r2,r2,1
   81164:	41000115 	stw	r4,4(r8)
   81168:	d8c12015 	stw	r3,1152(sp)
   8116c:	d8811f15 	stw	r2,1148(sp)
   81170:	010001c4 	movi	r4,7
   81174:	20818b16 	blt	r4,r2,817a4 <___vfprintf_internal_r+0xe68>
   81178:	42000204 	addi	r8,r8,8
   8117c:	d9412a17 	ldw	r5,1192(sp)
   81180:	2880010c 	andi	r2,r5,4
   81184:	10003226 	beq	r2,zero,81250 <___vfprintf_internal_r+0x914>
   81188:	d8813017 	ldw	r2,1216(sp)
   8118c:	d9012b17 	ldw	r4,1196(sp)
   81190:	1121c83a 	sub	r16,r2,r4
   81194:	04002e0e 	bge	zero,r16,81250 <___vfprintf_internal_r+0x914>
   81198:	04800404 	movi	r18,16
   8119c:	d8811f17 	ldw	r2,1148(sp)
   811a0:	9405240e 	bge	r18,r16,82634 <___vfprintf_internal_r+0x1cf8>
   811a4:	01000274 	movhi	r4,9
   811a8:	213f1084 	addi	r4,r4,-958
   811ac:	d9013615 	stw	r4,1240(sp)
   811b0:	050001c4 	movi	r20,7
   811b4:	dd412c17 	ldw	r21,1200(sp)
   811b8:	00000306 	br	811c8 <___vfprintf_internal_r+0x88c>
   811bc:	843ffc04 	addi	r16,r16,-16
   811c0:	42000204 	addi	r8,r8,8
   811c4:	9400130e 	bge	r18,r16,81214 <___vfprintf_internal_r+0x8d8>
   811c8:	18c00404 	addi	r3,r3,16
   811cc:	10800044 	addi	r2,r2,1
   811d0:	01400274 	movhi	r5,9
   811d4:	297f1084 	addi	r5,r5,-958
   811d8:	41400015 	stw	r5,0(r8)
   811dc:	44800115 	stw	r18,4(r8)
   811e0:	d8c12015 	stw	r3,1152(sp)
   811e4:	d8811f15 	stw	r2,1148(sp)
   811e8:	a0bff40e 	bge	r20,r2,811bc <___vfprintf_internal_r+0x880>
   811ec:	a809883a 	mov	r4,r21
   811f0:	980b883a 	mov	r5,r19
   811f4:	d9811e04 	addi	r6,sp,1144
   811f8:	0087e380 	call	87e38 <__sprint_r>
   811fc:	103eeb1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81200:	843ffc04 	addi	r16,r16,-16
   81204:	d8c12017 	ldw	r3,1152(sp)
   81208:	d8811f17 	ldw	r2,1148(sp)
   8120c:	da000404 	addi	r8,sp,16
   81210:	943fed16 	blt	r18,r16,811c8 <___vfprintf_internal_r+0x88c>
   81214:	d9013617 	ldw	r4,1240(sp)
   81218:	1c07883a 	add	r3,r3,r16
   8121c:	10800044 	addi	r2,r2,1
   81220:	41000015 	stw	r4,0(r8)
   81224:	44000115 	stw	r16,4(r8)
   81228:	d8c12015 	stw	r3,1152(sp)
   8122c:	d8811f15 	stw	r2,1148(sp)
   81230:	010001c4 	movi	r4,7
   81234:	2080060e 	bge	r4,r2,81250 <___vfprintf_internal_r+0x914>
   81238:	d9012c17 	ldw	r4,1200(sp)
   8123c:	980b883a 	mov	r5,r19
   81240:	d9811e04 	addi	r6,sp,1144
   81244:	0087e380 	call	87e38 <__sprint_r>
   81248:	103ed81e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   8124c:	d8c12017 	ldw	r3,1152(sp)
   81250:	d8812b17 	ldw	r2,1196(sp)
   81254:	d9413017 	ldw	r5,1216(sp)
   81258:	1140010e 	bge	r2,r5,81260 <___vfprintf_internal_r+0x924>
   8125c:	2805883a 	mov	r2,r5
   81260:	d9013117 	ldw	r4,1220(sp)
   81264:	2089883a 	add	r4,r4,r2
   81268:	d9013115 	stw	r4,1220(sp)
   8126c:	1802381e 	bne	r3,zero,81b50 <___vfprintf_internal_r+0x1214>
   81270:	88800007 	ldb	r2,0(r17)
   81274:	d8011f15 	stw	zero,1148(sp)
   81278:	da000404 	addi	r8,sp,16
   8127c:	103def1e 	bne	r2,zero,80a3c <___vfprintf_internal_r+0x100>
   81280:	8821883a 	mov	r16,r17
   81284:	003e0506 	br	80a9c <___vfprintf_internal_r+0x160>
   81288:	1829883a 	mov	r20,r3
   8128c:	d8c12a17 	ldw	r3,1192(sp)
   81290:	dd812785 	stb	r22,1182(sp)
   81294:	e011883a 	mov	r8,fp
   81298:	1880020c 	andi	r2,r3,8
   8129c:	1003c926 	beq	r2,zero,821c4 <___vfprintf_internal_r+0x1888>
   812a0:	d9012f17 	ldw	r4,1212(sp)
   812a4:	d9412f17 	ldw	r5,1212(sp)
   812a8:	d8812f17 	ldw	r2,1212(sp)
   812ac:	21000017 	ldw	r4,0(r4)
   812b0:	29400117 	ldw	r5,4(r5)
   812b4:	10800204 	addi	r2,r2,8
   812b8:	d9013715 	stw	r4,1244(sp)
   812bc:	d9413915 	stw	r5,1252(sp)
   812c0:	d8812f15 	stw	r2,1212(sp)
   812c4:	d9013717 	ldw	r4,1244(sp)
   812c8:	d9413917 	ldw	r5,1252(sp)
   812cc:	da013f15 	stw	r8,1276(sp)
   812d0:	04000044 	movi	r16,1
   812d4:	0087a900 	call	87a90 <__fpclassifyd>
   812d8:	da013f17 	ldw	r8,1276(sp)
   812dc:	d9013717 	ldw	r4,1244(sp)
   812e0:	d9413917 	ldw	r5,1252(sp)
   812e4:	1403571e 	bne	r2,r16,82044 <___vfprintf_internal_r+0x1708>
   812e8:	000d883a 	mov	r6,zero
   812ec:	000f883a 	mov	r7,zero
   812f0:	008be140 	call	8be14 <__ledf2>
   812f4:	da013f17 	ldw	r8,1276(sp)
   812f8:	1004f416 	blt	r2,zero,826cc <___vfprintf_internal_r+0x1d90>
   812fc:	df012783 	ldbu	fp,1182(sp)
   81300:	008011c4 	movi	r2,71
   81304:	14847a0e 	bge	r2,r18,824f0 <___vfprintf_internal_r+0x1bb4>
   81308:	04000274 	movhi	r16,9
   8130c:	843efd04 	addi	r16,r16,-1036
   81310:	d9012a17 	ldw	r4,1192(sp)
   81314:	00bfdfc4 	movi	r2,-129
   81318:	00c000c4 	movi	r3,3
   8131c:	2088703a 	and	r4,r4,r2
   81320:	d8c12b15 	stw	r3,1196(sp)
   81324:	d9012a15 	stw	r4,1192(sp)
   81328:	d8c12e15 	stw	r3,1208(sp)
   8132c:	0029883a 	mov	r20,zero
   81330:	d8013315 	stw	zero,1228(sp)
   81334:	003eea06 	br	80ee0 <___vfprintf_internal_r+0x5a4>
   81338:	953ff404 	addi	r20,r18,-48
   8133c:	d8013015 	stw	zero,1216(sp)
   81340:	0009883a 	mov	r4,zero
   81344:	1825883a 	mov	r18,r3
   81348:	01400284 	movi	r5,10
   8134c:	008aa780 	call	8aa78 <__mulsi3>
   81350:	88c00007 	ldb	r3,0(r17)
   81354:	1509883a 	add	r4,r2,r20
   81358:	8c400044 	addi	r17,r17,1
   8135c:	1d3ff404 	addi	r20,r3,-48
   81360:	8805883a 	mov	r2,r17
   81364:	ad3ff82e 	bgeu	r21,r20,81348 <___vfprintf_internal_r+0xa0c>
   81368:	d9013015 	stw	r4,1216(sp)
   8136c:	9009883a 	mov	r4,r18
   81370:	1023883a 	mov	r17,r2
   81374:	1825883a 	mov	r18,r3
   81378:	2007883a 	mov	r3,r4
   8137c:	003dd506 	br	80ad4 <___vfprintf_internal_r+0x198>
   81380:	d8812a17 	ldw	r2,1192(sp)
   81384:	10800214 	ori	r2,r2,8
   81388:	d8812a15 	stw	r2,1192(sp)
   8138c:	8c800007 	ldb	r18,0(r17)
   81390:	003dcf06 	br	80ad0 <___vfprintf_internal_r+0x194>
   81394:	d9012a17 	ldw	r4,1192(sp)
   81398:	e011883a 	mov	r8,fp
   8139c:	1829883a 	mov	r20,r3
   813a0:	21000414 	ori	r4,r4,16
   813a4:	d9012a15 	stw	r4,1192(sp)
   813a8:	d9412a17 	ldw	r5,1192(sp)
   813ac:	2880080c 	andi	r2,r5,32
   813b0:	1000cf26 	beq	r2,zero,816f0 <___vfprintf_internal_r+0xdb4>
   813b4:	d8812f17 	ldw	r2,1212(sp)
   813b8:	0007883a 	mov	r3,zero
   813bc:	15400017 	ldw	r21,0(r2)
   813c0:	15800117 	ldw	r22,4(r2)
   813c4:	10800204 	addi	r2,r2,8
   813c8:	d8812f15 	stw	r2,1212(sp)
   813cc:	ad84b03a 	or	r2,r21,r22
   813d0:	d8012785 	stb	zero,1182(sp)
   813d4:	0039883a 	mov	fp,zero
   813d8:	003eab06 	br	80e88 <___vfprintf_internal_r+0x54c>
   813dc:	d9012a17 	ldw	r4,1192(sp)
   813e0:	e011883a 	mov	r8,fp
   813e4:	1829883a 	mov	r20,r3
   813e8:	21000414 	ori	r4,r4,16
   813ec:	d9012a15 	stw	r4,1192(sp)
   813f0:	d9412a17 	ldw	r5,1192(sp)
   813f4:	2880080c 	andi	r2,r5,32
   813f8:	1000cd26 	beq	r2,zero,81730 <___vfprintf_internal_r+0xdf4>
   813fc:	d8812f17 	ldw	r2,1212(sp)
   81400:	00c00044 	movi	r3,1
   81404:	15400017 	ldw	r21,0(r2)
   81408:	15800117 	ldw	r22,4(r2)
   8140c:	10800204 	addi	r2,r2,8
   81410:	d8812f15 	stw	r2,1212(sp)
   81414:	ad84b03a 	or	r2,r21,r22
   81418:	003fed06 	br	813d0 <___vfprintf_internal_r+0xa94>
   8141c:	d9012a17 	ldw	r4,1192(sp)
   81420:	dd812785 	stb	r22,1182(sp)
   81424:	e011883a 	mov	r8,fp
   81428:	2080080c 	andi	r2,r4,32
   8142c:	10039226 	beq	r2,zero,82278 <___vfprintf_internal_r+0x193c>
   81430:	d9412f17 	ldw	r5,1212(sp)
   81434:	d9013117 	ldw	r4,1220(sp)
   81438:	28800017 	ldw	r2,0(r5)
   8143c:	2007d7fa 	srai	r3,r4,31
   81440:	29400104 	addi	r5,r5,4
   81444:	d9412f15 	stw	r5,1212(sp)
   81448:	11000015 	stw	r4,0(r2)
   8144c:	10c00115 	stw	r3,4(r2)
   81450:	003d7806 	br	80a34 <___vfprintf_internal_r+0xf8>
   81454:	d8c12f17 	ldw	r3,1212(sp)
   81458:	d9012f17 	ldw	r4,1212(sp)
   8145c:	e011883a 	mov	r8,fp
   81460:	18800017 	ldw	r2,0(r3)
   81464:	21000104 	addi	r4,r4,4
   81468:	00c00044 	movi	r3,1
   8146c:	d8c12b15 	stw	r3,1196(sp)
   81470:	d8012785 	stb	zero,1182(sp)
   81474:	d8810405 	stb	r2,1040(sp)
   81478:	d9012f15 	stw	r4,1212(sp)
   8147c:	d8c12e15 	stw	r3,1208(sp)
   81480:	0029883a 	mov	r20,zero
   81484:	d8013315 	stw	zero,1228(sp)
   81488:	dc010404 	addi	r16,sp,1040
   8148c:	0005883a 	mov	r2,zero
   81490:	003e9a06 	br	80efc <___vfprintf_internal_r+0x5c0>
   81494:	d9412a17 	ldw	r5,1192(sp)
   81498:	01000274 	movhi	r4,9
   8149c:	213f0504 	addi	r4,r4,-1004
   814a0:	dd812785 	stb	r22,1182(sp)
   814a4:	d9013b15 	stw	r4,1260(sp)
   814a8:	2880080c 	andi	r2,r5,32
   814ac:	e011883a 	mov	r8,fp
   814b0:	1829883a 	mov	r20,r3
   814b4:	10002f26 	beq	r2,zero,81574 <___vfprintf_internal_r+0xc38>
   814b8:	d8812f17 	ldw	r2,1212(sp)
   814bc:	15400017 	ldw	r21,0(r2)
   814c0:	15800117 	ldw	r22,4(r2)
   814c4:	10800204 	addi	r2,r2,8
   814c8:	d8812f15 	stw	r2,1212(sp)
   814cc:	d9012a17 	ldw	r4,1192(sp)
   814d0:	2080004c 	andi	r2,r4,1
   814d4:	10025f26 	beq	r2,zero,81e54 <___vfprintf_internal_r+0x1518>
   814d8:	ad84b03a 	or	r2,r21,r22
   814dc:	10034e26 	beq	r2,zero,82218 <___vfprintf_internal_r+0x18dc>
   814e0:	00c00c04 	movi	r3,48
   814e4:	21000094 	ori	r4,r4,2
   814e8:	d8c12705 	stb	r3,1180(sp)
   814ec:	dc812745 	stb	r18,1181(sp)
   814f0:	d9012a15 	stw	r4,1192(sp)
   814f4:	00c00084 	movi	r3,2
   814f8:	003fb506 	br	813d0 <___vfprintf_internal_r+0xa94>
   814fc:	b0803fcc 	andi	r2,r22,255
   81500:	1080201c 	xori	r2,r2,128
   81504:	10bfe004 	addi	r2,r2,-128
   81508:	1003501e 	bne	r2,zero,8224c <___vfprintf_internal_r+0x1910>
   8150c:	05800804 	movi	r22,32
   81510:	8c800007 	ldb	r18,0(r17)
   81514:	003d6e06 	br	80ad0 <___vfprintf_internal_r+0x194>
   81518:	d9012a17 	ldw	r4,1192(sp)
   8151c:	21000054 	ori	r4,r4,1
   81520:	d9012a15 	stw	r4,1192(sp)
   81524:	8c800007 	ldb	r18,0(r17)
   81528:	003d6906 	br	80ad0 <___vfprintf_internal_r+0x194>
   8152c:	d9412f17 	ldw	r5,1212(sp)
   81530:	d9012f17 	ldw	r4,1212(sp)
   81534:	29400017 	ldw	r5,0(r5)
   81538:	20800104 	addi	r2,r4,4
   8153c:	d9413015 	stw	r5,1216(sp)
   81540:	283dc616 	blt	r5,zero,80c5c <___vfprintf_internal_r+0x320>
   81544:	d8812f15 	stw	r2,1212(sp)
   81548:	8c800007 	ldb	r18,0(r17)
   8154c:	003d6006 	br	80ad0 <___vfprintf_internal_r+0x194>
   81550:	d9412a17 	ldw	r5,1192(sp)
   81554:	00800274 	movhi	r2,9
   81558:	10bf0004 	addi	r2,r2,-1024
   8155c:	d8813b15 	stw	r2,1260(sp)
   81560:	dd812785 	stb	r22,1182(sp)
   81564:	2880080c 	andi	r2,r5,32
   81568:	e011883a 	mov	r8,fp
   8156c:	1829883a 	mov	r20,r3
   81570:	103fd11e 	bne	r2,zero,814b8 <___vfprintf_internal_r+0xb7c>
   81574:	d8c12a17 	ldw	r3,1192(sp)
   81578:	1880040c 	andi	r2,r3,16
   8157c:	10033526 	beq	r2,zero,82254 <___vfprintf_internal_r+0x1918>
   81580:	d9012f17 	ldw	r4,1212(sp)
   81584:	002d883a 	mov	r22,zero
   81588:	25400017 	ldw	r21,0(r4)
   8158c:	21000104 	addi	r4,r4,4
   81590:	d9012f15 	stw	r4,1212(sp)
   81594:	003fcd06 	br	814cc <___vfprintf_internal_r+0xb90>
   81598:	d9012a17 	ldw	r4,1192(sp)
   8159c:	21001014 	ori	r4,r4,64
   815a0:	d9012a15 	stw	r4,1192(sp)
   815a4:	8c800007 	ldb	r18,0(r17)
   815a8:	003d4906 	br	80ad0 <___vfprintf_internal_r+0x194>
   815ac:	8c800007 	ldb	r18,0(r17)
   815b0:	01401b04 	movi	r5,108
   815b4:	8805883a 	mov	r2,r17
   815b8:	9143db26 	beq	r18,r5,82528 <___vfprintf_internal_r+0x1bec>
   815bc:	d9412a17 	ldw	r5,1192(sp)
   815c0:	29400414 	ori	r5,r5,16
   815c4:	d9412a15 	stw	r5,1192(sp)
   815c8:	003d4106 	br	80ad0 <___vfprintf_internal_r+0x194>
   815cc:	1829883a 	mov	r20,r3
   815d0:	d8c12a17 	ldw	r3,1192(sp)
   815d4:	dd812785 	stb	r22,1182(sp)
   815d8:	e011883a 	mov	r8,fp
   815dc:	1880080c 	andi	r2,r3,32
   815e0:	103e1f1e 	bne	r2,zero,80e60 <___vfprintf_internal_r+0x524>
   815e4:	d9412a17 	ldw	r5,1192(sp)
   815e8:	2880040c 	andi	r2,r5,16
   815ec:	10032f26 	beq	r2,zero,822ac <___vfprintf_internal_r+0x1970>
   815f0:	d8812f17 	ldw	r2,1212(sp)
   815f4:	15400017 	ldw	r21,0(r2)
   815f8:	10800104 	addi	r2,r2,4
   815fc:	d8812f15 	stw	r2,1212(sp)
   81600:	a82dd7fa 	srai	r22,r21,31
   81604:	b005883a 	mov	r2,r22
   81608:	003e1b06 	br	80e78 <___vfprintf_internal_r+0x53c>
   8160c:	d8812a17 	ldw	r2,1192(sp)
   81610:	10800814 	ori	r2,r2,32
   81614:	d8812a15 	stw	r2,1192(sp)
   81618:	8c800007 	ldb	r18,0(r17)
   8161c:	003d2c06 	br	80ad0 <___vfprintf_internal_r+0x194>
   81620:	1829883a 	mov	r20,r3
   81624:	d8c12f17 	ldw	r3,1212(sp)
   81628:	d8012785 	stb	zero,1182(sp)
   8162c:	e011883a 	mov	r8,fp
   81630:	1c000017 	ldw	r16,0(r3)
   81634:	1d400104 	addi	r21,r3,4
   81638:	80040226 	beq	r16,zero,82644 <___vfprintf_internal_r+0x1d08>
   8163c:	8009883a 	mov	r4,r16
   81640:	a003c716 	blt	r20,zero,82560 <___vfprintf_internal_r+0x1c24>
   81644:	000b883a 	mov	r5,zero
   81648:	a00d883a 	mov	r6,r20
   8164c:	df013f15 	stw	fp,1276(sp)
   81650:	0085ecc0 	call	85ecc <memchr>
   81654:	da013f17 	ldw	r8,1276(sp)
   81658:	10044326 	beq	r2,zero,82768 <___vfprintf_internal_r+0x1e2c>
   8165c:	1405c83a 	sub	r2,r2,r16
   81660:	d8812e15 	stw	r2,1208(sp)
   81664:	a0837c16 	blt	r20,r2,82458 <___vfprintf_internal_r+0x1b1c>
   81668:	d8812e17 	ldw	r2,1208(sp)
   8166c:	1003c116 	blt	r2,zero,82574 <___vfprintf_internal_r+0x1c38>
   81670:	df012783 	ldbu	fp,1182(sp)
   81674:	d8812b15 	stw	r2,1196(sp)
   81678:	dd412f15 	stw	r21,1212(sp)
   8167c:	0029883a 	mov	r20,zero
   81680:	d8013315 	stw	zero,1228(sp)
   81684:	003e1606 	br	80ee0 <___vfprintf_internal_r+0x5a4>
   81688:	d9012f17 	ldw	r4,1212(sp)
   8168c:	d9412a17 	ldw	r5,1192(sp)
   81690:	00800c04 	movi	r2,48
   81694:	25400017 	ldw	r21,0(r4)
   81698:	d8812705 	stb	r2,1180(sp)
   8169c:	00801e04 	movi	r2,120
   816a0:	29400094 	ori	r5,r5,2
   816a4:	d8812745 	stb	r2,1181(sp)
   816a8:	21000104 	addi	r4,r4,4
   816ac:	00800274 	movhi	r2,9
   816b0:	10bf0504 	addi	r2,r2,-1004
   816b4:	1829883a 	mov	r20,r3
   816b8:	d8813b15 	stw	r2,1260(sp)
   816bc:	e011883a 	mov	r8,fp
   816c0:	002d883a 	mov	r22,zero
   816c4:	d9412a15 	stw	r5,1192(sp)
   816c8:	d9012f15 	stw	r4,1212(sp)
   816cc:	00c00084 	movi	r3,2
   816d0:	04801e04 	movi	r18,120
   816d4:	a805883a 	mov	r2,r21
   816d8:	003f3d06 	br	813d0 <___vfprintf_internal_r+0xa94>
   816dc:	d9412a17 	ldw	r5,1192(sp)
   816e0:	e011883a 	mov	r8,fp
   816e4:	1829883a 	mov	r20,r3
   816e8:	2880080c 	andi	r2,r5,32
   816ec:	103f311e 	bne	r2,zero,813b4 <___vfprintf_internal_r+0xa78>
   816f0:	d8c12a17 	ldw	r3,1192(sp)
   816f4:	1880040c 	andi	r2,r3,16
   816f8:	1002c926 	beq	r2,zero,82220 <___vfprintf_internal_r+0x18e4>
   816fc:	d9012f17 	ldw	r4,1212(sp)
   81700:	002d883a 	mov	r22,zero
   81704:	0007883a 	mov	r3,zero
   81708:	25400017 	ldw	r21,0(r4)
   8170c:	21000104 	addi	r4,r4,4
   81710:	d9012f15 	stw	r4,1212(sp)
   81714:	a805883a 	mov	r2,r21
   81718:	003f2d06 	br	813d0 <___vfprintf_internal_r+0xa94>
   8171c:	d9412a17 	ldw	r5,1192(sp)
   81720:	e011883a 	mov	r8,fp
   81724:	1829883a 	mov	r20,r3
   81728:	2880080c 	andi	r2,r5,32
   8172c:	103f331e 	bne	r2,zero,813fc <___vfprintf_internal_r+0xac0>
   81730:	d8c12a17 	ldw	r3,1192(sp)
   81734:	1880040c 	andi	r2,r3,16
   81738:	1002ac26 	beq	r2,zero,821ec <___vfprintf_internal_r+0x18b0>
   8173c:	d9012f17 	ldw	r4,1212(sp)
   81740:	002d883a 	mov	r22,zero
   81744:	00c00044 	movi	r3,1
   81748:	25400017 	ldw	r21,0(r4)
   8174c:	21000104 	addi	r4,r4,4
   81750:	d9012f15 	stw	r4,1212(sp)
   81754:	a805883a 	mov	r2,r21
   81758:	003f1d06 	br	813d0 <___vfprintf_internal_r+0xa94>
   8175c:	dd812785 	stb	r22,1182(sp)
   81760:	e011883a 	mov	r8,fp
   81764:	903d8b26 	beq	r18,zero,80d94 <___vfprintf_internal_r+0x458>
   81768:	00c00044 	movi	r3,1
   8176c:	d8c12b15 	stw	r3,1196(sp)
   81770:	dc810405 	stb	r18,1040(sp)
   81774:	d8012785 	stb	zero,1182(sp)
   81778:	003f4006 	br	8147c <___vfprintf_internal_r+0xb40>
   8177c:	d8c12017 	ldw	r3,1152(sp)
   81780:	003e2106 	br	81008 <___vfprintf_internal_r+0x6cc>
   81784:	45400015 	stw	r21,0(r8)
   81788:	44000115 	stw	r16,4(r8)
   8178c:	1c07883a 	add	r3,r3,r16
   81790:	10800044 	addi	r2,r2,1
   81794:	d8c12015 	stw	r3,1152(sp)
   81798:	d8811f15 	stw	r2,1148(sp)
   8179c:	010001c4 	movi	r4,7
   817a0:	20be750e 	bge	r4,r2,81178 <___vfprintf_internal_r+0x83c>
   817a4:	d9012c17 	ldw	r4,1200(sp)
   817a8:	980b883a 	mov	r5,r19
   817ac:	d9811e04 	addi	r6,sp,1144
   817b0:	0087e380 	call	87e38 <__sprint_r>
   817b4:	103d7d1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   817b8:	d8c12017 	ldw	r3,1152(sp)
   817bc:	da000404 	addi	r8,sp,16
   817c0:	003e6e06 	br	8117c <___vfprintf_internal_r+0x840>
   817c4:	18803fcc 	andi	r2,r3,255
   817c8:	00c00044 	movi	r3,1
   817cc:	10c11926 	beq	r2,r3,81c34 <___vfprintf_internal_r+0x12f8>
   817d0:	00c00084 	movi	r3,2
   817d4:	10c0e41e 	bne	r2,r3,81b68 <___vfprintf_internal_r+0x122c>
   817d8:	d9413b17 	ldw	r5,1260(sp)
   817dc:	d8c10dc4 	addi	r3,sp,1079
   817e0:	a88003cc 	andi	r2,r21,15
   817e4:	b008973a 	slli	r4,r22,28
   817e8:	2885883a 	add	r2,r5,r2
   817ec:	a82ad13a 	srli	r21,r21,4
   817f0:	10800003 	ldbu	r2,0(r2)
   817f4:	b02cd13a 	srli	r22,r22,4
   817f8:	256ab03a 	or	r21,r4,r21
   817fc:	18800005 	stb	r2,0(r3)
   81800:	ad84b03a 	or	r2,r21,r22
   81804:	1821883a 	mov	r16,r3
   81808:	18ffffc4 	addi	r3,r3,-1
   8180c:	103ff41e 	bne	r2,zero,817e0 <___vfprintf_internal_r+0xea4>
   81810:	d8c12917 	ldw	r3,1188(sp)
   81814:	1c07c83a 	sub	r3,r3,r16
   81818:	d8c12e15 	stw	r3,1208(sp)
   8181c:	003dab06 	br	80ecc <___vfprintf_internal_r+0x590>
   81820:	00801944 	movi	r2,101
   81824:	14807e0e 	bge	r2,r18,81a20 <___vfprintf_internal_r+0x10e4>
   81828:	d9013717 	ldw	r4,1244(sp)
   8182c:	d9413917 	ldw	r5,1252(sp)
   81830:	000d883a 	mov	r6,zero
   81834:	000f883a 	mov	r7,zero
   81838:	d8c13e15 	stw	r3,1272(sp)
   8183c:	da013f15 	stw	r8,1276(sp)
   81840:	008bcb80 	call	8bcb8 <__eqdf2>
   81844:	d8c13e17 	ldw	r3,1272(sp)
   81848:	da013f17 	ldw	r8,1276(sp)
   8184c:	1001211e 	bne	r2,zero,81cd4 <___vfprintf_internal_r+0x1398>
   81850:	d8811f17 	ldw	r2,1148(sp)
   81854:	01000044 	movi	r4,1
   81858:	18c00044 	addi	r3,r3,1
   8185c:	10800044 	addi	r2,r2,1
   81860:	01400274 	movhi	r5,9
   81864:	297f0c04 	addi	r5,r5,-976
   81868:	41000115 	stw	r4,4(r8)
   8186c:	41400015 	stw	r5,0(r8)
   81870:	d8c12015 	stw	r3,1152(sp)
   81874:	d8811f15 	stw	r2,1148(sp)
   81878:	010001c4 	movi	r4,7
   8187c:	2082a316 	blt	r4,r2,8230c <___vfprintf_internal_r+0x19d0>
   81880:	42000204 	addi	r8,r8,8
   81884:	d8812617 	ldw	r2,1176(sp)
   81888:	d9013517 	ldw	r4,1236(sp)
   8188c:	11000316 	blt	r2,r4,8189c <___vfprintf_internal_r+0xf60>
   81890:	d9412a17 	ldw	r5,1192(sp)
   81894:	2880004c 	andi	r2,r5,1
   81898:	103e3826 	beq	r2,zero,8117c <___vfprintf_internal_r+0x840>
   8189c:	d8813817 	ldw	r2,1248(sp)
   818a0:	d9013417 	ldw	r4,1232(sp)
   818a4:	d9413817 	ldw	r5,1248(sp)
   818a8:	1887883a 	add	r3,r3,r2
   818ac:	d8811f17 	ldw	r2,1148(sp)
   818b0:	41000015 	stw	r4,0(r8)
   818b4:	41400115 	stw	r5,4(r8)
   818b8:	10800044 	addi	r2,r2,1
   818bc:	d8c12015 	stw	r3,1152(sp)
   818c0:	d8811f15 	stw	r2,1148(sp)
   818c4:	010001c4 	movi	r4,7
   818c8:	20831d16 	blt	r4,r2,82540 <___vfprintf_internal_r+0x1c04>
   818cc:	42000204 	addi	r8,r8,8
   818d0:	d8813517 	ldw	r2,1236(sp)
   818d4:	143fffc4 	addi	r16,r2,-1
   818d8:	043e280e 	bge	zero,r16,8117c <___vfprintf_internal_r+0x840>
   818dc:	04800404 	movi	r18,16
   818e0:	d8811f17 	ldw	r2,1148(sp)
   818e4:	05400274 	movhi	r21,9
   818e8:	ad7f0c84 	addi	r21,r21,-974
   818ec:	943fa50e 	bge	r18,r16,81784 <___vfprintf_internal_r+0xe48>
   818f0:	050001c4 	movi	r20,7
   818f4:	dd812c17 	ldw	r22,1200(sp)
   818f8:	00000306 	br	81908 <___vfprintf_internal_r+0xfcc>
   818fc:	42000204 	addi	r8,r8,8
   81900:	843ffc04 	addi	r16,r16,-16
   81904:	943f9f0e 	bge	r18,r16,81784 <___vfprintf_internal_r+0xe48>
   81908:	18c00404 	addi	r3,r3,16
   8190c:	10800044 	addi	r2,r2,1
   81910:	45c00015 	stw	r23,0(r8)
   81914:	44800115 	stw	r18,4(r8)
   81918:	d8c12015 	stw	r3,1152(sp)
   8191c:	d8811f15 	stw	r2,1148(sp)
   81920:	a0bff60e 	bge	r20,r2,818fc <___vfprintf_internal_r+0xfc0>
   81924:	b009883a 	mov	r4,r22
   81928:	980b883a 	mov	r5,r19
   8192c:	d9811e04 	addi	r6,sp,1144
   81930:	0087e380 	call	87e38 <__sprint_r>
   81934:	103d1d1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81938:	d8c12017 	ldw	r3,1152(sp)
   8193c:	d8811f17 	ldw	r2,1148(sp)
   81940:	da000404 	addi	r8,sp,16
   81944:	003fee06 	br	81900 <___vfprintf_internal_r+0xfc4>
   81948:	d9413017 	ldw	r5,1216(sp)
   8194c:	d8812b17 	ldw	r2,1196(sp)
   81950:	28adc83a 	sub	r22,r5,r2
   81954:	05bdca0e 	bge	zero,r22,81080 <___vfprintf_internal_r+0x744>
   81958:	07000404 	movi	fp,16
   8195c:	d8811f17 	ldw	r2,1148(sp)
   81960:	05400274 	movhi	r21,9
   81964:	ad7f0c84 	addi	r21,r21,-974
   81968:	e580230e 	bge	fp,r22,819f8 <___vfprintf_internal_r+0x10bc>
   8196c:	a809883a 	mov	r4,r21
   81970:	dc012d15 	stw	r16,1204(sp)
   81974:	882b883a 	mov	r21,r17
   81978:	01c001c4 	movi	r7,7
   8197c:	b023883a 	mov	r17,r22
   81980:	dc012c17 	ldw	r16,1200(sp)
   81984:	202d883a 	mov	r22,r4
   81988:	00000306 	br	81998 <___vfprintf_internal_r+0x105c>
   8198c:	8c7ffc04 	addi	r17,r17,-16
   81990:	42000204 	addi	r8,r8,8
   81994:	e440130e 	bge	fp,r17,819e4 <___vfprintf_internal_r+0x10a8>
   81998:	18c00404 	addi	r3,r3,16
   8199c:	10800044 	addi	r2,r2,1
   819a0:	45c00015 	stw	r23,0(r8)
   819a4:	47000115 	stw	fp,4(r8)
   819a8:	d8c12015 	stw	r3,1152(sp)
   819ac:	d8811f15 	stw	r2,1148(sp)
   819b0:	38bff60e 	bge	r7,r2,8198c <___vfprintf_internal_r+0x1050>
   819b4:	8009883a 	mov	r4,r16
   819b8:	980b883a 	mov	r5,r19
   819bc:	d9811e04 	addi	r6,sp,1144
   819c0:	d9c13e15 	stw	r7,1272(sp)
   819c4:	0087e380 	call	87e38 <__sprint_r>
   819c8:	d9c13e17 	ldw	r7,1272(sp)
   819cc:	103cf71e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   819d0:	8c7ffc04 	addi	r17,r17,-16
   819d4:	d8c12017 	ldw	r3,1152(sp)
   819d8:	d8811f17 	ldw	r2,1148(sp)
   819dc:	da000404 	addi	r8,sp,16
   819e0:	e47fed16 	blt	fp,r17,81998 <___vfprintf_internal_r+0x105c>
   819e4:	dc012d17 	ldw	r16,1204(sp)
   819e8:	b009883a 	mov	r4,r22
   819ec:	882d883a 	mov	r22,r17
   819f0:	a823883a 	mov	r17,r21
   819f4:	202b883a 	mov	r21,r4
   819f8:	1d87883a 	add	r3,r3,r22
   819fc:	10800044 	addi	r2,r2,1
   81a00:	45400015 	stw	r21,0(r8)
   81a04:	45800115 	stw	r22,4(r8)
   81a08:	d8c12015 	stw	r3,1152(sp)
   81a0c:	d8811f15 	stw	r2,1148(sp)
   81a10:	010001c4 	movi	r4,7
   81a14:	20817a16 	blt	r4,r2,82000 <___vfprintf_internal_r+0x16c4>
   81a18:	42000204 	addi	r8,r8,8
   81a1c:	003d9806 	br	81080 <___vfprintf_internal_r+0x744>
   81a20:	d9013517 	ldw	r4,1236(sp)
   81a24:	00800044 	movi	r2,1
   81a28:	1100340e 	bge	r2,r4,81afc <___vfprintf_internal_r+0x11c0>
   81a2c:	dc811f17 	ldw	r18,1148(sp)
   81a30:	00800044 	movi	r2,1
   81a34:	18c00044 	addi	r3,r3,1
   81a38:	94800044 	addi	r18,r18,1
   81a3c:	40800115 	stw	r2,4(r8)
   81a40:	44000015 	stw	r16,0(r8)
   81a44:	d8c12015 	stw	r3,1152(sp)
   81a48:	dc811f15 	stw	r18,1148(sp)
   81a4c:	008001c4 	movi	r2,7
   81a50:	14814e16 	blt	r2,r18,81f8c <___vfprintf_internal_r+0x1650>
   81a54:	42000204 	addi	r8,r8,8
   81a58:	d8813817 	ldw	r2,1248(sp)
   81a5c:	94800044 	addi	r18,r18,1
   81a60:	dc811f15 	stw	r18,1148(sp)
   81a64:	18ad883a 	add	r22,r3,r2
   81a68:	d8c13417 	ldw	r3,1232(sp)
   81a6c:	40800115 	stw	r2,4(r8)
   81a70:	dd812015 	stw	r22,1152(sp)
   81a74:	40c00015 	stw	r3,0(r8)
   81a78:	008001c4 	movi	r2,7
   81a7c:	14814c16 	blt	r2,r18,81fb0 <___vfprintf_internal_r+0x1674>
   81a80:	45000204 	addi	r20,r8,8
   81a84:	d9013717 	ldw	r4,1244(sp)
   81a88:	d9413917 	ldw	r5,1252(sp)
   81a8c:	000d883a 	mov	r6,zero
   81a90:	000f883a 	mov	r7,zero
   81a94:	008bcb80 	call	8bcb8 <__eqdf2>
   81a98:	1000cd26 	beq	r2,zero,81dd0 <___vfprintf_internal_r+0x1494>
   81a9c:	d9013517 	ldw	r4,1236(sp)
   81aa0:	84000044 	addi	r16,r16,1
   81aa4:	94800044 	addi	r18,r18,1
   81aa8:	20bfffc4 	addi	r2,r4,-1
   81aac:	b0ad883a 	add	r22,r22,r2
   81ab0:	a0800115 	stw	r2,4(r20)
   81ab4:	a4000015 	stw	r16,0(r20)
   81ab8:	dd812015 	stw	r22,1152(sp)
   81abc:	dc811f15 	stw	r18,1148(sp)
   81ac0:	008001c4 	movi	r2,7
   81ac4:	14801916 	blt	r2,r18,81b2c <___vfprintf_internal_r+0x11f0>
   81ac8:	a5000204 	addi	r20,r20,8
   81acc:	d9013a17 	ldw	r4,1256(sp)
   81ad0:	d88122c4 	addi	r2,sp,1163
   81ad4:	94800044 	addi	r18,r18,1
   81ad8:	2587883a 	add	r3,r4,r22
   81adc:	a0800015 	stw	r2,0(r20)
   81ae0:	a1000115 	stw	r4,4(r20)
   81ae4:	d8c12015 	stw	r3,1152(sp)
   81ae8:	dc811f15 	stw	r18,1148(sp)
   81aec:	008001c4 	movi	r2,7
   81af0:	14bf2c16 	blt	r2,r18,817a4 <___vfprintf_internal_r+0xe68>
   81af4:	a2000204 	addi	r8,r20,8
   81af8:	003da006 	br	8117c <___vfprintf_internal_r+0x840>
   81afc:	d9412a17 	ldw	r5,1192(sp)
   81b00:	2888703a 	and	r4,r5,r2
   81b04:	203fc91e 	bne	r4,zero,81a2c <___vfprintf_internal_r+0x10f0>
   81b08:	dc811f17 	ldw	r18,1148(sp)
   81b0c:	1d800044 	addi	r22,r3,1
   81b10:	40800115 	stw	r2,4(r8)
   81b14:	94800044 	addi	r18,r18,1
   81b18:	44000015 	stw	r16,0(r8)
   81b1c:	dd812015 	stw	r22,1152(sp)
   81b20:	dc811f15 	stw	r18,1148(sp)
   81b24:	008001c4 	movi	r2,7
   81b28:	1482740e 	bge	r2,r18,824fc <___vfprintf_internal_r+0x1bc0>
   81b2c:	d9012c17 	ldw	r4,1200(sp)
   81b30:	980b883a 	mov	r5,r19
   81b34:	d9811e04 	addi	r6,sp,1144
   81b38:	0087e380 	call	87e38 <__sprint_r>
   81b3c:	103c9b1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81b40:	dd812017 	ldw	r22,1152(sp)
   81b44:	dc811f17 	ldw	r18,1148(sp)
   81b48:	dd000404 	addi	r20,sp,16
   81b4c:	003fdf06 	br	81acc <___vfprintf_internal_r+0x1190>
   81b50:	d9012c17 	ldw	r4,1200(sp)
   81b54:	980b883a 	mov	r5,r19
   81b58:	d9811e04 	addi	r6,sp,1144
   81b5c:	0087e380 	call	87e38 <__sprint_r>
   81b60:	103dc326 	beq	r2,zero,81270 <___vfprintf_internal_r+0x934>
   81b64:	003c9106 	br	80dac <___vfprintf_internal_r+0x470>
   81b68:	d8c10dc4 	addi	r3,sp,1079
   81b6c:	a808d0fa 	srli	r4,r21,3
   81b70:	b00a977a 	slli	r5,r22,29
   81b74:	b02cd0fa 	srli	r22,r22,3
   81b78:	ad4001cc 	andi	r21,r21,7
   81b7c:	a8800c04 	addi	r2,r21,48
   81b80:	292ab03a 	or	r21,r5,r4
   81b84:	18800005 	stb	r2,0(r3)
   81b88:	ad88b03a 	or	r4,r21,r22
   81b8c:	1821883a 	mov	r16,r3
   81b90:	18ffffc4 	addi	r3,r3,-1
   81b94:	203ff51e 	bne	r4,zero,81b6c <___vfprintf_internal_r+0x1230>
   81b98:	d9412a17 	ldw	r5,1192(sp)
   81b9c:	2900004c 	andi	r4,r5,1
   81ba0:	800b883a 	mov	r5,r16
   81ba4:	203f1a26 	beq	r4,zero,81810 <___vfprintf_internal_r+0xed4>
   81ba8:	10803fcc 	andi	r2,r2,255
   81bac:	1080201c 	xori	r2,r2,128
   81bb0:	10bfe004 	addi	r2,r2,-128
   81bb4:	01000c04 	movi	r4,48
   81bb8:	113f1526 	beq	r2,r4,81810 <___vfprintf_internal_r+0xed4>
   81bbc:	1821883a 	mov	r16,r3
   81bc0:	d8c12917 	ldw	r3,1188(sp)
   81bc4:	293fffc5 	stb	r4,-1(r5)
   81bc8:	1c07c83a 	sub	r3,r3,r16
   81bcc:	d8c12e15 	stw	r3,1208(sp)
   81bd0:	003cbe06 	br	80ecc <___vfprintf_internal_r+0x590>
   81bd4:	d9012c17 	ldw	r4,1200(sp)
   81bd8:	980b883a 	mov	r5,r19
   81bdc:	d9811e04 	addi	r6,sp,1144
   81be0:	0087e380 	call	87e38 <__sprint_r>
   81be4:	103c711e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81be8:	d8c12017 	ldw	r3,1152(sp)
   81bec:	da000404 	addi	r8,sp,16
   81bf0:	003d5306 	br	81140 <___vfprintf_internal_r+0x804>
   81bf4:	d9012c17 	ldw	r4,1200(sp)
   81bf8:	980b883a 	mov	r5,r19
   81bfc:	d9811e04 	addi	r6,sp,1144
   81c00:	0087e380 	call	87e38 <__sprint_r>
   81c04:	103c691e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81c08:	d8c12017 	ldw	r3,1152(sp)
   81c0c:	da000404 	addi	r8,sp,16
   81c10:	003d0a06 	br	8103c <___vfprintf_internal_r+0x700>
   81c14:	d9012c17 	ldw	r4,1200(sp)
   81c18:	980b883a 	mov	r5,r19
   81c1c:	d9811e04 	addi	r6,sp,1144
   81c20:	0087e380 	call	87e38 <__sprint_r>
   81c24:	103c611e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81c28:	d8c12017 	ldw	r3,1152(sp)
   81c2c:	da000404 	addi	r8,sp,16
   81c30:	003d1006 	br	81074 <___vfprintf_internal_r+0x738>
   81c34:	b000021e 	bne	r22,zero,81c40 <___vfprintf_internal_r+0x1304>
   81c38:	00800244 	movi	r2,9
   81c3c:	15401c2e 	bgeu	r2,r21,81cb0 <___vfprintf_internal_r+0x1374>
   81c40:	dc412b15 	stw	r17,1196(sp)
   81c44:	d8810dc4 	addi	r2,sp,1079
   81c48:	b023883a 	mov	r17,r22
   81c4c:	402d883a 	mov	r22,r8
   81c50:	a809883a 	mov	r4,r21
   81c54:	880b883a 	mov	r5,r17
   81c58:	01800284 	movi	r6,10
   81c5c:	000f883a 	mov	r7,zero
   81c60:	1021883a 	mov	r16,r2
   81c64:	008a3300 	call	8a330 <__umoddi3>
   81c68:	10800c04 	addi	r2,r2,48
   81c6c:	a809883a 	mov	r4,r21
   81c70:	880b883a 	mov	r5,r17
   81c74:	80800005 	stb	r2,0(r16)
   81c78:	01800284 	movi	r6,10
   81c7c:	000f883a 	mov	r7,zero
   81c80:	0089cdc0 	call	89cdc <__udivdi3>
   81c84:	1823883a 	mov	r17,r3
   81c88:	10c6b03a 	or	r3,r2,r3
   81c8c:	102b883a 	mov	r21,r2
   81c90:	80bfffc4 	addi	r2,r16,-1
   81c94:	183fee1e 	bne	r3,zero,81c50 <___vfprintf_internal_r+0x1314>
   81c98:	d8c12917 	ldw	r3,1188(sp)
   81c9c:	b011883a 	mov	r8,r22
   81ca0:	dc412b17 	ldw	r17,1196(sp)
   81ca4:	1c07c83a 	sub	r3,r3,r16
   81ca8:	d8c12e15 	stw	r3,1208(sp)
   81cac:	003c8706 	br	80ecc <___vfprintf_internal_r+0x590>
   81cb0:	d9013d17 	ldw	r4,1268(sp)
   81cb4:	ad400c04 	addi	r21,r21,48
   81cb8:	dd410dc5 	stb	r21,1079(sp)
   81cbc:	d9012e15 	stw	r4,1208(sp)
   81cc0:	dc010dc4 	addi	r16,sp,1079
   81cc4:	003c8106 	br	80ecc <___vfprintf_internal_r+0x590>
   81cc8:	d8012e15 	stw	zero,1208(sp)
   81ccc:	dc010e04 	addi	r16,sp,1080
   81cd0:	003c7e06 	br	80ecc <___vfprintf_internal_r+0x590>
   81cd4:	d8812617 	ldw	r2,1176(sp)
   81cd8:	0081940e 	bge	zero,r2,8232c <___vfprintf_internal_r+0x19f0>
   81cdc:	d9413517 	ldw	r5,1236(sp)
   81ce0:	d8813317 	ldw	r2,1228(sp)
   81ce4:	8165883a 	add	r18,r16,r5
   81ce8:	9429c83a 	sub	r20,r18,r16
   81cec:	1500010e 	bge	r2,r20,81cf4 <___vfprintf_internal_r+0x13b8>
   81cf0:	1029883a 	mov	r20,r2
   81cf4:	05000a0e 	bge	zero,r20,81d20 <___vfprintf_internal_r+0x13e4>
   81cf8:	d8811f17 	ldw	r2,1148(sp)
   81cfc:	1d07883a 	add	r3,r3,r20
   81d00:	44000015 	stw	r16,0(r8)
   81d04:	10800044 	addi	r2,r2,1
   81d08:	45000115 	stw	r20,4(r8)
   81d0c:	d8c12015 	stw	r3,1152(sp)
   81d10:	d8811f15 	stw	r2,1148(sp)
   81d14:	010001c4 	movi	r4,7
   81d18:	20822b16 	blt	r4,r2,825c8 <___vfprintf_internal_r+0x1c8c>
   81d1c:	42000204 	addi	r8,r8,8
   81d20:	a0022716 	blt	r20,zero,825c0 <___vfprintf_internal_r+0x1c84>
   81d24:	d9013317 	ldw	r4,1228(sp)
   81d28:	2529c83a 	sub	r20,r4,r20
   81d2c:	0500530e 	bge	zero,r20,81e7c <___vfprintf_internal_r+0x1540>
   81d30:	05800404 	movi	r22,16
   81d34:	d8811f17 	ldw	r2,1148(sp)
   81d38:	05400274 	movhi	r21,9
   81d3c:	ad7f0c84 	addi	r21,r21,-974
   81d40:	b501680e 	bge	r22,r20,822e4 <___vfprintf_internal_r+0x19a8>
   81d44:	8809883a 	mov	r4,r17
   81d48:	dc012e15 	stw	r16,1208(sp)
   81d4c:	a023883a 	mov	r17,r20
   81d50:	070001c4 	movi	fp,7
   81d54:	dc012c17 	ldw	r16,1200(sp)
   81d58:	2029883a 	mov	r20,r4
   81d5c:	00000306 	br	81d6c <___vfprintf_internal_r+0x1430>
   81d60:	42000204 	addi	r8,r8,8
   81d64:	8c7ffc04 	addi	r17,r17,-16
   81d68:	b4415a0e 	bge	r22,r17,822d4 <___vfprintf_internal_r+0x1998>
   81d6c:	18c00404 	addi	r3,r3,16
   81d70:	10800044 	addi	r2,r2,1
   81d74:	45c00015 	stw	r23,0(r8)
   81d78:	45800115 	stw	r22,4(r8)
   81d7c:	d8c12015 	stw	r3,1152(sp)
   81d80:	d8811f15 	stw	r2,1148(sp)
   81d84:	e0bff60e 	bge	fp,r2,81d60 <___vfprintf_internal_r+0x1424>
   81d88:	8009883a 	mov	r4,r16
   81d8c:	980b883a 	mov	r5,r19
   81d90:	d9811e04 	addi	r6,sp,1144
   81d94:	0087e380 	call	87e38 <__sprint_r>
   81d98:	103c041e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81d9c:	d8c12017 	ldw	r3,1152(sp)
   81da0:	d8811f17 	ldw	r2,1148(sp)
   81da4:	da000404 	addi	r8,sp,16
   81da8:	003fee06 	br	81d64 <___vfprintf_internal_r+0x1428>
   81dac:	d9012c17 	ldw	r4,1200(sp)
   81db0:	980b883a 	mov	r5,r19
   81db4:	d9811e04 	addi	r6,sp,1144
   81db8:	0087e380 	call	87e38 <__sprint_r>
   81dbc:	103bfb1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81dc0:	d8c12017 	ldw	r3,1152(sp)
   81dc4:	d8812787 	ldb	r2,1182(sp)
   81dc8:	da000404 	addi	r8,sp,16
   81dcc:	003c8e06 	br	81008 <___vfprintf_internal_r+0x6cc>
   81dd0:	d9413517 	ldw	r5,1236(sp)
   81dd4:	2c3fffc4 	addi	r16,r5,-1
   81dd8:	043f3c0e 	bge	zero,r16,81acc <___vfprintf_internal_r+0x1190>
   81ddc:	07000404 	movi	fp,16
   81de0:	05400274 	movhi	r21,9
   81de4:	ad7f0c84 	addi	r21,r21,-974
   81de8:	e4007c0e 	bge	fp,r16,81fdc <___vfprintf_internal_r+0x16a0>
   81dec:	dc412e15 	stw	r17,1208(sp)
   81df0:	00c001c4 	movi	r3,7
   81df4:	8023883a 	mov	r17,r16
   81df8:	dc012c17 	ldw	r16,1200(sp)
   81dfc:	00000306 	br	81e0c <___vfprintf_internal_r+0x14d0>
   81e00:	a5000204 	addi	r20,r20,8
   81e04:	8c7ffc04 	addi	r17,r17,-16
   81e08:	e440720e 	bge	fp,r17,81fd4 <___vfprintf_internal_r+0x1698>
   81e0c:	b5800404 	addi	r22,r22,16
   81e10:	94800044 	addi	r18,r18,1
   81e14:	a5c00015 	stw	r23,0(r20)
   81e18:	a7000115 	stw	fp,4(r20)
   81e1c:	dd812015 	stw	r22,1152(sp)
   81e20:	dc811f15 	stw	r18,1148(sp)
   81e24:	1cbff60e 	bge	r3,r18,81e00 <___vfprintf_internal_r+0x14c4>
   81e28:	8009883a 	mov	r4,r16
   81e2c:	980b883a 	mov	r5,r19
   81e30:	d9811e04 	addi	r6,sp,1144
   81e34:	d8c13e15 	stw	r3,1272(sp)
   81e38:	0087e380 	call	87e38 <__sprint_r>
   81e3c:	d8c13e17 	ldw	r3,1272(sp)
   81e40:	103bda1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81e44:	dd812017 	ldw	r22,1152(sp)
   81e48:	dc811f17 	ldw	r18,1148(sp)
   81e4c:	dd000404 	addi	r20,sp,16
   81e50:	003fec06 	br	81e04 <___vfprintf_internal_r+0x14c8>
   81e54:	00c00084 	movi	r3,2
   81e58:	ad84b03a 	or	r2,r21,r22
   81e5c:	003d5c06 	br	813d0 <___vfprintf_internal_r+0xa94>
   81e60:	d9012c17 	ldw	r4,1200(sp)
   81e64:	980b883a 	mov	r5,r19
   81e68:	d9811e04 	addi	r6,sp,1144
   81e6c:	0087e380 	call	87e38 <__sprint_r>
   81e70:	103bce1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81e74:	d8c12017 	ldw	r3,1152(sp)
   81e78:	da000404 	addi	r8,sp,16
   81e7c:	d9413317 	ldw	r5,1228(sp)
   81e80:	d8812617 	ldw	r2,1176(sp)
   81e84:	d9013517 	ldw	r4,1236(sp)
   81e88:	8161883a 	add	r16,r16,r5
   81e8c:	11000316 	blt	r2,r4,81e9c <___vfprintf_internal_r+0x1560>
   81e90:	d9412a17 	ldw	r5,1192(sp)
   81e94:	2900004c 	andi	r4,r5,1
   81e98:	20000d26 	beq	r4,zero,81ed0 <___vfprintf_internal_r+0x1594>
   81e9c:	d9013817 	ldw	r4,1248(sp)
   81ea0:	d9413417 	ldw	r5,1232(sp)
   81ea4:	1907883a 	add	r3,r3,r4
   81ea8:	d9011f17 	ldw	r4,1148(sp)
   81eac:	41400015 	stw	r5,0(r8)
   81eb0:	d9413817 	ldw	r5,1248(sp)
   81eb4:	21000044 	addi	r4,r4,1
   81eb8:	d8c12015 	stw	r3,1152(sp)
   81ebc:	41400115 	stw	r5,4(r8)
   81ec0:	d9011f15 	stw	r4,1148(sp)
   81ec4:	014001c4 	movi	r5,7
   81ec8:	2901c716 	blt	r5,r4,825e8 <___vfprintf_internal_r+0x1cac>
   81ecc:	42000204 	addi	r8,r8,8
   81ed0:	d9013517 	ldw	r4,1236(sp)
   81ed4:	9425c83a 	sub	r18,r18,r16
   81ed8:	2085c83a 	sub	r2,r4,r2
   81edc:	1029883a 	mov	r20,r2
   81ee0:	9080010e 	bge	r18,r2,81ee8 <___vfprintf_internal_r+0x15ac>
   81ee4:	9029883a 	mov	r20,r18
   81ee8:	05000a0e 	bge	zero,r20,81f14 <___vfprintf_internal_r+0x15d8>
   81eec:	d9011f17 	ldw	r4,1148(sp)
   81ef0:	1d07883a 	add	r3,r3,r20
   81ef4:	44000015 	stw	r16,0(r8)
   81ef8:	21000044 	addi	r4,r4,1
   81efc:	45000115 	stw	r20,4(r8)
   81f00:	d8c12015 	stw	r3,1152(sp)
   81f04:	d9011f15 	stw	r4,1148(sp)
   81f08:	014001c4 	movi	r5,7
   81f0c:	2901dd16 	blt	r5,r4,82684 <___vfprintf_internal_r+0x1d48>
   81f10:	42000204 	addi	r8,r8,8
   81f14:	a001d916 	blt	r20,zero,8267c <___vfprintf_internal_r+0x1d40>
   81f18:	1521c83a 	sub	r16,r2,r20
   81f1c:	043c970e 	bge	zero,r16,8117c <___vfprintf_internal_r+0x840>
   81f20:	04800404 	movi	r18,16
   81f24:	d8811f17 	ldw	r2,1148(sp)
   81f28:	05400274 	movhi	r21,9
   81f2c:	ad7f0c84 	addi	r21,r21,-974
   81f30:	943e140e 	bge	r18,r16,81784 <___vfprintf_internal_r+0xe48>
   81f34:	050001c4 	movi	r20,7
   81f38:	dd812c17 	ldw	r22,1200(sp)
   81f3c:	00000306 	br	81f4c <___vfprintf_internal_r+0x1610>
   81f40:	42000204 	addi	r8,r8,8
   81f44:	843ffc04 	addi	r16,r16,-16
   81f48:	943e0e0e 	bge	r18,r16,81784 <___vfprintf_internal_r+0xe48>
   81f4c:	18c00404 	addi	r3,r3,16
   81f50:	10800044 	addi	r2,r2,1
   81f54:	45c00015 	stw	r23,0(r8)
   81f58:	44800115 	stw	r18,4(r8)
   81f5c:	d8c12015 	stw	r3,1152(sp)
   81f60:	d8811f15 	stw	r2,1148(sp)
   81f64:	a0bff60e 	bge	r20,r2,81f40 <___vfprintf_internal_r+0x1604>
   81f68:	b009883a 	mov	r4,r22
   81f6c:	980b883a 	mov	r5,r19
   81f70:	d9811e04 	addi	r6,sp,1144
   81f74:	0087e380 	call	87e38 <__sprint_r>
   81f78:	103b8c1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81f7c:	d8c12017 	ldw	r3,1152(sp)
   81f80:	d8811f17 	ldw	r2,1148(sp)
   81f84:	da000404 	addi	r8,sp,16
   81f88:	003fee06 	br	81f44 <___vfprintf_internal_r+0x1608>
   81f8c:	d9012c17 	ldw	r4,1200(sp)
   81f90:	980b883a 	mov	r5,r19
   81f94:	d9811e04 	addi	r6,sp,1144
   81f98:	0087e380 	call	87e38 <__sprint_r>
   81f9c:	103b831e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81fa0:	d8c12017 	ldw	r3,1152(sp)
   81fa4:	dc811f17 	ldw	r18,1148(sp)
   81fa8:	da000404 	addi	r8,sp,16
   81fac:	003eaa06 	br	81a58 <___vfprintf_internal_r+0x111c>
   81fb0:	d9012c17 	ldw	r4,1200(sp)
   81fb4:	980b883a 	mov	r5,r19
   81fb8:	d9811e04 	addi	r6,sp,1144
   81fbc:	0087e380 	call	87e38 <__sprint_r>
   81fc0:	103b7a1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   81fc4:	dd812017 	ldw	r22,1152(sp)
   81fc8:	dc811f17 	ldw	r18,1148(sp)
   81fcc:	dd000404 	addi	r20,sp,16
   81fd0:	003eac06 	br	81a84 <___vfprintf_internal_r+0x1148>
   81fd4:	8821883a 	mov	r16,r17
   81fd8:	dc412e17 	ldw	r17,1208(sp)
   81fdc:	b42d883a 	add	r22,r22,r16
   81fe0:	94800044 	addi	r18,r18,1
   81fe4:	a5400015 	stw	r21,0(r20)
   81fe8:	a4000115 	stw	r16,4(r20)
   81fec:	dd812015 	stw	r22,1152(sp)
   81ff0:	dc811f15 	stw	r18,1148(sp)
   81ff4:	008001c4 	movi	r2,7
   81ff8:	14beb30e 	bge	r2,r18,81ac8 <___vfprintf_internal_r+0x118c>
   81ffc:	003ecb06 	br	81b2c <___vfprintf_internal_r+0x11f0>
   82000:	d9012c17 	ldw	r4,1200(sp)
   82004:	980b883a 	mov	r5,r19
   82008:	d9811e04 	addi	r6,sp,1144
   8200c:	0087e380 	call	87e38 <__sprint_r>
   82010:	103b661e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   82014:	d8c12017 	ldw	r3,1152(sp)
   82018:	da000404 	addi	r8,sp,16
   8201c:	003c1806 	br	81080 <___vfprintf_internal_r+0x744>
   82020:	056bc83a 	sub	r21,zero,r21
   82024:	a804c03a 	cmpne	r2,r21,zero
   82028:	05adc83a 	sub	r22,zero,r22
   8202c:	07000b44 	movi	fp,45
   82030:	b0adc83a 	sub	r22,r22,r2
   82034:	df012785 	stb	fp,1182(sp)
   82038:	00c00044 	movi	r3,1
   8203c:	ad84b03a 	or	r2,r21,r22
   82040:	003b9106 	br	80e88 <___vfprintf_internal_r+0x54c>
   82044:	da013f15 	stw	r8,1276(sp)
   82048:	0087a900 	call	87a90 <__fpclassifyd>
   8204c:	da013f17 	ldw	r8,1276(sp)
   82050:	1000f226 	beq	r2,zero,8241c <___vfprintf_internal_r+0x1ae0>
   82054:	05bff7c4 	movi	r22,-33
   82058:	00bfffc4 	movi	r2,-1
   8205c:	95ac703a 	and	r22,r18,r22
   82060:	a0820b26 	beq	r20,r2,82890 <___vfprintf_internal_r+0x1f54>
   82064:	008011c4 	movi	r2,71
   82068:	b081fc26 	beq	r22,r2,8285c <___vfprintf_internal_r+0x1f20>
   8206c:	d8c12a17 	ldw	r3,1192(sp)
   82070:	d9013917 	ldw	r4,1252(sp)
   82074:	18c04014 	ori	r3,r3,256
   82078:	d8c12d15 	stw	r3,1204(sp)
   8207c:	20020616 	blt	r4,zero,82898 <___vfprintf_internal_r+0x1f5c>
   82080:	dd413917 	ldw	r21,1252(sp)
   82084:	d8012b05 	stb	zero,1196(sp)
   82088:	00801984 	movi	r2,102
   8208c:	9081a526 	beq	r18,r2,82724 <___vfprintf_internal_r+0x1de8>
   82090:	00801184 	movi	r2,70
   82094:	9081a326 	beq	r18,r2,82724 <___vfprintf_internal_r+0x1de8>
   82098:	00801144 	movi	r2,69
   8209c:	b0820226 	beq	r22,r2,828a8 <___vfprintf_internal_r+0x1f6c>
   820a0:	a039883a 	mov	fp,r20
   820a4:	d8812604 	addi	r2,sp,1176
   820a8:	d8800115 	stw	r2,4(sp)
   820ac:	d9012c17 	ldw	r4,1200(sp)
   820b0:	d8812504 	addi	r2,sp,1172
   820b4:	d9413717 	ldw	r5,1244(sp)
   820b8:	d8800215 	stw	r2,8(sp)
   820bc:	d8812104 	addi	r2,sp,1156
   820c0:	df000015 	stw	fp,0(sp)
   820c4:	d8800315 	stw	r2,12(sp)
   820c8:	a80d883a 	mov	r6,r21
   820cc:	01c00084 	movi	r7,2
   820d0:	da013f15 	stw	r8,1276(sp)
   820d4:	0082e140 	call	82e14 <_dtoa_r>
   820d8:	1021883a 	mov	r16,r2
   820dc:	008019c4 	movi	r2,103
   820e0:	da013f17 	ldw	r8,1276(sp)
   820e4:	90800226 	beq	r18,r2,820f0 <___vfprintf_internal_r+0x17b4>
   820e8:	008011c4 	movi	r2,71
   820ec:	9080031e 	bne	r18,r2,820fc <___vfprintf_internal_r+0x17c0>
   820f0:	d9012a17 	ldw	r4,1192(sp)
   820f4:	2080004c 	andi	r2,r4,1
   820f8:	1001fe26 	beq	r2,zero,828f4 <___vfprintf_internal_r+0x1fb8>
   820fc:	00801184 	movi	r2,70
   82100:	8713883a 	add	r9,r16,fp
   82104:	b0819f26 	beq	r22,r2,82784 <___vfprintf_internal_r+0x1e48>
   82108:	d9013717 	ldw	r4,1244(sp)
   8210c:	a80b883a 	mov	r5,r21
   82110:	000d883a 	mov	r6,zero
   82114:	000f883a 	mov	r7,zero
   82118:	da013f15 	stw	r8,1276(sp)
   8211c:	da413e15 	stw	r9,1272(sp)
   82120:	008bcb80 	call	8bcb8 <__eqdf2>
   82124:	da013f17 	ldw	r8,1276(sp)
   82128:	da413e17 	ldw	r9,1272(sp)
   8212c:	10017b26 	beq	r2,zero,8271c <___vfprintf_internal_r+0x1de0>
   82130:	d8812117 	ldw	r2,1156(sp)
   82134:	1240062e 	bgeu	r2,r9,82150 <___vfprintf_internal_r+0x1814>
   82138:	01000c04 	movi	r4,48
   8213c:	10c00044 	addi	r3,r2,1
   82140:	d8c12115 	stw	r3,1156(sp)
   82144:	11000005 	stb	r4,0(r2)
   82148:	d8812117 	ldw	r2,1156(sp)
   8214c:	127ffb36 	bltu	r2,r9,8213c <___vfprintf_internal_r+0x1800>
   82150:	1405c83a 	sub	r2,r2,r16
   82154:	d8813515 	stw	r2,1236(sp)
   82158:	008011c4 	movi	r2,71
   8215c:	b0816926 	beq	r22,r2,82704 <___vfprintf_internal_r+0x1dc8>
   82160:	00801944 	movi	r2,101
   82164:	14823f0e 	bge	r2,r18,82a64 <___vfprintf_internal_r+0x2128>
   82168:	d8c12617 	ldw	r3,1176(sp)
   8216c:	00801984 	movi	r2,102
   82170:	d8c13315 	stw	r3,1228(sp)
   82174:	9081e126 	beq	r18,r2,828fc <___vfprintf_internal_r+0x1fc0>
   82178:	d8c13317 	ldw	r3,1228(sp)
   8217c:	d9013517 	ldw	r4,1236(sp)
   82180:	1901cb16 	blt	r3,r4,828b0 <___vfprintf_internal_r+0x1f74>
   82184:	d9412a17 	ldw	r5,1192(sp)
   82188:	2880004c 	andi	r2,r5,1
   8218c:	1001d11e 	bne	r2,zero,828d4 <___vfprintf_internal_r+0x1f98>
   82190:	1805883a 	mov	r2,r3
   82194:	18023116 	blt	r3,zero,82a5c <___vfprintf_internal_r+0x2120>
   82198:	d8c13317 	ldw	r3,1228(sp)
   8219c:	048019c4 	movi	r18,103
   821a0:	d8c12e15 	stw	r3,1208(sp)
   821a4:	df012b07 	ldb	fp,1196(sp)
   821a8:	e0014e1e 	bne	fp,zero,826e4 <___vfprintf_internal_r+0x1da8>
   821ac:	d8c12d17 	ldw	r3,1204(sp)
   821b0:	df012783 	ldbu	fp,1182(sp)
   821b4:	d8812b15 	stw	r2,1196(sp)
   821b8:	d8c12a15 	stw	r3,1192(sp)
   821bc:	0029883a 	mov	r20,zero
   821c0:	003b4706 	br	80ee0 <___vfprintf_internal_r+0x5a4>
   821c4:	d8c12f17 	ldw	r3,1212(sp)
   821c8:	d9012f17 	ldw	r4,1212(sp)
   821cc:	d9412f17 	ldw	r5,1212(sp)
   821d0:	18c00017 	ldw	r3,0(r3)
   821d4:	21000117 	ldw	r4,4(r4)
   821d8:	29400204 	addi	r5,r5,8
   821dc:	d8c13715 	stw	r3,1244(sp)
   821e0:	d9013915 	stw	r4,1252(sp)
   821e4:	d9412f15 	stw	r5,1212(sp)
   821e8:	003c3606 	br	812c4 <___vfprintf_internal_r+0x988>
   821ec:	d9412a17 	ldw	r5,1192(sp)
   821f0:	2880100c 	andi	r2,r5,64
   821f4:	1000b026 	beq	r2,zero,824b8 <___vfprintf_internal_r+0x1b7c>
   821f8:	d8812f17 	ldw	r2,1212(sp)
   821fc:	002d883a 	mov	r22,zero
   82200:	00c00044 	movi	r3,1
   82204:	1540000b 	ldhu	r21,0(r2)
   82208:	10800104 	addi	r2,r2,4
   8220c:	d8812f15 	stw	r2,1212(sp)
   82210:	a805883a 	mov	r2,r21
   82214:	003c6e06 	br	813d0 <___vfprintf_internal_r+0xa94>
   82218:	00c00084 	movi	r3,2
   8221c:	003c6c06 	br	813d0 <___vfprintf_internal_r+0xa94>
   82220:	d9412a17 	ldw	r5,1192(sp)
   82224:	2880100c 	andi	r2,r5,64
   82228:	10009b26 	beq	r2,zero,82498 <___vfprintf_internal_r+0x1b5c>
   8222c:	d8812f17 	ldw	r2,1212(sp)
   82230:	002d883a 	mov	r22,zero
   82234:	0007883a 	mov	r3,zero
   82238:	1540000b 	ldhu	r21,0(r2)
   8223c:	10800104 	addi	r2,r2,4
   82240:	d8812f15 	stw	r2,1212(sp)
   82244:	a805883a 	mov	r2,r21
   82248:	003c6106 	br	813d0 <___vfprintf_internal_r+0xa94>
   8224c:	8c800007 	ldb	r18,0(r17)
   82250:	003a1f06 	br	80ad0 <___vfprintf_internal_r+0x194>
   82254:	d9412a17 	ldw	r5,1192(sp)
   82258:	2880100c 	andi	r2,r5,64
   8225c:	10009e26 	beq	r2,zero,824d8 <___vfprintf_internal_r+0x1b9c>
   82260:	d8812f17 	ldw	r2,1212(sp)
   82264:	002d883a 	mov	r22,zero
   82268:	1540000b 	ldhu	r21,0(r2)
   8226c:	10800104 	addi	r2,r2,4
   82270:	d8812f15 	stw	r2,1212(sp)
   82274:	003c9506 	br	814cc <___vfprintf_internal_r+0xb90>
   82278:	d9412a17 	ldw	r5,1192(sp)
   8227c:	2880040c 	andi	r2,r5,16
   82280:	10007e1e 	bne	r2,zero,8247c <___vfprintf_internal_r+0x1b40>
   82284:	d9412a17 	ldw	r5,1192(sp)
   82288:	2880100c 	andi	r2,r5,64
   8228c:	10010826 	beq	r2,zero,826b0 <___vfprintf_internal_r+0x1d74>
   82290:	d8c12f17 	ldw	r3,1212(sp)
   82294:	d9013117 	ldw	r4,1220(sp)
   82298:	18800017 	ldw	r2,0(r3)
   8229c:	18c00104 	addi	r3,r3,4
   822a0:	d8c12f15 	stw	r3,1212(sp)
   822a4:	1100000d 	sth	r4,0(r2)
   822a8:	0039e206 	br	80a34 <___vfprintf_internal_r+0xf8>
   822ac:	d8c12a17 	ldw	r3,1192(sp)
   822b0:	1880100c 	andi	r2,r3,64
   822b4:	10006a26 	beq	r2,zero,82460 <___vfprintf_internal_r+0x1b24>
   822b8:	d9012f17 	ldw	r4,1212(sp)
   822bc:	2540000f 	ldh	r21,0(r4)
   822c0:	21000104 	addi	r4,r4,4
   822c4:	d9012f15 	stw	r4,1212(sp)
   822c8:	a82dd7fa 	srai	r22,r21,31
   822cc:	b005883a 	mov	r2,r22
   822d0:	003ae906 	br	80e78 <___vfprintf_internal_r+0x53c>
   822d4:	dc012e17 	ldw	r16,1208(sp)
   822d8:	a009883a 	mov	r4,r20
   822dc:	8829883a 	mov	r20,r17
   822e0:	2023883a 	mov	r17,r4
   822e4:	1d07883a 	add	r3,r3,r20
   822e8:	10800044 	addi	r2,r2,1
   822ec:	45400015 	stw	r21,0(r8)
   822f0:	45000115 	stw	r20,4(r8)
   822f4:	d8c12015 	stw	r3,1152(sp)
   822f8:	d8811f15 	stw	r2,1148(sp)
   822fc:	010001c4 	movi	r4,7
   82300:	20bed716 	blt	r4,r2,81e60 <___vfprintf_internal_r+0x1524>
   82304:	42000204 	addi	r8,r8,8
   82308:	003edc06 	br	81e7c <___vfprintf_internal_r+0x1540>
   8230c:	d9012c17 	ldw	r4,1200(sp)
   82310:	980b883a 	mov	r5,r19
   82314:	d9811e04 	addi	r6,sp,1144
   82318:	0087e380 	call	87e38 <__sprint_r>
   8231c:	103aa31e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   82320:	d8c12017 	ldw	r3,1152(sp)
   82324:	da000404 	addi	r8,sp,16
   82328:	003d5606 	br	81884 <___vfprintf_internal_r+0xf48>
   8232c:	d9011f17 	ldw	r4,1148(sp)
   82330:	01400274 	movhi	r5,9
   82334:	297f0c04 	addi	r5,r5,-976
   82338:	18c00044 	addi	r3,r3,1
   8233c:	21000044 	addi	r4,r4,1
   82340:	41400015 	stw	r5,0(r8)
   82344:	01400044 	movi	r5,1
   82348:	41400115 	stw	r5,4(r8)
   8234c:	d8c12015 	stw	r3,1152(sp)
   82350:	d9011f15 	stw	r4,1148(sp)
   82354:	014001c4 	movi	r5,7
   82358:	29006a16 	blt	r5,r4,82504 <___vfprintf_internal_r+0x1bc8>
   8235c:	42000204 	addi	r8,r8,8
   82360:	1025883a 	mov	r18,r2
   82364:	9000051e 	bne	r18,zero,8237c <___vfprintf_internal_r+0x1a40>
   82368:	d8813517 	ldw	r2,1236(sp)
   8236c:	1000031e 	bne	r2,zero,8237c <___vfprintf_internal_r+0x1a40>
   82370:	d9012a17 	ldw	r4,1192(sp)
   82374:	2080004c 	andi	r2,r4,1
   82378:	103b8026 	beq	r2,zero,8117c <___vfprintf_internal_r+0x840>
   8237c:	d8813417 	ldw	r2,1232(sp)
   82380:	d9413817 	ldw	r5,1248(sp)
   82384:	010001c4 	movi	r4,7
   82388:	40800015 	stw	r2,0(r8)
   8238c:	d8811f17 	ldw	r2,1148(sp)
   82390:	1947883a 	add	r3,r3,r5
   82394:	41400115 	stw	r5,4(r8)
   82398:	10800044 	addi	r2,r2,1
   8239c:	d8c12015 	stw	r3,1152(sp)
   823a0:	d8811f15 	stw	r2,1148(sp)
   823a4:	20813016 	blt	r4,r2,82868 <___vfprintf_internal_r+0x1f2c>
   823a8:	42000204 	addi	r8,r8,8
   823ac:	04a5c83a 	sub	r18,zero,r18
   823b0:	04807a0e 	bge	zero,r18,8259c <___vfprintf_internal_r+0x1c60>
   823b4:	05000404 	movi	r20,16
   823b8:	05400274 	movhi	r21,9
   823bc:	ad7f0c84 	addi	r21,r21,-974
   823c0:	a480920e 	bge	r20,r18,8260c <___vfprintf_internal_r+0x1cd0>
   823c4:	058001c4 	movi	r22,7
   823c8:	df012c17 	ldw	fp,1200(sp)
   823cc:	00000306 	br	823dc <___vfprintf_internal_r+0x1aa0>
   823d0:	42000204 	addi	r8,r8,8
   823d4:	94bffc04 	addi	r18,r18,-16
   823d8:	a4808c0e 	bge	r20,r18,8260c <___vfprintf_internal_r+0x1cd0>
   823dc:	18c00404 	addi	r3,r3,16
   823e0:	10800044 	addi	r2,r2,1
   823e4:	45c00015 	stw	r23,0(r8)
   823e8:	45000115 	stw	r20,4(r8)
   823ec:	d8c12015 	stw	r3,1152(sp)
   823f0:	d8811f15 	stw	r2,1148(sp)
   823f4:	b0bff60e 	bge	r22,r2,823d0 <___vfprintf_internal_r+0x1a94>
   823f8:	e009883a 	mov	r4,fp
   823fc:	980b883a 	mov	r5,r19
   82400:	d9811e04 	addi	r6,sp,1144
   82404:	0087e380 	call	87e38 <__sprint_r>
   82408:	103a681e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   8240c:	d8c12017 	ldw	r3,1152(sp)
   82410:	d8811f17 	ldw	r2,1148(sp)
   82414:	da000404 	addi	r8,sp,16
   82418:	003fee06 	br	823d4 <___vfprintf_internal_r+0x1a98>
   8241c:	008011c4 	movi	r2,71
   82420:	1480ad16 	blt	r2,r18,826d8 <___vfprintf_internal_r+0x1d9c>
   82424:	04000274 	movhi	r16,9
   82428:	843efe04 	addi	r16,r16,-1032
   8242c:	d9012a17 	ldw	r4,1192(sp)
   82430:	00bfdfc4 	movi	r2,-129
   82434:	00c000c4 	movi	r3,3
   82438:	2088703a 	and	r4,r4,r2
   8243c:	d8c12b15 	stw	r3,1196(sp)
   82440:	d9012a15 	stw	r4,1192(sp)
   82444:	df012783 	ldbu	fp,1182(sp)
   82448:	d8c12e15 	stw	r3,1208(sp)
   8244c:	0029883a 	mov	r20,zero
   82450:	d8013315 	stw	zero,1228(sp)
   82454:	003aa206 	br	80ee0 <___vfprintf_internal_r+0x5a4>
   82458:	dd012e15 	stw	r20,1208(sp)
   8245c:	003c8206 	br	81668 <___vfprintf_internal_r+0xd2c>
   82460:	d9412f17 	ldw	r5,1212(sp)
   82464:	2d400017 	ldw	r21,0(r5)
   82468:	29400104 	addi	r5,r5,4
   8246c:	d9412f15 	stw	r5,1212(sp)
   82470:	a82dd7fa 	srai	r22,r21,31
   82474:	b005883a 	mov	r2,r22
   82478:	003a7f06 	br	80e78 <___vfprintf_internal_r+0x53c>
   8247c:	d8c12f17 	ldw	r3,1212(sp)
   82480:	d9013117 	ldw	r4,1220(sp)
   82484:	18800017 	ldw	r2,0(r3)
   82488:	18c00104 	addi	r3,r3,4
   8248c:	d8c12f15 	stw	r3,1212(sp)
   82490:	11000015 	stw	r4,0(r2)
   82494:	00396706 	br	80a34 <___vfprintf_internal_r+0xf8>
   82498:	d8c12f17 	ldw	r3,1212(sp)
   8249c:	002d883a 	mov	r22,zero
   824a0:	1d400017 	ldw	r21,0(r3)
   824a4:	18c00104 	addi	r3,r3,4
   824a8:	d8c12f15 	stw	r3,1212(sp)
   824ac:	a805883a 	mov	r2,r21
   824b0:	0007883a 	mov	r3,zero
   824b4:	003bc606 	br	813d0 <___vfprintf_internal_r+0xa94>
   824b8:	d8c12f17 	ldw	r3,1212(sp)
   824bc:	002d883a 	mov	r22,zero
   824c0:	1d400017 	ldw	r21,0(r3)
   824c4:	18c00104 	addi	r3,r3,4
   824c8:	d8c12f15 	stw	r3,1212(sp)
   824cc:	a805883a 	mov	r2,r21
   824d0:	00c00044 	movi	r3,1
   824d4:	003bbe06 	br	813d0 <___vfprintf_internal_r+0xa94>
   824d8:	d8c12f17 	ldw	r3,1212(sp)
   824dc:	002d883a 	mov	r22,zero
   824e0:	1d400017 	ldw	r21,0(r3)
   824e4:	18c00104 	addi	r3,r3,4
   824e8:	d8c12f15 	stw	r3,1212(sp)
   824ec:	003bf706 	br	814cc <___vfprintf_internal_r+0xb90>
   824f0:	04000274 	movhi	r16,9
   824f4:	843efc04 	addi	r16,r16,-1040
   824f8:	003b8506 	br	81310 <___vfprintf_internal_r+0x9d4>
   824fc:	45000204 	addi	r20,r8,8
   82500:	003d7206 	br	81acc <___vfprintf_internal_r+0x1190>
   82504:	d9012c17 	ldw	r4,1200(sp)
   82508:	980b883a 	mov	r5,r19
   8250c:	d9811e04 	addi	r6,sp,1144
   82510:	0087e380 	call	87e38 <__sprint_r>
   82514:	103a251e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   82518:	dc812617 	ldw	r18,1176(sp)
   8251c:	d8c12017 	ldw	r3,1152(sp)
   82520:	da000404 	addi	r8,sp,16
   82524:	003f8f06 	br	82364 <___vfprintf_internal_r+0x1a28>
   82528:	d9012a17 	ldw	r4,1192(sp)
   8252c:	8c400044 	addi	r17,r17,1
   82530:	14800047 	ldb	r18,1(r2)
   82534:	21000814 	ori	r4,r4,32
   82538:	d9012a15 	stw	r4,1192(sp)
   8253c:	00396406 	br	80ad0 <___vfprintf_internal_r+0x194>
   82540:	d9012c17 	ldw	r4,1200(sp)
   82544:	980b883a 	mov	r5,r19
   82548:	d9811e04 	addi	r6,sp,1144
   8254c:	0087e380 	call	87e38 <__sprint_r>
   82550:	103a161e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   82554:	d8c12017 	ldw	r3,1152(sp)
   82558:	da000404 	addi	r8,sp,16
   8255c:	003cdc06 	br	818d0 <___vfprintf_internal_r+0xf94>
   82560:	df013f15 	stw	fp,1276(sp)
   82564:	00808b00 	call	808b0 <strlen>
   82568:	d8812e15 	stw	r2,1208(sp)
   8256c:	da013f17 	ldw	r8,1276(sp)
   82570:	103c3f0e 	bge	r2,zero,81670 <___vfprintf_internal_r+0xd34>
   82574:	0005883a 	mov	r2,zero
   82578:	003c3d06 	br	81670 <___vfprintf_internal_r+0xd34>
   8257c:	d9012c17 	ldw	r4,1200(sp)
   82580:	980b883a 	mov	r5,r19
   82584:	d9811e04 	addi	r6,sp,1144
   82588:	0087e380 	call	87e38 <__sprint_r>
   8258c:	103a071e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   82590:	d8c12017 	ldw	r3,1152(sp)
   82594:	d8811f17 	ldw	r2,1148(sp)
   82598:	da000404 	addi	r8,sp,16
   8259c:	d9013517 	ldw	r4,1236(sp)
   825a0:	10800044 	addi	r2,r2,1
   825a4:	44000015 	stw	r16,0(r8)
   825a8:	20c7883a 	add	r3,r4,r3
   825ac:	003aed06 	br	81164 <___vfprintf_internal_r+0x828>
   825b0:	01000274 	movhi	r4,9
   825b4:	213f1084 	addi	r4,r4,-958
   825b8:	d9013615 	stw	r4,1240(sp)
   825bc:	003a8706 	br	80fdc <___vfprintf_internal_r+0x6a0>
   825c0:	0029883a 	mov	r20,zero
   825c4:	003dd706 	br	81d24 <___vfprintf_internal_r+0x13e8>
   825c8:	d9012c17 	ldw	r4,1200(sp)
   825cc:	980b883a 	mov	r5,r19
   825d0:	d9811e04 	addi	r6,sp,1144
   825d4:	0087e380 	call	87e38 <__sprint_r>
   825d8:	1039f41e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   825dc:	d8c12017 	ldw	r3,1152(sp)
   825e0:	da000404 	addi	r8,sp,16
   825e4:	003dce06 	br	81d20 <___vfprintf_internal_r+0x13e4>
   825e8:	d9012c17 	ldw	r4,1200(sp)
   825ec:	980b883a 	mov	r5,r19
   825f0:	d9811e04 	addi	r6,sp,1144
   825f4:	0087e380 	call	87e38 <__sprint_r>
   825f8:	1039ec1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   825fc:	d8812617 	ldw	r2,1176(sp)
   82600:	d8c12017 	ldw	r3,1152(sp)
   82604:	da000404 	addi	r8,sp,16
   82608:	003e3106 	br	81ed0 <___vfprintf_internal_r+0x1594>
   8260c:	1c87883a 	add	r3,r3,r18
   82610:	10800044 	addi	r2,r2,1
   82614:	45400015 	stw	r21,0(r8)
   82618:	44800115 	stw	r18,4(r8)
   8261c:	d8c12015 	stw	r3,1152(sp)
   82620:	d8811f15 	stw	r2,1148(sp)
   82624:	010001c4 	movi	r4,7
   82628:	20bfd416 	blt	r4,r2,8257c <___vfprintf_internal_r+0x1c40>
   8262c:	42000204 	addi	r8,r8,8
   82630:	003fda06 	br	8259c <___vfprintf_internal_r+0x1c60>
   82634:	01400274 	movhi	r5,9
   82638:	297f1084 	addi	r5,r5,-958
   8263c:	d9413615 	stw	r5,1240(sp)
   82640:	003af406 	br	81214 <___vfprintf_internal_r+0x8d8>
   82644:	00800184 	movi	r2,6
   82648:	1500012e 	bgeu	r2,r20,82650 <___vfprintf_internal_r+0x1d14>
   8264c:	1029883a 	mov	r20,r2
   82650:	dd012e15 	stw	r20,1208(sp)
   82654:	a005883a 	mov	r2,r20
   82658:	a000d216 	blt	r20,zero,829a4 <___vfprintf_internal_r+0x2068>
   8265c:	d8812b15 	stw	r2,1196(sp)
   82660:	dd412f15 	stw	r21,1212(sp)
   82664:	0029883a 	mov	r20,zero
   82668:	d8013315 	stw	zero,1228(sp)
   8266c:	04000274 	movhi	r16,9
   82670:	843f0a04 	addi	r16,r16,-984
   82674:	0005883a 	mov	r2,zero
   82678:	003a2006 	br	80efc <___vfprintf_internal_r+0x5c0>
   8267c:	0029883a 	mov	r20,zero
   82680:	003e2506 	br	81f18 <___vfprintf_internal_r+0x15dc>
   82684:	d9012c17 	ldw	r4,1200(sp)
   82688:	980b883a 	mov	r5,r19
   8268c:	d9811e04 	addi	r6,sp,1144
   82690:	0087e380 	call	87e38 <__sprint_r>
   82694:	1039c51e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   82698:	d8812617 	ldw	r2,1176(sp)
   8269c:	d9413517 	ldw	r5,1236(sp)
   826a0:	d8c12017 	ldw	r3,1152(sp)
   826a4:	da000404 	addi	r8,sp,16
   826a8:	2885c83a 	sub	r2,r5,r2
   826ac:	003e1906 	br	81f14 <___vfprintf_internal_r+0x15d8>
   826b0:	d9412f17 	ldw	r5,1212(sp)
   826b4:	d8c13117 	ldw	r3,1220(sp)
   826b8:	28800017 	ldw	r2,0(r5)
   826bc:	29400104 	addi	r5,r5,4
   826c0:	d9412f15 	stw	r5,1212(sp)
   826c4:	10c00015 	stw	r3,0(r2)
   826c8:	0038da06 	br	80a34 <___vfprintf_internal_r+0xf8>
   826cc:	07000b44 	movi	fp,45
   826d0:	df012785 	stb	fp,1182(sp)
   826d4:	003b0a06 	br	81300 <___vfprintf_internal_r+0x9c4>
   826d8:	04000274 	movhi	r16,9
   826dc:	843eff04 	addi	r16,r16,-1028
   826e0:	003f5206 	br	8242c <___vfprintf_internal_r+0x1af0>
   826e4:	00c00b44 	movi	r3,45
   826e8:	d8c12785 	stb	r3,1182(sp)
   826ec:	d8c12d17 	ldw	r3,1204(sp)
   826f0:	d8812b15 	stw	r2,1196(sp)
   826f4:	0029883a 	mov	r20,zero
   826f8:	d8c12a15 	stw	r3,1192(sp)
   826fc:	00800b44 	movi	r2,45
   82700:	0039fb06 	br	80ef0 <___vfprintf_internal_r+0x5b4>
   82704:	d8812617 	ldw	r2,1176(sp)
   82708:	00ffff44 	movi	r3,-3
   8270c:	10c03216 	blt	r2,r3,827d8 <___vfprintf_internal_r+0x1e9c>
   82710:	a0803116 	blt	r20,r2,827d8 <___vfprintf_internal_r+0x1e9c>
   82714:	d8813315 	stw	r2,1228(sp)
   82718:	003e9706 	br	82178 <___vfprintf_internal_r+0x183c>
   8271c:	4805883a 	mov	r2,r9
   82720:	003e8b06 	br	82150 <___vfprintf_internal_r+0x1814>
   82724:	d8812604 	addi	r2,sp,1176
   82728:	d8800115 	stw	r2,4(sp)
   8272c:	d9012c17 	ldw	r4,1200(sp)
   82730:	d8812504 	addi	r2,sp,1172
   82734:	d9413717 	ldw	r5,1244(sp)
   82738:	d8800215 	stw	r2,8(sp)
   8273c:	d8812104 	addi	r2,sp,1156
   82740:	dd000015 	stw	r20,0(sp)
   82744:	d8800315 	stw	r2,12(sp)
   82748:	a80d883a 	mov	r6,r21
   8274c:	01c000c4 	movi	r7,3
   82750:	da013f15 	stw	r8,1276(sp)
   82754:	0082e140 	call	82e14 <_dtoa_r>
   82758:	1021883a 	mov	r16,r2
   8275c:	a039883a 	mov	fp,r20
   82760:	da013f17 	ldw	r8,1276(sp)
   82764:	003e6506 	br	820fc <___vfprintf_internal_r+0x17c0>
   82768:	dd012b15 	stw	r20,1196(sp)
   8276c:	dd012e15 	stw	r20,1208(sp)
   82770:	df012783 	ldbu	fp,1182(sp)
   82774:	dd412f15 	stw	r21,1212(sp)
   82778:	0029883a 	mov	r20,zero
   8277c:	d8013315 	stw	zero,1228(sp)
   82780:	0039d706 	br	80ee0 <___vfprintf_internal_r+0x5a4>
   82784:	81000007 	ldb	r4,0(r16)
   82788:	00800c04 	movi	r2,48
   8278c:	20800326 	beq	r4,r2,8279c <___vfprintf_internal_r+0x1e60>
   82790:	d8c12617 	ldw	r3,1176(sp)
   82794:	48d3883a 	add	r9,r9,r3
   82798:	003e5b06 	br	82108 <___vfprintf_internal_r+0x17cc>
   8279c:	d9013717 	ldw	r4,1244(sp)
   827a0:	a80b883a 	mov	r5,r21
   827a4:	000d883a 	mov	r6,zero
   827a8:	000f883a 	mov	r7,zero
   827ac:	da013f15 	stw	r8,1276(sp)
   827b0:	da413e15 	stw	r9,1272(sp)
   827b4:	008bcb80 	call	8bcb8 <__eqdf2>
   827b8:	da013f17 	ldw	r8,1276(sp)
   827bc:	da413e17 	ldw	r9,1272(sp)
   827c0:	103ff326 	beq	r2,zero,82790 <___vfprintf_internal_r+0x1e54>
   827c4:	00800044 	movi	r2,1
   827c8:	1707c83a 	sub	r3,r2,fp
   827cc:	d8c12615 	stw	r3,1176(sp)
   827d0:	48d3883a 	add	r9,r9,r3
   827d4:	003e4c06 	br	82108 <___vfprintf_internal_r+0x17cc>
   827d8:	94bfff84 	addi	r18,r18,-2
   827dc:	157fffc4 	addi	r21,r2,-1
   827e0:	dd412615 	stw	r21,1176(sp)
   827e4:	dc8122c5 	stb	r18,1163(sp)
   827e8:	a8009016 	blt	r21,zero,82a2c <___vfprintf_internal_r+0x20f0>
   827ec:	00800ac4 	movi	r2,43
   827f0:	d8812305 	stb	r2,1164(sp)
   827f4:	05000244 	movi	r20,9
   827f8:	a5404a16 	blt	r20,r21,82924 <___vfprintf_internal_r+0x1fe8>
   827fc:	00800c04 	movi	r2,48
   82800:	ad400c04 	addi	r21,r21,48
   82804:	d8812345 	stb	r2,1165(sp)
   82808:	dd412385 	stb	r21,1166(sp)
   8280c:	d8c123c4 	addi	r3,sp,1167
   82810:	d88122c4 	addi	r2,sp,1163
   82814:	1885c83a 	sub	r2,r3,r2
   82818:	d8c13517 	ldw	r3,1236(sp)
   8281c:	d9013517 	ldw	r4,1236(sp)
   82820:	d8813a15 	stw	r2,1256(sp)
   82824:	1887883a 	add	r3,r3,r2
   82828:	d8c12e15 	stw	r3,1208(sp)
   8282c:	00800044 	movi	r2,1
   82830:	11007a0e 	bge	r2,r4,82a1c <___vfprintf_internal_r+0x20e0>
   82834:	d8c12e17 	ldw	r3,1208(sp)
   82838:	18c00044 	addi	r3,r3,1
   8283c:	d8c12e15 	stw	r3,1208(sp)
   82840:	1805883a 	mov	r2,r3
   82844:	18000216 	blt	r3,zero,82850 <___vfprintf_internal_r+0x1f14>
   82848:	d8013315 	stw	zero,1228(sp)
   8284c:	003e5506 	br	821a4 <___vfprintf_internal_r+0x1868>
   82850:	0005883a 	mov	r2,zero
   82854:	d8013315 	stw	zero,1228(sp)
   82858:	003e5206 	br	821a4 <___vfprintf_internal_r+0x1868>
   8285c:	a03e031e 	bne	r20,zero,8206c <___vfprintf_internal_r+0x1730>
   82860:	8029883a 	mov	r20,r16
   82864:	003e0106 	br	8206c <___vfprintf_internal_r+0x1730>
   82868:	d9012c17 	ldw	r4,1200(sp)
   8286c:	980b883a 	mov	r5,r19
   82870:	d9811e04 	addi	r6,sp,1144
   82874:	0087e380 	call	87e38 <__sprint_r>
   82878:	10394c1e 	bne	r2,zero,80dac <___vfprintf_internal_r+0x470>
   8287c:	dc812617 	ldw	r18,1176(sp)
   82880:	d8c12017 	ldw	r3,1152(sp)
   82884:	d8811f17 	ldw	r2,1148(sp)
   82888:	da000404 	addi	r8,sp,16
   8288c:	003ec706 	br	823ac <___vfprintf_internal_r+0x1a70>
   82890:	05000184 	movi	r20,6
   82894:	003df506 	br	8206c <___vfprintf_internal_r+0x1730>
   82898:	00c00b44 	movi	r3,45
   8289c:	2560003c 	xorhi	r21,r4,32768
   828a0:	d8c12b05 	stb	r3,1196(sp)
   828a4:	003df806 	br	82088 <___vfprintf_internal_r+0x174c>
   828a8:	a7000044 	addi	fp,r20,1
   828ac:	003dfd06 	br	820a4 <___vfprintf_internal_r+0x1768>
   828b0:	d8c13317 	ldw	r3,1228(sp)
   828b4:	00c0610e 	bge	zero,r3,82a3c <___vfprintf_internal_r+0x2100>
   828b8:	00800044 	movi	r2,1
   828bc:	d9013517 	ldw	r4,1236(sp)
   828c0:	1105883a 	add	r2,r2,r4
   828c4:	d8812e15 	stw	r2,1208(sp)
   828c8:	10000716 	blt	r2,zero,828e8 <___vfprintf_internal_r+0x1fac>
   828cc:	048019c4 	movi	r18,103
   828d0:	003e3406 	br	821a4 <___vfprintf_internal_r+0x1868>
   828d4:	d8c13317 	ldw	r3,1228(sp)
   828d8:	18c00044 	addi	r3,r3,1
   828dc:	d8c12e15 	stw	r3,1208(sp)
   828e0:	1805883a 	mov	r2,r3
   828e4:	183ff90e 	bge	r3,zero,828cc <___vfprintf_internal_r+0x1f90>
   828e8:	0005883a 	mov	r2,zero
   828ec:	048019c4 	movi	r18,103
   828f0:	003e2c06 	br	821a4 <___vfprintf_internal_r+0x1868>
   828f4:	d8812117 	ldw	r2,1156(sp)
   828f8:	003e1506 	br	82150 <___vfprintf_internal_r+0x1814>
   828fc:	00c0400e 	bge	zero,r3,82a00 <___vfprintf_internal_r+0x20c4>
   82900:	a0002a1e 	bne	r20,zero,829ac <___vfprintf_internal_r+0x2070>
   82904:	d9012a17 	ldw	r4,1192(sp)
   82908:	2080004c 	andi	r2,r4,1
   8290c:	1000271e 	bne	r2,zero,829ac <___vfprintf_internal_r+0x2070>
   82910:	1805883a 	mov	r2,r3
   82914:	18005a16 	blt	r3,zero,82a80 <___vfprintf_internal_r+0x2144>
   82918:	d8c13317 	ldw	r3,1228(sp)
   8291c:	d8c12e15 	stw	r3,1208(sp)
   82920:	003e2006 	br	821a4 <___vfprintf_internal_r+0x1868>
   82924:	d8c12284 	addi	r3,sp,1162
   82928:	4039883a 	mov	fp,r8
   8292c:	a809883a 	mov	r4,r21
   82930:	01400284 	movi	r5,10
   82934:	182d883a 	mov	r22,r3
   82938:	008aa1c0 	call	8aa1c <__modsi3>
   8293c:	10800c04 	addi	r2,r2,48
   82940:	a809883a 	mov	r4,r21
   82944:	b0800005 	stb	r2,0(r22)
   82948:	01400284 	movi	r5,10
   8294c:	008a9d40 	call	8a9d4 <__divsi3>
   82950:	102b883a 	mov	r21,r2
   82954:	b0ffffc4 	addi	r3,r22,-1
   82958:	a0bff416 	blt	r20,r2,8292c <___vfprintf_internal_r+0x1ff0>
   8295c:	11400c04 	addi	r5,r2,48
   82960:	b17fffc5 	stb	r5,-1(r22)
   82964:	d88122c4 	addi	r2,sp,1163
   82968:	e011883a 	mov	r8,fp
   8296c:	1880462e 	bgeu	r3,r2,82a88 <___vfprintf_internal_r+0x214c>
   82970:	d9012344 	addi	r4,sp,1165
   82974:	b007883a 	mov	r3,r22
   82978:	00000206 	br	82984 <___vfprintf_internal_r+0x2048>
   8297c:	19400003 	ldbu	r5,0(r3)
   82980:	18c00044 	addi	r3,r3,1
   82984:	21400005 	stb	r5,0(r4)
   82988:	21000044 	addi	r4,r4,1
   8298c:	10fffb1e 	bne	r2,r3,8297c <___vfprintf_internal_r+0x2040>
   82990:	d8c12304 	addi	r3,sp,1164
   82994:	1d87c83a 	sub	r3,r3,r22
   82998:	d9412344 	addi	r5,sp,1165
   8299c:	28c7883a 	add	r3,r5,r3
   829a0:	003f9c06 	br	82814 <___vfprintf_internal_r+0x1ed8>
   829a4:	0005883a 	mov	r2,zero
   829a8:	003f2c06 	br	8265c <___vfprintf_internal_r+0x1d20>
   829ac:	d8c13317 	ldw	r3,1228(sp)
   829b0:	a5000044 	addi	r20,r20,1
   829b4:	1d29883a 	add	r20,r3,r20
   829b8:	dd012e15 	stw	r20,1208(sp)
   829bc:	a005883a 	mov	r2,r20
   829c0:	a03df80e 	bge	r20,zero,821a4 <___vfprintf_internal_r+0x1868>
   829c4:	0005883a 	mov	r2,zero
   829c8:	003df606 	br	821a4 <___vfprintf_internal_r+0x1868>
   829cc:	043fffc4 	movi	r16,-1
   829d0:	0038d406 	br	80d24 <___vfprintf_internal_r+0x3e8>
   829d4:	d9012f17 	ldw	r4,1212(sp)
   829d8:	8c800043 	ldbu	r18,1(r17)
   829dc:	1023883a 	mov	r17,r2
   829e0:	20c00017 	ldw	r3,0(r4)
   829e4:	21000104 	addi	r4,r4,4
   829e8:	d9012f15 	stw	r4,1212(sp)
   829ec:	18001f16 	blt	r3,zero,82a6c <___vfprintf_internal_r+0x2130>
   829f0:	94803fcc 	andi	r18,r18,255
   829f4:	9480201c 	xori	r18,r18,128
   829f8:	94bfe004 	addi	r18,r18,-128
   829fc:	00383406 	br	80ad0 <___vfprintf_internal_r+0x194>
   82a00:	a000111e 	bne	r20,zero,82a48 <___vfprintf_internal_r+0x210c>
   82a04:	d9012a17 	ldw	r4,1192(sp)
   82a08:	2080004c 	andi	r2,r4,1
   82a0c:	10000e1e 	bne	r2,zero,82a48 <___vfprintf_internal_r+0x210c>
   82a10:	00800044 	movi	r2,1
   82a14:	d8812e15 	stw	r2,1208(sp)
   82a18:	003de206 	br	821a4 <___vfprintf_internal_r+0x1868>
   82a1c:	d9412a17 	ldw	r5,1192(sp)
   82a20:	2884703a 	and	r2,r5,r2
   82a24:	103f831e 	bne	r2,zero,82834 <___vfprintf_internal_r+0x1ef8>
   82a28:	003f8506 	br	82840 <___vfprintf_internal_r+0x1f04>
   82a2c:	00800b44 	movi	r2,45
   82a30:	056bc83a 	sub	r21,zero,r21
   82a34:	d8812305 	stb	r2,1164(sp)
   82a38:	003f6e06 	br	827f4 <___vfprintf_internal_r+0x1eb8>
   82a3c:	00800084 	movi	r2,2
   82a40:	10c5c83a 	sub	r2,r2,r3
   82a44:	003f9d06 	br	828bc <___vfprintf_internal_r+0x1f80>
   82a48:	a5000084 	addi	r20,r20,2
   82a4c:	dd012e15 	stw	r20,1208(sp)
   82a50:	a005883a 	mov	r2,r20
   82a54:	a03dd30e 	bge	r20,zero,821a4 <___vfprintf_internal_r+0x1868>
   82a58:	003fda06 	br	829c4 <___vfprintf_internal_r+0x2088>
   82a5c:	0005883a 	mov	r2,zero
   82a60:	003dcd06 	br	82198 <___vfprintf_internal_r+0x185c>
   82a64:	d8812617 	ldw	r2,1176(sp)
   82a68:	003f5c06 	br	827dc <___vfprintf_internal_r+0x1ea0>
   82a6c:	94803fcc 	andi	r18,r18,255
   82a70:	9480201c 	xori	r18,r18,128
   82a74:	00ffffc4 	movi	r3,-1
   82a78:	94bfe004 	addi	r18,r18,-128
   82a7c:	00381406 	br	80ad0 <___vfprintf_internal_r+0x194>
   82a80:	0005883a 	mov	r2,zero
   82a84:	003fa406 	br	82918 <___vfprintf_internal_r+0x1fdc>
   82a88:	d8c12344 	addi	r3,sp,1165
   82a8c:	003f6106 	br	82814 <___vfprintf_internal_r+0x1ed8>

00082a90 <__vfprintf_internal>:
   82a90:	00800274 	movhi	r2,9
   82a94:	10866404 	addi	r2,r2,6544
   82a98:	2007883a 	mov	r3,r4
   82a9c:	11000017 	ldw	r4,0(r2)
   82aa0:	2805883a 	mov	r2,r5
   82aa4:	300f883a 	mov	r7,r6
   82aa8:	180b883a 	mov	r5,r3
   82aac:	100d883a 	mov	r6,r2
   82ab0:	008093c1 	jmpi	8093c <___vfprintf_internal_r>

00082ab4 <__swsetup_r>:
   82ab4:	00800274 	movhi	r2,9
   82ab8:	10866404 	addi	r2,r2,6544
   82abc:	10800017 	ldw	r2,0(r2)
   82ac0:	defffd04 	addi	sp,sp,-12
   82ac4:	dc400115 	stw	r17,4(sp)
   82ac8:	dc000015 	stw	r16,0(sp)
   82acc:	dfc00215 	stw	ra,8(sp)
   82ad0:	2023883a 	mov	r17,r4
   82ad4:	2821883a 	mov	r16,r5
   82ad8:	10000226 	beq	r2,zero,82ae4 <__swsetup_r+0x30>
   82adc:	10c00e17 	ldw	r3,56(r2)
   82ae0:	18002e26 	beq	r3,zero,82b9c <__swsetup_r+0xe8>
   82ae4:	8080030b 	ldhu	r2,12(r16)
   82ae8:	10c0020c 	andi	r3,r2,8
   82aec:	100d883a 	mov	r6,r2
   82af0:	18000f26 	beq	r3,zero,82b30 <__swsetup_r+0x7c>
   82af4:	80c00417 	ldw	r3,16(r16)
   82af8:	18001526 	beq	r3,zero,82b50 <__swsetup_r+0x9c>
   82afc:	1100004c 	andi	r4,r2,1
   82b00:	20001c1e 	bne	r4,zero,82b74 <__swsetup_r+0xc0>
   82b04:	1080008c 	andi	r2,r2,2
   82b08:	1000271e 	bne	r2,zero,82ba8 <__swsetup_r+0xf4>
   82b0c:	80800517 	ldw	r2,20(r16)
   82b10:	80800215 	stw	r2,8(r16)
   82b14:	18001c26 	beq	r3,zero,82b88 <__swsetup_r+0xd4>
   82b18:	0005883a 	mov	r2,zero
   82b1c:	dfc00217 	ldw	ra,8(sp)
   82b20:	dc400117 	ldw	r17,4(sp)
   82b24:	dc000017 	ldw	r16,0(sp)
   82b28:	dec00304 	addi	sp,sp,12
   82b2c:	f800283a 	ret
   82b30:	3080040c 	andi	r2,r6,16
   82b34:	10001726 	beq	r2,zero,82b94 <__swsetup_r+0xe0>
   82b38:	3080010c 	andi	r2,r6,4
   82b3c:	10001d1e 	bne	r2,zero,82bb4 <__swsetup_r+0x100>
   82b40:	80c00417 	ldw	r3,16(r16)
   82b44:	30800214 	ori	r2,r6,8
   82b48:	8080030d 	sth	r2,12(r16)
   82b4c:	183feb1e 	bne	r3,zero,82afc <__swsetup_r+0x48>
   82b50:	1140a00c 	andi	r5,r2,640
   82b54:	01008004 	movi	r4,512
   82b58:	293fe826 	beq	r5,r4,82afc <__swsetup_r+0x48>
   82b5c:	8809883a 	mov	r4,r17
   82b60:	800b883a 	mov	r5,r16
   82b64:	00855540 	call	85554 <__smakebuf_r>
   82b68:	8080030b 	ldhu	r2,12(r16)
   82b6c:	80c00417 	ldw	r3,16(r16)
   82b70:	003fe206 	br	82afc <__swsetup_r+0x48>
   82b74:	80800517 	ldw	r2,20(r16)
   82b78:	80000215 	stw	zero,8(r16)
   82b7c:	0085c83a 	sub	r2,zero,r2
   82b80:	80800615 	stw	r2,24(r16)
   82b84:	183fe41e 	bne	r3,zero,82b18 <__swsetup_r+0x64>
   82b88:	8080030b 	ldhu	r2,12(r16)
   82b8c:	1080200c 	andi	r2,r2,128
   82b90:	103fe226 	beq	r2,zero,82b1c <__swsetup_r+0x68>
   82b94:	00bfffc4 	movi	r2,-1
   82b98:	003fe006 	br	82b1c <__swsetup_r+0x68>
   82b9c:	1009883a 	mov	r4,r2
   82ba0:	00847700 	call	84770 <__sinit>
   82ba4:	003fcf06 	br	82ae4 <__swsetup_r+0x30>
   82ba8:	0005883a 	mov	r2,zero
   82bac:	80800215 	stw	r2,8(r16)
   82bb0:	003fd806 	br	82b14 <__swsetup_r+0x60>
   82bb4:	81400c17 	ldw	r5,48(r16)
   82bb8:	28000626 	beq	r5,zero,82bd4 <__swsetup_r+0x120>
   82bbc:	80801004 	addi	r2,r16,64
   82bc0:	28800326 	beq	r5,r2,82bd0 <__swsetup_r+0x11c>
   82bc4:	8809883a 	mov	r4,r17
   82bc8:	0084ba40 	call	84ba4 <_free_r>
   82bcc:	8180030b 	ldhu	r6,12(r16)
   82bd0:	80000c15 	stw	zero,48(r16)
   82bd4:	80c00417 	ldw	r3,16(r16)
   82bd8:	00bff6c4 	movi	r2,-37
   82bdc:	118c703a 	and	r6,r2,r6
   82be0:	80000115 	stw	zero,4(r16)
   82be4:	80c00015 	stw	r3,0(r16)
   82be8:	003fd606 	br	82b44 <__swsetup_r+0x90>

00082bec <quorem>:
   82bec:	defff204 	addi	sp,sp,-56
   82bf0:	dd400915 	stw	r21,36(sp)
   82bf4:	20800417 	ldw	r2,16(r4)
   82bf8:	2d400417 	ldw	r21,16(r5)
   82bfc:	dfc00d15 	stw	ra,52(sp)
   82c00:	df000c15 	stw	fp,48(sp)
   82c04:	ddc00b15 	stw	r23,44(sp)
   82c08:	dd800a15 	stw	r22,40(sp)
   82c0c:	dd000815 	stw	r20,32(sp)
   82c10:	dcc00715 	stw	r19,28(sp)
   82c14:	dc800615 	stw	r18,24(sp)
   82c18:	dc400515 	stw	r17,20(sp)
   82c1c:	dc000415 	stw	r16,16(sp)
   82c20:	d9000015 	stw	r4,0(sp)
   82c24:	d9400115 	stw	r5,4(sp)
   82c28:	15407816 	blt	r2,r21,82e0c <quorem+0x220>
   82c2c:	ad7fffc4 	addi	r21,r21,-1
   82c30:	ad79883a 	add	fp,r21,r21
   82c34:	28c00504 	addi	r3,r5,20
   82c38:	e739883a 	add	fp,fp,fp
   82c3c:	1f2f883a 	add	r23,r3,fp
   82c40:	24400504 	addi	r17,r4,20
   82c44:	8f39883a 	add	fp,r17,fp
   82c48:	b9400017 	ldw	r5,0(r23)
   82c4c:	e1000017 	ldw	r4,0(fp)
   82c50:	d8c00215 	stw	r3,8(sp)
   82c54:	29400044 	addi	r5,r5,1
   82c58:	df000315 	stw	fp,12(sp)
   82c5c:	008aa680 	call	8aa68 <__udivsi3>
   82c60:	1021883a 	mov	r16,r2
   82c64:	10003026 	beq	r2,zero,82d28 <quorem+0x13c>
   82c68:	dcc00217 	ldw	r19,8(sp)
   82c6c:	8829883a 	mov	r20,r17
   82c70:	002d883a 	mov	r22,zero
   82c74:	0039883a 	mov	fp,zero
   82c78:	9c800017 	ldw	r18,0(r19)
   82c7c:	800b883a 	mov	r5,r16
   82c80:	9cc00104 	addi	r19,r19,4
   82c84:	913fffcc 	andi	r4,r18,65535
   82c88:	008aa780 	call	8aa78 <__mulsi3>
   82c8c:	9008d43a 	srli	r4,r18,16
   82c90:	800b883a 	mov	r5,r16
   82c94:	b0ad883a 	add	r22,r22,r2
   82c98:	008aa780 	call	8aa78 <__mulsi3>
   82c9c:	a1400017 	ldw	r5,0(r20)
   82ca0:	b010d43a 	srli	r8,r22,16
   82ca4:	b0ffffcc 	andi	r3,r22,65535
   82ca8:	293fffcc 	andi	r4,r5,65535
   82cac:	2709883a 	add	r4,r4,fp
   82cb0:	280cd43a 	srli	r6,r5,16
   82cb4:	20c9c83a 	sub	r4,r4,r3
   82cb8:	4085883a 	add	r2,r8,r2
   82cbc:	2007d43a 	srai	r3,r4,16
   82cc0:	117fffcc 	andi	r5,r2,65535
   82cc4:	314bc83a 	sub	r5,r6,r5
   82cc8:	28cb883a 	add	r5,r5,r3
   82ccc:	280c943a 	slli	r6,r5,16
   82cd0:	213fffcc 	andi	r4,r4,65535
   82cd4:	102cd43a 	srli	r22,r2,16
   82cd8:	3108b03a 	or	r4,r6,r4
   82cdc:	a1000015 	stw	r4,0(r20)
   82ce0:	2839d43a 	srai	fp,r5,16
   82ce4:	a5000104 	addi	r20,r20,4
   82ce8:	bcffe32e 	bgeu	r23,r19,82c78 <quorem+0x8c>
   82cec:	d8c00317 	ldw	r3,12(sp)
   82cf0:	18800017 	ldw	r2,0(r3)
   82cf4:	10000c1e 	bne	r2,zero,82d28 <quorem+0x13c>
   82cf8:	18bfff04 	addi	r2,r3,-4
   82cfc:	8880082e 	bgeu	r17,r2,82d20 <quorem+0x134>
   82d00:	18ffff17 	ldw	r3,-4(r3)
   82d04:	18000326 	beq	r3,zero,82d14 <quorem+0x128>
   82d08:	00000506 	br	82d20 <quorem+0x134>
   82d0c:	10c00017 	ldw	r3,0(r2)
   82d10:	1800031e 	bne	r3,zero,82d20 <quorem+0x134>
   82d14:	10bfff04 	addi	r2,r2,-4
   82d18:	ad7fffc4 	addi	r21,r21,-1
   82d1c:	88bffb36 	bltu	r17,r2,82d0c <quorem+0x120>
   82d20:	d8c00017 	ldw	r3,0(sp)
   82d24:	1d400415 	stw	r21,16(r3)
   82d28:	d9000017 	ldw	r4,0(sp)
   82d2c:	d9400117 	ldw	r5,4(sp)
   82d30:	0086c800 	call	86c80 <__mcmp>
   82d34:	10002816 	blt	r2,zero,82dd8 <quorem+0x1ec>
   82d38:	d8c00217 	ldw	r3,8(sp)
   82d3c:	84000044 	addi	r16,r16,1
   82d40:	880d883a 	mov	r6,r17
   82d44:	000f883a 	mov	r7,zero
   82d48:	32800017 	ldw	r10,0(r6)
   82d4c:	1a400017 	ldw	r9,0(r3)
   82d50:	31800104 	addi	r6,r6,4
   82d54:	523fffcc 	andi	r8,r10,65535
   82d58:	48bfffcc 	andi	r2,r9,65535
   82d5c:	41cf883a 	add	r7,r8,r7
   82d60:	3891c83a 	sub	r8,r7,r2
   82d64:	4812d43a 	srli	r9,r9,16
   82d68:	500ed43a 	srli	r7,r10,16
   82d6c:	4005d43a 	srai	r2,r8,16
   82d70:	423fffcc 	andi	r8,r8,65535
   82d74:	3a4fc83a 	sub	r7,r7,r9
   82d78:	388f883a 	add	r7,r7,r2
   82d7c:	3804943a 	slli	r2,r7,16
   82d80:	18c00104 	addi	r3,r3,4
   82d84:	380fd43a 	srai	r7,r7,16
   82d88:	1210b03a 	or	r8,r2,r8
   82d8c:	323fff15 	stw	r8,-4(r6)
   82d90:	b8ffed2e 	bgeu	r23,r3,82d48 <quorem+0x15c>
   82d94:	ad45883a 	add	r2,r21,r21
   82d98:	1085883a 	add	r2,r2,r2
   82d9c:	8887883a 	add	r3,r17,r2
   82da0:	18800017 	ldw	r2,0(r3)
   82da4:	10000c1e 	bne	r2,zero,82dd8 <quorem+0x1ec>
   82da8:	18bfff04 	addi	r2,r3,-4
   82dac:	8880082e 	bgeu	r17,r2,82dd0 <quorem+0x1e4>
   82db0:	18ffff17 	ldw	r3,-4(r3)
   82db4:	18000326 	beq	r3,zero,82dc4 <quorem+0x1d8>
   82db8:	00000506 	br	82dd0 <quorem+0x1e4>
   82dbc:	10c00017 	ldw	r3,0(r2)
   82dc0:	1800031e 	bne	r3,zero,82dd0 <quorem+0x1e4>
   82dc4:	10bfff04 	addi	r2,r2,-4
   82dc8:	ad7fffc4 	addi	r21,r21,-1
   82dcc:	88bffb36 	bltu	r17,r2,82dbc <quorem+0x1d0>
   82dd0:	d8c00017 	ldw	r3,0(sp)
   82dd4:	1d400415 	stw	r21,16(r3)
   82dd8:	8005883a 	mov	r2,r16
   82ddc:	dfc00d17 	ldw	ra,52(sp)
   82de0:	df000c17 	ldw	fp,48(sp)
   82de4:	ddc00b17 	ldw	r23,44(sp)
   82de8:	dd800a17 	ldw	r22,40(sp)
   82dec:	dd400917 	ldw	r21,36(sp)
   82df0:	dd000817 	ldw	r20,32(sp)
   82df4:	dcc00717 	ldw	r19,28(sp)
   82df8:	dc800617 	ldw	r18,24(sp)
   82dfc:	dc400517 	ldw	r17,20(sp)
   82e00:	dc000417 	ldw	r16,16(sp)
   82e04:	dec00e04 	addi	sp,sp,56
   82e08:	f800283a 	ret
   82e0c:	0005883a 	mov	r2,zero
   82e10:	003ff206 	br	82ddc <quorem+0x1f0>

00082e14 <_dtoa_r>:
   82e14:	20801017 	ldw	r2,64(r4)
   82e18:	deffdf04 	addi	sp,sp,-132
   82e1c:	dcc01a15 	stw	r19,104(sp)
   82e20:	dc801915 	stw	r18,100(sp)
   82e24:	dc401815 	stw	r17,96(sp)
   82e28:	dc001715 	stw	r16,92(sp)
   82e2c:	dfc02015 	stw	ra,128(sp)
   82e30:	df001f15 	stw	fp,124(sp)
   82e34:	ddc01e15 	stw	r23,120(sp)
   82e38:	dd801d15 	stw	r22,116(sp)
   82e3c:	dd401c15 	stw	r21,112(sp)
   82e40:	dd001b15 	stw	r20,108(sp)
   82e44:	d9400315 	stw	r5,12(sp)
   82e48:	d9c00415 	stw	r7,16(sp)
   82e4c:	2021883a 	mov	r16,r4
   82e50:	3023883a 	mov	r17,r6
   82e54:	dcc02317 	ldw	r19,140(sp)
   82e58:	3025883a 	mov	r18,r6
   82e5c:	10000826 	beq	r2,zero,82e80 <_dtoa_r+0x6c>
   82e60:	20c01117 	ldw	r3,68(r4)
   82e64:	01800044 	movi	r6,1
   82e68:	100b883a 	mov	r5,r2
   82e6c:	30cc983a 	sll	r6,r6,r3
   82e70:	10c00115 	stw	r3,4(r2)
   82e74:	11800215 	stw	r6,8(r2)
   82e78:	00863b80 	call	863b8 <_Bfree>
   82e7c:	80001015 	stw	zero,64(r16)
   82e80:	88002e16 	blt	r17,zero,82f3c <_dtoa_r+0x128>
   82e84:	98000015 	stw	zero,0(r19)
   82e88:	88dffc2c 	andhi	r3,r17,32752
   82e8c:	009ffc34 	movhi	r2,32752
   82e90:	18801b26 	beq	r3,r2,82f00 <_dtoa_r+0xec>
   82e94:	d9000317 	ldw	r4,12(sp)
   82e98:	900b883a 	mov	r5,r18
   82e9c:	000d883a 	mov	r6,zero
   82ea0:	000f883a 	mov	r7,zero
   82ea4:	008bcb80 	call	8bcb8 <__eqdf2>
   82ea8:	10002b1e 	bne	r2,zero,82f58 <_dtoa_r+0x144>
   82eac:	d8c02217 	ldw	r3,136(sp)
   82eb0:	d9002417 	ldw	r4,144(sp)
   82eb4:	00800044 	movi	r2,1
   82eb8:	18800015 	stw	r2,0(r3)
   82ebc:	2001a026 	beq	r4,zero,83540 <_dtoa_r+0x72c>
   82ec0:	00800274 	movhi	r2,9
   82ec4:	10bf0c44 	addi	r2,r2,-975
   82ec8:	20800015 	stw	r2,0(r4)
   82ecc:	10bfffc4 	addi	r2,r2,-1
   82ed0:	dfc02017 	ldw	ra,128(sp)
   82ed4:	df001f17 	ldw	fp,124(sp)
   82ed8:	ddc01e17 	ldw	r23,120(sp)
   82edc:	dd801d17 	ldw	r22,116(sp)
   82ee0:	dd401c17 	ldw	r21,112(sp)
   82ee4:	dd001b17 	ldw	r20,108(sp)
   82ee8:	dcc01a17 	ldw	r19,104(sp)
   82eec:	dc801917 	ldw	r18,100(sp)
   82ef0:	dc401817 	ldw	r17,96(sp)
   82ef4:	dc001717 	ldw	r16,92(sp)
   82ef8:	dec02104 	addi	sp,sp,132
   82efc:	f800283a 	ret
   82f00:	d8c02217 	ldw	r3,136(sp)
   82f04:	d9000317 	ldw	r4,12(sp)
   82f08:	0089c3c4 	movi	r2,9999
   82f0c:	18800015 	stw	r2,0(r3)
   82f10:	20017926 	beq	r4,zero,834f8 <_dtoa_r+0x6e4>
   82f14:	00800274 	movhi	r2,9
   82f18:	10bf1804 	addi	r2,r2,-928
   82f1c:	d9802417 	ldw	r6,144(sp)
   82f20:	303feb26 	beq	r6,zero,82ed0 <_dtoa_r+0xbc>
   82f24:	10c000c7 	ldb	r3,3(r2)
   82f28:	18017a1e 	bne	r3,zero,83514 <_dtoa_r+0x700>
   82f2c:	10c000c4 	addi	r3,r2,3
   82f30:	d9c02417 	ldw	r7,144(sp)
   82f34:	38c00015 	stw	r3,0(r7)
   82f38:	003fe506 	br	82ed0 <_dtoa_r+0xbc>
   82f3c:	04a00034 	movhi	r18,32768
   82f40:	94bfffc4 	addi	r18,r18,-1
   82f44:	8ca4703a 	and	r18,r17,r18
   82f48:	00800044 	movi	r2,1
   82f4c:	98800015 	stw	r2,0(r19)
   82f50:	9023883a 	mov	r17,r18
   82f54:	003fcc06 	br	82e88 <_dtoa_r+0x74>
   82f58:	d9400317 	ldw	r5,12(sp)
   82f5c:	d8800204 	addi	r2,sp,8
   82f60:	8828d53a 	srli	r20,r17,20
   82f64:	d8800015 	stw	r2,0(sp)
   82f68:	8009883a 	mov	r4,r16
   82f6c:	900d883a 	mov	r6,r18
   82f70:	d9c00104 	addi	r7,sp,4
   82f74:	0086fe00 	call	86fe0 <__d2b>
   82f78:	1039883a 	mov	fp,r2
   82f7c:	a001671e 	bne	r20,zero,8351c <_dtoa_r+0x708>
   82f80:	dd400217 	ldw	r21,8(sp)
   82f84:	dd000117 	ldw	r20,4(sp)
   82f88:	00befbc4 	movi	r2,-1041
   82f8c:	ad29883a 	add	r20,r21,r20
   82f90:	a082d616 	blt	r20,r2,83aec <_dtoa_r+0xcd8>
   82f94:	d9800317 	ldw	r6,12(sp)
   82f98:	013f0384 	movi	r4,-1010
   82f9c:	2509c83a 	sub	r4,r4,r20
   82fa0:	a0810484 	addi	r2,r20,1042
   82fa4:	8922983a 	sll	r17,r17,r4
   82fa8:	3084d83a 	srl	r2,r6,r2
   82fac:	8888b03a 	or	r4,r17,r2
   82fb0:	008d0d80 	call	8d0d8 <__floatunsidf>
   82fb4:	1009883a 	mov	r4,r2
   82fb8:	017f8434 	movhi	r5,65040
   82fbc:	00800044 	movi	r2,1
   82fc0:	194b883a 	add	r5,r3,r5
   82fc4:	a53fffc4 	addi	r20,r20,-1
   82fc8:	d8800f15 	stw	r2,60(sp)
   82fcc:	000d883a 	mov	r6,zero
   82fd0:	01cffe34 	movhi	r7,16376
   82fd4:	008c7000 	call	8c700 <__subdf3>
   82fd8:	1009883a 	mov	r4,r2
   82fdc:	180b883a 	mov	r5,r3
   82fe0:	0198dbf4 	movhi	r6,25455
   82fe4:	3190d844 	addi	r6,r6,17249
   82fe8:	01cff4f4 	movhi	r7,16339
   82fec:	39e1e9c4 	addi	r7,r7,-30809
   82ff0:	008bf000 	call	8bf00 <__muldf3>
   82ff4:	180b883a 	mov	r5,r3
   82ff8:	01a2d874 	movhi	r6,35681
   82ffc:	31b22cc4 	addi	r6,r6,-14157
   83000:	01cff1f4 	movhi	r7,16327
   83004:	39e28a04 	addi	r7,r7,-30168
   83008:	1009883a 	mov	r4,r2
   8300c:	008aaa00 	call	8aaa0 <__adddf3>
   83010:	a009883a 	mov	r4,r20
   83014:	1027883a 	mov	r19,r2
   83018:	1823883a 	mov	r17,r3
   8301c:	008d0080 	call	8d008 <__floatsidf>
   83020:	1009883a 	mov	r4,r2
   83024:	180b883a 	mov	r5,r3
   83028:	019427f4 	movhi	r6,20639
   8302c:	319e7ec4 	addi	r6,r6,31227
   83030:	01cff4f4 	movhi	r7,16339
   83034:	39d104c4 	addi	r7,r7,17427
   83038:	008bf000 	call	8bf00 <__muldf3>
   8303c:	9809883a 	mov	r4,r19
   83040:	880b883a 	mov	r5,r17
   83044:	100d883a 	mov	r6,r2
   83048:	180f883a 	mov	r7,r3
   8304c:	008aaa00 	call	8aaa0 <__adddf3>
   83050:	1009883a 	mov	r4,r2
   83054:	180b883a 	mov	r5,r3
   83058:	1027883a 	mov	r19,r2
   8305c:	1823883a 	mov	r17,r3
   83060:	008cf880 	call	8cf88 <__fixdfsi>
   83064:	9809883a 	mov	r4,r19
   83068:	880b883a 	mov	r5,r17
   8306c:	000d883a 	mov	r6,zero
   83070:	000f883a 	mov	r7,zero
   83074:	d8800615 	stw	r2,24(sp)
   83078:	008be140 	call	8be14 <__ledf2>
   8307c:	10028416 	blt	r2,zero,83a90 <_dtoa_r+0xc7c>
   83080:	d9000617 	ldw	r4,24(sp)
   83084:	00800584 	movi	r2,22
   83088:	11027236 	bltu	r2,r4,83a54 <_dtoa_r+0xc40>
   8308c:	200490fa 	slli	r2,r4,3
   83090:	00c00274 	movhi	r3,9
   83094:	18ff3304 	addi	r3,r3,-820
   83098:	d9800317 	ldw	r6,12(sp)
   8309c:	1885883a 	add	r2,r3,r2
   830a0:	11000017 	ldw	r4,0(r2)
   830a4:	11400117 	ldw	r5,4(r2)
   830a8:	900f883a 	mov	r7,r18
   830ac:	008bd3c0 	call	8bd3c <__gedf2>
   830b0:	0082930e 	bge	zero,r2,83b00 <_dtoa_r+0xcec>
   830b4:	d9800617 	ldw	r6,24(sp)
   830b8:	d8000e15 	stw	zero,56(sp)
   830bc:	31bfffc4 	addi	r6,r6,-1
   830c0:	d9800615 	stw	r6,24(sp)
   830c4:	ad2bc83a 	sub	r21,r21,r20
   830c8:	ad7fffc4 	addi	r21,r21,-1
   830cc:	a8026c16 	blt	r21,zero,83a80 <_dtoa_r+0xc6c>
   830d0:	d8000815 	stw	zero,32(sp)
   830d4:	d8800617 	ldw	r2,24(sp)
   830d8:	10026116 	blt	r2,zero,83a60 <_dtoa_r+0xc4c>
   830dc:	a8ab883a 	add	r21,r21,r2
   830e0:	d8800b15 	stw	r2,44(sp)
   830e4:	d8000a15 	stw	zero,40(sp)
   830e8:	d9c00417 	ldw	r7,16(sp)
   830ec:	00800244 	movi	r2,9
   830f0:	11c11636 	bltu	r2,r7,8354c <_dtoa_r+0x738>
   830f4:	00800144 	movi	r2,5
   830f8:	11c4cc0e 	bge	r2,r7,8442c <_dtoa_r+0x1618>
   830fc:	39ffff04 	addi	r7,r7,-4
   83100:	d9c00415 	stw	r7,16(sp)
   83104:	0027883a 	mov	r19,zero
   83108:	d8c00417 	ldw	r3,16(sp)
   8310c:	008000c4 	movi	r2,3
   83110:	1883aa26 	beq	r3,r2,83fbc <_dtoa_r+0x11a8>
   83114:	10c35b0e 	bge	r2,r3,83e84 <_dtoa_r+0x1070>
   83118:	d9000417 	ldw	r4,16(sp)
   8311c:	00800104 	movi	r2,4
   83120:	2082da26 	beq	r4,r2,83c8c <_dtoa_r+0xe78>
   83124:	00800144 	movi	r2,5
   83128:	2081091e 	bne	r4,r2,83550 <_dtoa_r+0x73c>
   8312c:	01c00044 	movi	r7,1
   83130:	d9c00c15 	stw	r7,48(sp)
   83134:	d8c02117 	ldw	r3,132(sp)
   83138:	d9000617 	ldw	r4,24(sp)
   8313c:	1907883a 	add	r3,r3,r4
   83140:	19800044 	addi	r6,r3,1
   83144:	d8c00d15 	stw	r3,52(sp)
   83148:	d9800915 	stw	r6,36(sp)
   8314c:	0183a90e 	bge	zero,r6,83ff4 <_dtoa_r+0x11e0>
   83150:	d9800917 	ldw	r6,36(sp)
   83154:	80001115 	stw	zero,68(r16)
   83158:	008005c4 	movi	r2,23
   8315c:	1184b52e 	bgeu	r2,r6,84434 <_dtoa_r+0x1620>
   83160:	00c00044 	movi	r3,1
   83164:	00800104 	movi	r2,4
   83168:	1085883a 	add	r2,r2,r2
   8316c:	11000504 	addi	r4,r2,20
   83170:	180b883a 	mov	r5,r3
   83174:	18c00044 	addi	r3,r3,1
   83178:	313ffb2e 	bgeu	r6,r4,83168 <_dtoa_r+0x354>
   8317c:	81401115 	stw	r5,68(r16)
   83180:	3023883a 	mov	r17,r6
   83184:	8009883a 	mov	r4,r16
   83188:	00863100 	call	86310 <_Balloc>
   8318c:	d8800715 	stw	r2,28(sp)
   83190:	80801015 	stw	r2,64(r16)
   83194:	00800384 	movi	r2,14
   83198:	1440f936 	bltu	r2,r17,83580 <_dtoa_r+0x76c>
   8319c:	9800f826 	beq	r19,zero,83580 <_dtoa_r+0x76c>
   831a0:	d9c00617 	ldw	r7,24(sp)
   831a4:	01c39c0e 	bge	zero,r7,84018 <_dtoa_r+0x1204>
   831a8:	388003cc 	andi	r2,r7,15
   831ac:	100490fa 	slli	r2,r2,3
   831b0:	382dd13a 	srai	r22,r7,4
   831b4:	00c00274 	movhi	r3,9
   831b8:	18ff3304 	addi	r3,r3,-820
   831bc:	1885883a 	add	r2,r3,r2
   831c0:	b0c0040c 	andi	r3,r22,16
   831c4:	12800017 	ldw	r10,0(r2)
   831c8:	12400117 	ldw	r9,4(r2)
   831cc:	18038526 	beq	r3,zero,83fe4 <_dtoa_r+0x11d0>
   831d0:	00800274 	movhi	r2,9
   831d4:	10bf2904 	addi	r2,r2,-860
   831d8:	11800817 	ldw	r6,32(r2)
   831dc:	11c00917 	ldw	r7,36(r2)
   831e0:	d9000317 	ldw	r4,12(sp)
   831e4:	900b883a 	mov	r5,r18
   831e8:	da401515 	stw	r9,84(sp)
   831ec:	da801615 	stw	r10,88(sp)
   831f0:	008b31c0 	call	8b31c <__divdf3>
   831f4:	da401517 	ldw	r9,84(sp)
   831f8:	da801617 	ldw	r10,88(sp)
   831fc:	1027883a 	mov	r19,r2
   83200:	1829883a 	mov	r20,r3
   83204:	b58003cc 	andi	r22,r22,15
   83208:	044000c4 	movi	r17,3
   8320c:	b0001126 	beq	r22,zero,83254 <_dtoa_r+0x440>
   83210:	05c00274 	movhi	r23,9
   83214:	bdff2904 	addi	r23,r23,-860
   83218:	5005883a 	mov	r2,r10
   8321c:	4807883a 	mov	r3,r9
   83220:	b180004c 	andi	r6,r22,1
   83224:	1009883a 	mov	r4,r2
   83228:	b02dd07a 	srai	r22,r22,1
   8322c:	180b883a 	mov	r5,r3
   83230:	30000426 	beq	r6,zero,83244 <_dtoa_r+0x430>
   83234:	b9800017 	ldw	r6,0(r23)
   83238:	b9c00117 	ldw	r7,4(r23)
   8323c:	8c400044 	addi	r17,r17,1
   83240:	008bf000 	call	8bf00 <__muldf3>
   83244:	bdc00204 	addi	r23,r23,8
   83248:	b03ff51e 	bne	r22,zero,83220 <_dtoa_r+0x40c>
   8324c:	1015883a 	mov	r10,r2
   83250:	1813883a 	mov	r9,r3
   83254:	9809883a 	mov	r4,r19
   83258:	a00b883a 	mov	r5,r20
   8325c:	500d883a 	mov	r6,r10
   83260:	480f883a 	mov	r7,r9
   83264:	008b31c0 	call	8b31c <__divdf3>
   83268:	1027883a 	mov	r19,r2
   8326c:	1829883a 	mov	r20,r3
   83270:	d8c00e17 	ldw	r3,56(sp)
   83274:	18000626 	beq	r3,zero,83290 <_dtoa_r+0x47c>
   83278:	9809883a 	mov	r4,r19
   8327c:	a00b883a 	mov	r5,r20
   83280:	000d883a 	mov	r6,zero
   83284:	01cffc34 	movhi	r7,16368
   83288:	008be140 	call	8be14 <__ledf2>
   8328c:	10041516 	blt	r2,zero,842e4 <_dtoa_r+0x14d0>
   83290:	8809883a 	mov	r4,r17
   83294:	008d0080 	call	8d008 <__floatsidf>
   83298:	1009883a 	mov	r4,r2
   8329c:	180b883a 	mov	r5,r3
   832a0:	980d883a 	mov	r6,r19
   832a4:	a00f883a 	mov	r7,r20
   832a8:	008bf000 	call	8bf00 <__muldf3>
   832ac:	1009883a 	mov	r4,r2
   832b0:	180b883a 	mov	r5,r3
   832b4:	000d883a 	mov	r6,zero
   832b8:	01d00734 	movhi	r7,16412
   832bc:	008aaa00 	call	8aaa0 <__adddf3>
   832c0:	1023883a 	mov	r17,r2
   832c4:	d8800917 	ldw	r2,36(sp)
   832c8:	05bf3034 	movhi	r22,64704
   832cc:	1daf883a 	add	r23,r3,r22
   832d0:	10031e26 	beq	r2,zero,83f4c <_dtoa_r+0x1138>
   832d4:	d8c00617 	ldw	r3,24(sp)
   832d8:	dac00917 	ldw	r11,36(sp)
   832dc:	d8c01315 	stw	r3,76(sp)
   832e0:	d9000c17 	ldw	r4,48(sp)
   832e4:	20039626 	beq	r4,zero,84140 <_dtoa_r+0x132c>
   832e8:	58bfffc4 	addi	r2,r11,-1
   832ec:	100490fa 	slli	r2,r2,3
   832f0:	00c00274 	movhi	r3,9
   832f4:	18ff3304 	addi	r3,r3,-820
   832f8:	0009883a 	mov	r4,zero
   832fc:	1885883a 	add	r2,r3,r2
   83300:	11800017 	ldw	r6,0(r2)
   83304:	11c00117 	ldw	r7,4(r2)
   83308:	d8800717 	ldw	r2,28(sp)
   8330c:	014ff834 	movhi	r5,16352
   83310:	dac01615 	stw	r11,88(sp)
   83314:	15800044 	addi	r22,r2,1
   83318:	008b31c0 	call	8b31c <__divdf3>
   8331c:	880d883a 	mov	r6,r17
   83320:	b80f883a 	mov	r7,r23
   83324:	1009883a 	mov	r4,r2
   83328:	180b883a 	mov	r5,r3
   8332c:	008c7000 	call	8c700 <__subdf3>
   83330:	a00b883a 	mov	r5,r20
   83334:	9809883a 	mov	r4,r19
   83338:	102f883a 	mov	r23,r2
   8333c:	d8c01015 	stw	r3,64(sp)
   83340:	008cf880 	call	8cf88 <__fixdfsi>
   83344:	1009883a 	mov	r4,r2
   83348:	d8801515 	stw	r2,84(sp)
   8334c:	008d0080 	call	8d008 <__floatsidf>
   83350:	9809883a 	mov	r4,r19
   83354:	a00b883a 	mov	r5,r20
   83358:	100d883a 	mov	r6,r2
   8335c:	180f883a 	mov	r7,r3
   83360:	008c7000 	call	8c700 <__subdf3>
   83364:	da401517 	ldw	r9,84(sp)
   83368:	1827883a 	mov	r19,r3
   8336c:	d8c00717 	ldw	r3,28(sp)
   83370:	d9401017 	ldw	r5,64(sp)
   83374:	4a400c04 	addi	r9,r9,48
   83378:	1023883a 	mov	r17,r2
   8337c:	1a400005 	stb	r9,0(r3)
   83380:	b809883a 	mov	r4,r23
   83384:	880d883a 	mov	r6,r17
   83388:	980f883a 	mov	r7,r19
   8338c:	4829883a 	mov	r20,r9
   83390:	008bd3c0 	call	8bd3c <__gedf2>
   83394:	00842216 	blt	zero,r2,84420 <_dtoa_r+0x160c>
   83398:	0009883a 	mov	r4,zero
   8339c:	014ffc34 	movhi	r5,16368
   833a0:	880d883a 	mov	r6,r17
   833a4:	980f883a 	mov	r7,r19
   833a8:	008c7000 	call	8c700 <__subdf3>
   833ac:	d9401017 	ldw	r5,64(sp)
   833b0:	b809883a 	mov	r4,r23
   833b4:	100d883a 	mov	r6,r2
   833b8:	180f883a 	mov	r7,r3
   833bc:	008bd3c0 	call	8bd3c <__gedf2>
   833c0:	dac01617 	ldw	r11,88(sp)
   833c4:	00841316 	blt	zero,r2,84414 <_dtoa_r+0x1600>
   833c8:	00800044 	movi	r2,1
   833cc:	12c06c0e 	bge	r2,r11,83580 <_dtoa_r+0x76c>
   833d0:	d9000717 	ldw	r4,28(sp)
   833d4:	dd401215 	stw	r21,72(sp)
   833d8:	dc001115 	stw	r16,68(sp)
   833dc:	22d7883a 	add	r11,r4,r11
   833e0:	dc801415 	stw	r18,80(sp)
   833e4:	582b883a 	mov	r21,r11
   833e8:	b021883a 	mov	r16,r22
   833ec:	dc801017 	ldw	r18,64(sp)
   833f0:	00000906 	br	83418 <_dtoa_r+0x604>
   833f4:	008c7000 	call	8c700 <__subdf3>
   833f8:	1009883a 	mov	r4,r2
   833fc:	180b883a 	mov	r5,r3
   83400:	b80d883a 	mov	r6,r23
   83404:	900f883a 	mov	r7,r18
   83408:	008be140 	call	8be14 <__ledf2>
   8340c:	1003ea16 	blt	r2,zero,843b8 <_dtoa_r+0x15a4>
   83410:	b543ed26 	beq	r22,r21,843c8 <_dtoa_r+0x15b4>
   83414:	b021883a 	mov	r16,r22
   83418:	b809883a 	mov	r4,r23
   8341c:	900b883a 	mov	r5,r18
   83420:	000d883a 	mov	r6,zero
   83424:	01d00934 	movhi	r7,16420
   83428:	008bf000 	call	8bf00 <__muldf3>
   8342c:	000d883a 	mov	r6,zero
   83430:	01d00934 	movhi	r7,16420
   83434:	8809883a 	mov	r4,r17
   83438:	980b883a 	mov	r5,r19
   8343c:	102f883a 	mov	r23,r2
   83440:	1825883a 	mov	r18,r3
   83444:	008bf000 	call	8bf00 <__muldf3>
   83448:	180b883a 	mov	r5,r3
   8344c:	1009883a 	mov	r4,r2
   83450:	1823883a 	mov	r17,r3
   83454:	1027883a 	mov	r19,r2
   83458:	008cf880 	call	8cf88 <__fixdfsi>
   8345c:	1009883a 	mov	r4,r2
   83460:	1029883a 	mov	r20,r2
   83464:	008d0080 	call	8d008 <__floatsidf>
   83468:	9809883a 	mov	r4,r19
   8346c:	880b883a 	mov	r5,r17
   83470:	100d883a 	mov	r6,r2
   83474:	180f883a 	mov	r7,r3
   83478:	008c7000 	call	8c700 <__subdf3>
   8347c:	a5000c04 	addi	r20,r20,48
   83480:	1009883a 	mov	r4,r2
   83484:	180b883a 	mov	r5,r3
   83488:	b80d883a 	mov	r6,r23
   8348c:	900f883a 	mov	r7,r18
   83490:	85000005 	stb	r20,0(r16)
   83494:	1023883a 	mov	r17,r2
   83498:	1827883a 	mov	r19,r3
   8349c:	008be140 	call	8be14 <__ledf2>
   834a0:	b5800044 	addi	r22,r22,1
   834a4:	0009883a 	mov	r4,zero
   834a8:	014ffc34 	movhi	r5,16368
   834ac:	880d883a 	mov	r6,r17
   834b0:	980f883a 	mov	r7,r19
   834b4:	103fcf0e 	bge	r2,zero,833f4 <_dtoa_r+0x5e0>
   834b8:	d8c01317 	ldw	r3,76(sp)
   834bc:	dc001117 	ldw	r16,68(sp)
   834c0:	d8c00615 	stw	r3,24(sp)
   834c4:	8009883a 	mov	r4,r16
   834c8:	e00b883a 	mov	r5,fp
   834cc:	00863b80 	call	863b8 <_Bfree>
   834d0:	d9800617 	ldw	r6,24(sp)
   834d4:	d9c02217 	ldw	r7,136(sp)
   834d8:	b0000005 	stb	zero,0(r22)
   834dc:	30800044 	addi	r2,r6,1
   834e0:	38800015 	stw	r2,0(r7)
   834e4:	d8802417 	ldw	r2,144(sp)
   834e8:	10026426 	beq	r2,zero,83e7c <_dtoa_r+0x1068>
   834ec:	15800015 	stw	r22,0(r2)
   834f0:	d8800717 	ldw	r2,28(sp)
   834f4:	003e7606 	br	82ed0 <_dtoa_r+0xbc>
   834f8:	00800434 	movhi	r2,16
   834fc:	10bfffc4 	addi	r2,r2,-1
   83500:	88a2703a 	and	r17,r17,r2
   83504:	883e831e 	bne	r17,zero,82f14 <_dtoa_r+0x100>
   83508:	00800274 	movhi	r2,9
   8350c:	10bf1504 	addi	r2,r2,-940
   83510:	003e8206 	br	82f1c <_dtoa_r+0x108>
   83514:	10c00204 	addi	r3,r2,8
   83518:	003e8506 	br	82f30 <_dtoa_r+0x11c>
   8351c:	01400434 	movhi	r5,16
   83520:	297fffc4 	addi	r5,r5,-1
   83524:	914a703a 	and	r5,r18,r5
   83528:	d9000317 	ldw	r4,12(sp)
   8352c:	294ffc34 	orhi	r5,r5,16368
   83530:	a53f0044 	addi	r20,r20,-1023
   83534:	dd400217 	ldw	r21,8(sp)
   83538:	d8000f15 	stw	zero,60(sp)
   8353c:	003ea306 	br	82fcc <_dtoa_r+0x1b8>
   83540:	00800274 	movhi	r2,9
   83544:	10bf0c04 	addi	r2,r2,-976
   83548:	003e6106 	br	82ed0 <_dtoa_r+0xbc>
   8354c:	d8000415 	stw	zero,16(sp)
   83550:	8009883a 	mov	r4,r16
   83554:	80001115 	stw	zero,68(r16)
   83558:	000b883a 	mov	r5,zero
   8355c:	00863100 	call	86310 <_Balloc>
   83560:	00ffffc4 	movi	r3,-1
   83564:	01000044 	movi	r4,1
   83568:	d8800715 	stw	r2,28(sp)
   8356c:	d8c00d15 	stw	r3,52(sp)
   83570:	80801015 	stw	r2,64(r16)
   83574:	d8002115 	stw	zero,132(sp)
   83578:	d8c00915 	stw	r3,36(sp)
   8357c:	d9000c15 	stw	r4,48(sp)
   83580:	d8800117 	ldw	r2,4(sp)
   83584:	10008e16 	blt	r2,zero,837c0 <_dtoa_r+0x9ac>
   83588:	d9000617 	ldw	r4,24(sp)
   8358c:	00c00384 	movi	r3,14
   83590:	19008b16 	blt	r3,r4,837c0 <_dtoa_r+0x9ac>
   83594:	200490fa 	slli	r2,r4,3
   83598:	d9802117 	ldw	r6,132(sp)
   8359c:	00c00274 	movhi	r3,9
   835a0:	18ff3304 	addi	r3,r3,-820
   835a4:	1885883a 	add	r2,r3,r2
   835a8:	14400017 	ldw	r17,0(r2)
   835ac:	14c00117 	ldw	r19,4(r2)
   835b0:	3001be16 	blt	r6,zero,83cac <_dtoa_r+0xe98>
   835b4:	d9000317 	ldw	r4,12(sp)
   835b8:	880d883a 	mov	r6,r17
   835bc:	980f883a 	mov	r7,r19
   835c0:	900b883a 	mov	r5,r18
   835c4:	008b31c0 	call	8b31c <__divdf3>
   835c8:	180b883a 	mov	r5,r3
   835cc:	1009883a 	mov	r4,r2
   835d0:	008cf880 	call	8cf88 <__fixdfsi>
   835d4:	1009883a 	mov	r4,r2
   835d8:	102f883a 	mov	r23,r2
   835dc:	008d0080 	call	8d008 <__floatsidf>
   835e0:	1009883a 	mov	r4,r2
   835e4:	180b883a 	mov	r5,r3
   835e8:	880d883a 	mov	r6,r17
   835ec:	980f883a 	mov	r7,r19
   835f0:	008bf000 	call	8bf00 <__muldf3>
   835f4:	d9000317 	ldw	r4,12(sp)
   835f8:	900b883a 	mov	r5,r18
   835fc:	100d883a 	mov	r6,r2
   83600:	180f883a 	mov	r7,r3
   83604:	008c7000 	call	8c700 <__subdf3>
   83608:	d9c00717 	ldw	r7,28(sp)
   8360c:	1009883a 	mov	r4,r2
   83610:	b8800c04 	addi	r2,r23,48
   83614:	38800005 	stb	r2,0(r7)
   83618:	3d800044 	addi	r22,r7,1
   8361c:	d9c00917 	ldw	r7,36(sp)
   83620:	01800044 	movi	r6,1
   83624:	180b883a 	mov	r5,r3
   83628:	2005883a 	mov	r2,r4
   8362c:	39803e26 	beq	r7,r6,83728 <_dtoa_r+0x914>
   83630:	000d883a 	mov	r6,zero
   83634:	01d00934 	movhi	r7,16420
   83638:	008bf000 	call	8bf00 <__muldf3>
   8363c:	1009883a 	mov	r4,r2
   83640:	180b883a 	mov	r5,r3
   83644:	000d883a 	mov	r6,zero
   83648:	000f883a 	mov	r7,zero
   8364c:	1029883a 	mov	r20,r2
   83650:	182b883a 	mov	r21,r3
   83654:	008bcb80 	call	8bcb8 <__eqdf2>
   83658:	103f9a26 	beq	r2,zero,834c4 <_dtoa_r+0x6b0>
   8365c:	d8c00717 	ldw	r3,28(sp)
   83660:	d9000917 	ldw	r4,36(sp)
   83664:	b025883a 	mov	r18,r22
   83668:	df000415 	stw	fp,16(sp)
   8366c:	1905883a 	add	r2,r3,r4
   83670:	15ffffc4 	addi	r23,r2,-1
   83674:	dc000315 	stw	r16,12(sp)
   83678:	00000a06 	br	836a4 <_dtoa_r+0x890>
   8367c:	008bf000 	call	8bf00 <__muldf3>
   83680:	1009883a 	mov	r4,r2
   83684:	180b883a 	mov	r5,r3
   83688:	000d883a 	mov	r6,zero
   8368c:	000f883a 	mov	r7,zero
   83690:	1029883a 	mov	r20,r2
   83694:	182b883a 	mov	r21,r3
   83698:	008bcb80 	call	8bcb8 <__eqdf2>
   8369c:	10021926 	beq	r2,zero,83f04 <_dtoa_r+0x10f0>
   836a0:	e025883a 	mov	r18,fp
   836a4:	880d883a 	mov	r6,r17
   836a8:	980f883a 	mov	r7,r19
   836ac:	a009883a 	mov	r4,r20
   836b0:	a80b883a 	mov	r5,r21
   836b4:	008b31c0 	call	8b31c <__divdf3>
   836b8:	180b883a 	mov	r5,r3
   836bc:	1009883a 	mov	r4,r2
   836c0:	008cf880 	call	8cf88 <__fixdfsi>
   836c4:	1009883a 	mov	r4,r2
   836c8:	1021883a 	mov	r16,r2
   836cc:	008d0080 	call	8d008 <__floatsidf>
   836d0:	1009883a 	mov	r4,r2
   836d4:	180b883a 	mov	r5,r3
   836d8:	880d883a 	mov	r6,r17
   836dc:	980f883a 	mov	r7,r19
   836e0:	008bf000 	call	8bf00 <__muldf3>
   836e4:	a009883a 	mov	r4,r20
   836e8:	a80b883a 	mov	r5,r21
   836ec:	100d883a 	mov	r6,r2
   836f0:	180f883a 	mov	r7,r3
   836f4:	008c7000 	call	8c700 <__subdf3>
   836f8:	82800c04 	addi	r10,r16,48
   836fc:	97000044 	addi	fp,r18,1
   83700:	92800005 	stb	r10,0(r18)
   83704:	000d883a 	mov	r6,zero
   83708:	01d00934 	movhi	r7,16420
   8370c:	1009883a 	mov	r4,r2
   83710:	180b883a 	mov	r5,r3
   83714:	e02d883a 	mov	r22,fp
   83718:	95ffd81e 	bne	r18,r23,8367c <_dtoa_r+0x868>
   8371c:	802f883a 	mov	r23,r16
   83720:	df000417 	ldw	fp,16(sp)
   83724:	dc000317 	ldw	r16,12(sp)
   83728:	1009883a 	mov	r4,r2
   8372c:	180b883a 	mov	r5,r3
   83730:	100d883a 	mov	r6,r2
   83734:	180f883a 	mov	r7,r3
   83738:	008aaa00 	call	8aaa0 <__adddf3>
   8373c:	8809883a 	mov	r4,r17
   83740:	980b883a 	mov	r5,r19
   83744:	100d883a 	mov	r6,r2
   83748:	180f883a 	mov	r7,r3
   8374c:	1025883a 	mov	r18,r2
   83750:	1829883a 	mov	r20,r3
   83754:	008be140 	call	8be14 <__ledf2>
   83758:	10000816 	blt	r2,zero,8377c <_dtoa_r+0x968>
   8375c:	8809883a 	mov	r4,r17
   83760:	980b883a 	mov	r5,r19
   83764:	900d883a 	mov	r6,r18
   83768:	a00f883a 	mov	r7,r20
   8376c:	008bcb80 	call	8bcb8 <__eqdf2>
   83770:	103f541e 	bne	r2,zero,834c4 <_dtoa_r+0x6b0>
   83774:	bdc0004c 	andi	r23,r23,1
   83778:	b83f5226 	beq	r23,zero,834c4 <_dtoa_r+0x6b0>
   8377c:	b53fffc3 	ldbu	r20,-1(r22)
   83780:	b0ffff84 	addi	r3,r22,-2
   83784:	01400e44 	movi	r5,57
   83788:	d9800717 	ldw	r6,28(sp)
   8378c:	00000406 	br	837a0 <_dtoa_r+0x98c>
   83790:	30824326 	beq	r6,r2,840a0 <_dtoa_r+0x128c>
   83794:	1d000003 	ldbu	r20,0(r3)
   83798:	102d883a 	mov	r22,r2
   8379c:	18ffffc4 	addi	r3,r3,-1
   837a0:	a1003fcc 	andi	r4,r20,255
   837a4:	2100201c 	xori	r4,r4,128
   837a8:	213fe004 	addi	r4,r4,-128
   837ac:	b0bfffc4 	addi	r2,r22,-1
   837b0:	217ff726 	beq	r4,r5,83790 <_dtoa_r+0x97c>
   837b4:	a2400044 	addi	r9,r20,1
   837b8:	12400005 	stb	r9,0(r2)
   837bc:	003f4106 	br	834c4 <_dtoa_r+0x6b0>
   837c0:	d9000c17 	ldw	r4,48(sp)
   837c4:	2000be26 	beq	r4,zero,83ac0 <_dtoa_r+0xcac>
   837c8:	d9800417 	ldw	r6,16(sp)
   837cc:	00c00044 	movi	r3,1
   837d0:	19815e0e 	bge	r3,r6,83d4c <_dtoa_r+0xf38>
   837d4:	d8800917 	ldw	r2,36(sp)
   837d8:	d8c00a17 	ldw	r3,40(sp)
   837dc:	153fffc4 	addi	r20,r2,-1
   837e0:	1d01f816 	blt	r3,r20,83fc4 <_dtoa_r+0x11b0>
   837e4:	1d29c83a 	sub	r20,r3,r20
   837e8:	d9c00917 	ldw	r7,36(sp)
   837ec:	3802ad16 	blt	r7,zero,842a4 <_dtoa_r+0x1490>
   837f0:	dcc00817 	ldw	r19,32(sp)
   837f4:	d8800917 	ldw	r2,36(sp)
   837f8:	d8c00817 	ldw	r3,32(sp)
   837fc:	8009883a 	mov	r4,r16
   83800:	01400044 	movi	r5,1
   83804:	1887883a 	add	r3,r3,r2
   83808:	d8c00815 	stw	r3,32(sp)
   8380c:	a8ab883a 	add	r21,r21,r2
   83810:	00867400 	call	86740 <__i2b>
   83814:	1023883a 	mov	r17,r2
   83818:	98000826 	beq	r19,zero,8383c <_dtoa_r+0xa28>
   8381c:	0540070e 	bge	zero,r21,8383c <_dtoa_r+0xa28>
   83820:	a805883a 	mov	r2,r21
   83824:	9d411716 	blt	r19,r21,83c84 <_dtoa_r+0xe70>
   83828:	d9000817 	ldw	r4,32(sp)
   8382c:	98a7c83a 	sub	r19,r19,r2
   83830:	a8abc83a 	sub	r21,r21,r2
   83834:	2089c83a 	sub	r4,r4,r2
   83838:	d9000815 	stw	r4,32(sp)
   8383c:	d9800a17 	ldw	r6,40(sp)
   83840:	0180140e 	bge	zero,r6,83894 <_dtoa_r+0xa80>
   83844:	d9c00c17 	ldw	r7,48(sp)
   83848:	3801d626 	beq	r7,zero,83fa4 <_dtoa_r+0x1190>
   8384c:	05000e0e 	bge	zero,r20,83888 <_dtoa_r+0xa74>
   83850:	880b883a 	mov	r5,r17
   83854:	8009883a 	mov	r4,r16
   83858:	a00d883a 	mov	r6,r20
   8385c:	00869e80 	call	869e8 <__pow5mult>
   83860:	e00d883a 	mov	r6,fp
   83864:	8009883a 	mov	r4,r16
   83868:	100b883a 	mov	r5,r2
   8386c:	1023883a 	mov	r17,r2
   83870:	008677c0 	call	8677c <__multiply>
   83874:	102d883a 	mov	r22,r2
   83878:	e00b883a 	mov	r5,fp
   8387c:	8009883a 	mov	r4,r16
   83880:	00863b80 	call	863b8 <_Bfree>
   83884:	b039883a 	mov	fp,r22
   83888:	d8800a17 	ldw	r2,40(sp)
   8388c:	150dc83a 	sub	r6,r2,r20
   83890:	30011f1e 	bne	r6,zero,83d10 <_dtoa_r+0xefc>
   83894:	8009883a 	mov	r4,r16
   83898:	01400044 	movi	r5,1
   8389c:	00867400 	call	86740 <__i2b>
   838a0:	d8c00b17 	ldw	r3,44(sp)
   838a4:	1029883a 	mov	r20,r2
   838a8:	00c0050e 	bge	zero,r3,838c0 <_dtoa_r+0xaac>
   838ac:	8009883a 	mov	r4,r16
   838b0:	100b883a 	mov	r5,r2
   838b4:	180d883a 	mov	r6,r3
   838b8:	00869e80 	call	869e8 <__pow5mult>
   838bc:	1029883a 	mov	r20,r2
   838c0:	d9000417 	ldw	r4,16(sp)
   838c4:	00800044 	movi	r2,1
   838c8:	1100e00e 	bge	r2,r4,83c4c <_dtoa_r+0xe38>
   838cc:	0025883a 	mov	r18,zero
   838d0:	d8800b17 	ldw	r2,44(sp)
   838d4:	10015f1e 	bne	r2,zero,83e54 <_dtoa_r+0x1040>
   838d8:	00800044 	movi	r2,1
   838dc:	1545883a 	add	r2,r2,r21
   838e0:	108007cc 	andi	r2,r2,31
   838e4:	10007a26 	beq	r2,zero,83ad0 <_dtoa_r+0xcbc>
   838e8:	01000804 	movi	r4,32
   838ec:	2089c83a 	sub	r4,r4,r2
   838f0:	00c00104 	movi	r3,4
   838f4:	1902d20e 	bge	r3,r4,84440 <_dtoa_r+0x162c>
   838f8:	00c00704 	movi	r3,28
   838fc:	1885c83a 	sub	r2,r3,r2
   83900:	d8c00817 	ldw	r3,32(sp)
   83904:	98a7883a 	add	r19,r19,r2
   83908:	a8ab883a 	add	r21,r21,r2
   8390c:	1887883a 	add	r3,r3,r2
   83910:	d8c00815 	stw	r3,32(sp)
   83914:	d9800817 	ldw	r6,32(sp)
   83918:	0180040e 	bge	zero,r6,8392c <_dtoa_r+0xb18>
   8391c:	e00b883a 	mov	r5,fp
   83920:	8009883a 	mov	r4,r16
   83924:	0086b300 	call	86b30 <__lshift>
   83928:	1039883a 	mov	fp,r2
   8392c:	0540050e 	bge	zero,r21,83944 <_dtoa_r+0xb30>
   83930:	a00b883a 	mov	r5,r20
   83934:	8009883a 	mov	r4,r16
   83938:	a80d883a 	mov	r6,r21
   8393c:	0086b300 	call	86b30 <__lshift>
   83940:	1029883a 	mov	r20,r2
   83944:	d9c00e17 	ldw	r7,56(sp)
   83948:	3801301e 	bne	r7,zero,83e0c <_dtoa_r+0xff8>
   8394c:	d9c00917 	ldw	r7,36(sp)
   83950:	01c1500e 	bge	zero,r7,83e94 <_dtoa_r+0x1080>
   83954:	d8800c17 	ldw	r2,48(sp)
   83958:	10006b1e 	bne	r2,zero,83b08 <_dtoa_r+0xcf4>
   8395c:	dc800717 	ldw	r18,28(sp)
   83960:	dcc00917 	ldw	r19,36(sp)
   83964:	902b883a 	mov	r21,r18
   83968:	00000206 	br	83974 <_dtoa_r+0xb60>
   8396c:	00863e00 	call	863e0 <__multadd>
   83970:	1039883a 	mov	fp,r2
   83974:	e009883a 	mov	r4,fp
   83978:	a00b883a 	mov	r5,r20
   8397c:	0082bec0 	call	82bec <quorem>
   83980:	10800c04 	addi	r2,r2,48
   83984:	90800005 	stb	r2,0(r18)
   83988:	94800044 	addi	r18,r18,1
   8398c:	9547c83a 	sub	r3,r18,r21
   83990:	8009883a 	mov	r4,r16
   83994:	e00b883a 	mov	r5,fp
   83998:	01800284 	movi	r6,10
   8399c:	000f883a 	mov	r7,zero
   839a0:	1cfff216 	blt	r3,r19,8396c <_dtoa_r+0xb58>
   839a4:	102f883a 	mov	r23,r2
   839a8:	d8800917 	ldw	r2,36(sp)
   839ac:	0082410e 	bge	zero,r2,842b4 <_dtoa_r+0x14a0>
   839b0:	d9000717 	ldw	r4,28(sp)
   839b4:	002b883a 	mov	r21,zero
   839b8:	20ad883a 	add	r22,r4,r2
   839bc:	e00b883a 	mov	r5,fp
   839c0:	8009883a 	mov	r4,r16
   839c4:	01800044 	movi	r6,1
   839c8:	0086b300 	call	86b30 <__lshift>
   839cc:	1009883a 	mov	r4,r2
   839d0:	a00b883a 	mov	r5,r20
   839d4:	1039883a 	mov	fp,r2
   839d8:	0086c800 	call	86c80 <__mcmp>
   839dc:	0080d10e 	bge	zero,r2,83d24 <_dtoa_r+0xf10>
   839e0:	b13fffc3 	ldbu	r4,-1(r22)
   839e4:	b0ffff84 	addi	r3,r22,-2
   839e8:	01800e44 	movi	r6,57
   839ec:	d9c00717 	ldw	r7,28(sp)
   839f0:	00000406 	br	83a04 <_dtoa_r+0xbf0>
   839f4:	38813c26 	beq	r7,r2,83ee8 <_dtoa_r+0x10d4>
   839f8:	19000003 	ldbu	r4,0(r3)
   839fc:	102d883a 	mov	r22,r2
   83a00:	18ffffc4 	addi	r3,r3,-1
   83a04:	21403fcc 	andi	r5,r4,255
   83a08:	2940201c 	xori	r5,r5,128
   83a0c:	297fe004 	addi	r5,r5,-128
   83a10:	b0bfffc4 	addi	r2,r22,-1
   83a14:	29bff726 	beq	r5,r6,839f4 <_dtoa_r+0xbe0>
   83a18:	21000044 	addi	r4,r4,1
   83a1c:	11000005 	stb	r4,0(r2)
   83a20:	8009883a 	mov	r4,r16
   83a24:	a00b883a 	mov	r5,r20
   83a28:	00863b80 	call	863b8 <_Bfree>
   83a2c:	883ea526 	beq	r17,zero,834c4 <_dtoa_r+0x6b0>
   83a30:	a8000426 	beq	r21,zero,83a44 <_dtoa_r+0xc30>
   83a34:	ac400326 	beq	r21,r17,83a44 <_dtoa_r+0xc30>
   83a38:	8009883a 	mov	r4,r16
   83a3c:	a80b883a 	mov	r5,r21
   83a40:	00863b80 	call	863b8 <_Bfree>
   83a44:	8009883a 	mov	r4,r16
   83a48:	880b883a 	mov	r5,r17
   83a4c:	00863b80 	call	863b8 <_Bfree>
   83a50:	003e9c06 	br	834c4 <_dtoa_r+0x6b0>
   83a54:	01c00044 	movi	r7,1
   83a58:	d9c00e15 	stw	r7,56(sp)
   83a5c:	003d9906 	br	830c4 <_dtoa_r+0x2b0>
   83a60:	d8c00817 	ldw	r3,32(sp)
   83a64:	d9000617 	ldw	r4,24(sp)
   83a68:	d8000b15 	stw	zero,44(sp)
   83a6c:	1907c83a 	sub	r3,r3,r4
   83a70:	010dc83a 	sub	r6,zero,r4
   83a74:	d8c00815 	stw	r3,32(sp)
   83a78:	d9800a15 	stw	r6,40(sp)
   83a7c:	003d9a06 	br	830e8 <_dtoa_r+0x2d4>
   83a80:	056bc83a 	sub	r21,zero,r21
   83a84:	dd400815 	stw	r21,32(sp)
   83a88:	002b883a 	mov	r21,zero
   83a8c:	003d9106 	br	830d4 <_dtoa_r+0x2c0>
   83a90:	d9000617 	ldw	r4,24(sp)
   83a94:	008d0080 	call	8d008 <__floatsidf>
   83a98:	1009883a 	mov	r4,r2
   83a9c:	180b883a 	mov	r5,r3
   83aa0:	980d883a 	mov	r6,r19
   83aa4:	880f883a 	mov	r7,r17
   83aa8:	008bcb80 	call	8bcb8 <__eqdf2>
   83aac:	103d7426 	beq	r2,zero,83080 <_dtoa_r+0x26c>
   83ab0:	d8c00617 	ldw	r3,24(sp)
   83ab4:	18ffffc4 	addi	r3,r3,-1
   83ab8:	d8c00615 	stw	r3,24(sp)
   83abc:	003d7006 	br	83080 <_dtoa_r+0x26c>
   83ac0:	dd000a17 	ldw	r20,40(sp)
   83ac4:	dcc00817 	ldw	r19,32(sp)
   83ac8:	0023883a 	mov	r17,zero
   83acc:	003f5206 	br	83818 <_dtoa_r+0xa04>
   83ad0:	00800704 	movi	r2,28
   83ad4:	d9000817 	ldw	r4,32(sp)
   83ad8:	98a7883a 	add	r19,r19,r2
   83adc:	a8ab883a 	add	r21,r21,r2
   83ae0:	2089883a 	add	r4,r4,r2
   83ae4:	d9000815 	stw	r4,32(sp)
   83ae8:	003f8a06 	br	83914 <_dtoa_r+0xb00>
   83aec:	d9c00317 	ldw	r7,12(sp)
   83af0:	013efb84 	movi	r4,-1042
   83af4:	2509c83a 	sub	r4,r4,r20
   83af8:	3908983a 	sll	r4,r7,r4
   83afc:	003d2c06 	br	82fb0 <_dtoa_r+0x19c>
   83b00:	d8000e15 	stw	zero,56(sp)
   83b04:	003d6f06 	br	830c4 <_dtoa_r+0x2b0>
   83b08:	04c0050e 	bge	zero,r19,83b20 <_dtoa_r+0xd0c>
   83b0c:	880b883a 	mov	r5,r17
   83b10:	8009883a 	mov	r4,r16
   83b14:	980d883a 	mov	r6,r19
   83b18:	0086b300 	call	86b30 <__lshift>
   83b1c:	1023883a 	mov	r17,r2
   83b20:	9001681e 	bne	r18,zero,840c4 <_dtoa_r+0x12b0>
   83b24:	8827883a 	mov	r19,r17
   83b28:	d8c00717 	ldw	r3,28(sp)
   83b2c:	d9000917 	ldw	r4,36(sp)
   83b30:	1dffffc4 	addi	r23,r3,-1
   83b34:	1825883a 	mov	r18,r3
   83b38:	d8c00317 	ldw	r3,12(sp)
   83b3c:	b92f883a 	add	r23,r23,r4
   83b40:	ddc00515 	stw	r23,20(sp)
   83b44:	18c0004c 	andi	r3,r3,1
   83b48:	d8c00315 	stw	r3,12(sp)
   83b4c:	e009883a 	mov	r4,fp
   83b50:	a00b883a 	mov	r5,r20
   83b54:	0082bec0 	call	82bec <quorem>
   83b58:	e009883a 	mov	r4,fp
   83b5c:	880b883a 	mov	r5,r17
   83b60:	102d883a 	mov	r22,r2
   83b64:	0086c800 	call	86c80 <__mcmp>
   83b68:	8009883a 	mov	r4,r16
   83b6c:	a00b883a 	mov	r5,r20
   83b70:	980d883a 	mov	r6,r19
   83b74:	102b883a 	mov	r21,r2
   83b78:	0086ce00 	call	86ce0 <__mdiff>
   83b7c:	1007883a 	mov	r3,r2
   83b80:	10800317 	ldw	r2,12(r2)
   83b84:	b5c00c04 	addi	r23,r22,48
   83b88:	10009b1e 	bne	r2,zero,83df8 <_dtoa_r+0xfe4>
   83b8c:	180b883a 	mov	r5,r3
   83b90:	e009883a 	mov	r4,fp
   83b94:	d8c01515 	stw	r3,84(sp)
   83b98:	0086c800 	call	86c80 <__mcmp>
   83b9c:	d8c01517 	ldw	r3,84(sp)
   83ba0:	8009883a 	mov	r4,r16
   83ba4:	d8801515 	stw	r2,84(sp)
   83ba8:	180b883a 	mov	r5,r3
   83bac:	00863b80 	call	863b8 <_Bfree>
   83bb0:	d8801517 	ldw	r2,84(sp)
   83bb4:	1000041e 	bne	r2,zero,83bc8 <_dtoa_r+0xdb4>
   83bb8:	d9000417 	ldw	r4,16(sp)
   83bbc:	2000021e 	bne	r4,zero,83bc8 <_dtoa_r+0xdb4>
   83bc0:	d8c00317 	ldw	r3,12(sp)
   83bc4:	18007926 	beq	r3,zero,83dac <_dtoa_r+0xf98>
   83bc8:	a8006616 	blt	r21,zero,83d64 <_dtoa_r+0xf50>
   83bcc:	a800041e 	bne	r21,zero,83be0 <_dtoa_r+0xdcc>
   83bd0:	d9000417 	ldw	r4,16(sp)
   83bd4:	2000021e 	bne	r4,zero,83be0 <_dtoa_r+0xdcc>
   83bd8:	d8c00317 	ldw	r3,12(sp)
   83bdc:	18006126 	beq	r3,zero,83d64 <_dtoa_r+0xf50>
   83be0:	00814916 	blt	zero,r2,84108 <_dtoa_r+0x12f4>
   83be4:	d8c00517 	ldw	r3,20(sp)
   83be8:	95400044 	addi	r21,r18,1
   83bec:	95c00005 	stb	r23,0(r18)
   83bf0:	a82d883a 	mov	r22,r21
   83bf4:	90c14c26 	beq	r18,r3,84128 <_dtoa_r+0x1314>
   83bf8:	e00b883a 	mov	r5,fp
   83bfc:	8009883a 	mov	r4,r16
   83c00:	01800284 	movi	r6,10
   83c04:	000f883a 	mov	r7,zero
   83c08:	00863e00 	call	863e0 <__multadd>
   83c0c:	1039883a 	mov	fp,r2
   83c10:	8cc07026 	beq	r17,r19,83dd4 <_dtoa_r+0xfc0>
   83c14:	880b883a 	mov	r5,r17
   83c18:	01800284 	movi	r6,10
   83c1c:	000f883a 	mov	r7,zero
   83c20:	8009883a 	mov	r4,r16
   83c24:	00863e00 	call	863e0 <__multadd>
   83c28:	980b883a 	mov	r5,r19
   83c2c:	8009883a 	mov	r4,r16
   83c30:	01800284 	movi	r6,10
   83c34:	000f883a 	mov	r7,zero
   83c38:	1023883a 	mov	r17,r2
   83c3c:	00863e00 	call	863e0 <__multadd>
   83c40:	1027883a 	mov	r19,r2
   83c44:	a825883a 	mov	r18,r21
   83c48:	003fc006 	br	83b4c <_dtoa_r+0xd38>
   83c4c:	d9800317 	ldw	r6,12(sp)
   83c50:	303f1e1e 	bne	r6,zero,838cc <_dtoa_r+0xab8>
   83c54:	00c00434 	movhi	r3,16
   83c58:	18ffffc4 	addi	r3,r3,-1
   83c5c:	90c6703a 	and	r3,r18,r3
   83c60:	183f1a1e 	bne	r3,zero,838cc <_dtoa_r+0xab8>
   83c64:	949ffc2c 	andhi	r18,r18,32752
   83c68:	903f1826 	beq	r18,zero,838cc <_dtoa_r+0xab8>
   83c6c:	d9c00817 	ldw	r7,32(sp)
   83c70:	a8ab883a 	add	r21,r21,r2
   83c74:	1025883a 	mov	r18,r2
   83c78:	388f883a 	add	r7,r7,r2
   83c7c:	d9c00815 	stw	r7,32(sp)
   83c80:	003f1306 	br	838d0 <_dtoa_r+0xabc>
   83c84:	9805883a 	mov	r2,r19
   83c88:	003ee706 	br	83828 <_dtoa_r+0xa14>
   83c8c:	01800044 	movi	r6,1
   83c90:	d9800c15 	stw	r6,48(sp)
   83c94:	d8802117 	ldw	r2,132(sp)
   83c98:	0080da0e 	bge	zero,r2,84004 <_dtoa_r+0x11f0>
   83c9c:	100d883a 	mov	r6,r2
   83ca0:	d8800d15 	stw	r2,52(sp)
   83ca4:	d8800915 	stw	r2,36(sp)
   83ca8:	003d2a06 	br	83154 <_dtoa_r+0x340>
   83cac:	d8800917 	ldw	r2,36(sp)
   83cb0:	00be4016 	blt	zero,r2,835b4 <_dtoa_r+0x7a0>
   83cb4:	1000b81e 	bne	r2,zero,83f98 <_dtoa_r+0x1184>
   83cb8:	8809883a 	mov	r4,r17
   83cbc:	980b883a 	mov	r5,r19
   83cc0:	000d883a 	mov	r6,zero
   83cc4:	01d00534 	movhi	r7,16404
   83cc8:	008bf000 	call	8bf00 <__muldf3>
   83ccc:	d9800317 	ldw	r6,12(sp)
   83cd0:	1009883a 	mov	r4,r2
   83cd4:	180b883a 	mov	r5,r3
   83cd8:	900f883a 	mov	r7,r18
   83cdc:	008bd3c0 	call	8bd3c <__gedf2>
   83ce0:	0029883a 	mov	r20,zero
   83ce4:	0023883a 	mov	r17,zero
   83ce8:	10007716 	blt	r2,zero,83ec8 <_dtoa_r+0x10b4>
   83cec:	d9002117 	ldw	r4,132(sp)
   83cf0:	dd800717 	ldw	r22,28(sp)
   83cf4:	0108303a 	nor	r4,zero,r4
   83cf8:	d9000615 	stw	r4,24(sp)
   83cfc:	8009883a 	mov	r4,r16
   83d00:	a00b883a 	mov	r5,r20
   83d04:	00863b80 	call	863b8 <_Bfree>
   83d08:	883f4e1e 	bne	r17,zero,83a44 <_dtoa_r+0xc30>
   83d0c:	003ded06 	br	834c4 <_dtoa_r+0x6b0>
   83d10:	e00b883a 	mov	r5,fp
   83d14:	8009883a 	mov	r4,r16
   83d18:	00869e80 	call	869e8 <__pow5mult>
   83d1c:	1039883a 	mov	fp,r2
   83d20:	003edc06 	br	83894 <_dtoa_r+0xa80>
   83d24:	1000021e 	bne	r2,zero,83d30 <_dtoa_r+0xf1c>
   83d28:	ba40004c 	andi	r9,r23,1
   83d2c:	483f2c1e 	bne	r9,zero,839e0 <_dtoa_r+0xbcc>
   83d30:	01000c04 	movi	r4,48
   83d34:	00000106 	br	83d3c <_dtoa_r+0xf28>
   83d38:	102d883a 	mov	r22,r2
   83d3c:	b0bfffc4 	addi	r2,r22,-1
   83d40:	10c00007 	ldb	r3,0(r2)
   83d44:	193ffc26 	beq	r3,r4,83d38 <_dtoa_r+0xf24>
   83d48:	003f3506 	br	83a20 <_dtoa_r+0xc0c>
   83d4c:	d9c00f17 	ldw	r7,60(sp)
   83d50:	38015a26 	beq	r7,zero,842bc <_dtoa_r+0x14a8>
   83d54:	10810cc4 	addi	r2,r2,1075
   83d58:	dd000a17 	ldw	r20,40(sp)
   83d5c:	dcc00817 	ldw	r19,32(sp)
   83d60:	003ea506 	br	837f8 <_dtoa_r+0x9e4>
   83d64:	00800c0e 	bge	zero,r2,83d98 <_dtoa_r+0xf84>
   83d68:	e00b883a 	mov	r5,fp
   83d6c:	8009883a 	mov	r4,r16
   83d70:	01800044 	movi	r6,1
   83d74:	0086b300 	call	86b30 <__lshift>
   83d78:	1009883a 	mov	r4,r2
   83d7c:	a00b883a 	mov	r5,r20
   83d80:	1039883a 	mov	fp,r2
   83d84:	0086c800 	call	86c80 <__mcmp>
   83d88:	0081930e 	bge	zero,r2,843d8 <_dtoa_r+0x15c4>
   83d8c:	00800e44 	movi	r2,57
   83d90:	b8800a26 	beq	r23,r2,83dbc <_dtoa_r+0xfa8>
   83d94:	b5c00c44 	addi	r23,r22,49
   83d98:	882b883a 	mov	r21,r17
   83d9c:	95800044 	addi	r22,r18,1
   83da0:	95c00005 	stb	r23,0(r18)
   83da4:	9823883a 	mov	r17,r19
   83da8:	003f1d06 	br	83a20 <_dtoa_r+0xc0c>
   83dac:	00800e44 	movi	r2,57
   83db0:	b8800226 	beq	r23,r2,83dbc <_dtoa_r+0xfa8>
   83db4:	057ff716 	blt	zero,r21,83d94 <_dtoa_r+0xf80>
   83db8:	003ff706 	br	83d98 <_dtoa_r+0xf84>
   83dbc:	01000e44 	movi	r4,57
   83dc0:	882b883a 	mov	r21,r17
   83dc4:	95800044 	addi	r22,r18,1
   83dc8:	91000005 	stb	r4,0(r18)
   83dcc:	9823883a 	mov	r17,r19
   83dd0:	003f0406 	br	839e4 <_dtoa_r+0xbd0>
   83dd4:	880b883a 	mov	r5,r17
   83dd8:	8009883a 	mov	r4,r16
   83ddc:	01800284 	movi	r6,10
   83de0:	000f883a 	mov	r7,zero
   83de4:	00863e00 	call	863e0 <__multadd>
   83de8:	1023883a 	mov	r17,r2
   83dec:	1027883a 	mov	r19,r2
   83df0:	a825883a 	mov	r18,r21
   83df4:	003f5506 	br	83b4c <_dtoa_r+0xd38>
   83df8:	8009883a 	mov	r4,r16
   83dfc:	180b883a 	mov	r5,r3
   83e00:	00863b80 	call	863b8 <_Bfree>
   83e04:	00800044 	movi	r2,1
   83e08:	003f6f06 	br	83bc8 <_dtoa_r+0xdb4>
   83e0c:	e009883a 	mov	r4,fp
   83e10:	a00b883a 	mov	r5,r20
   83e14:	0086c800 	call	86c80 <__mcmp>
   83e18:	103ecc0e 	bge	r2,zero,8394c <_dtoa_r+0xb38>
   83e1c:	e00b883a 	mov	r5,fp
   83e20:	8009883a 	mov	r4,r16
   83e24:	01800284 	movi	r6,10
   83e28:	000f883a 	mov	r7,zero
   83e2c:	00863e00 	call	863e0 <__multadd>
   83e30:	1039883a 	mov	fp,r2
   83e34:	d8800617 	ldw	r2,24(sp)
   83e38:	d8c00c17 	ldw	r3,48(sp)
   83e3c:	10bfffc4 	addi	r2,r2,-1
   83e40:	d8800615 	stw	r2,24(sp)
   83e44:	1801681e 	bne	r3,zero,843e8 <_dtoa_r+0x15d4>
   83e48:	d9800d17 	ldw	r6,52(sp)
   83e4c:	d9800915 	stw	r6,36(sp)
   83e50:	003ebe06 	br	8394c <_dtoa_r+0xb38>
   83e54:	a0800417 	ldw	r2,16(r20)
   83e58:	10800104 	addi	r2,r2,4
   83e5c:	1085883a 	add	r2,r2,r2
   83e60:	1085883a 	add	r2,r2,r2
   83e64:	a085883a 	add	r2,r20,r2
   83e68:	11000017 	ldw	r4,0(r2)
   83e6c:	00866280 	call	86628 <__hi0bits>
   83e70:	00c00804 	movi	r3,32
   83e74:	1885c83a 	sub	r2,r3,r2
   83e78:	003e9806 	br	838dc <_dtoa_r+0xac8>
   83e7c:	d8800717 	ldw	r2,28(sp)
   83e80:	003c1306 	br	82ed0 <_dtoa_r+0xbc>
   83e84:	00800084 	movi	r2,2
   83e88:	18bdb11e 	bne	r3,r2,83550 <_dtoa_r+0x73c>
   83e8c:	d8000c15 	stw	zero,48(sp)
   83e90:	003f8006 	br	83c94 <_dtoa_r+0xe80>
   83e94:	d8c00417 	ldw	r3,16(sp)
   83e98:	00800084 	movi	r2,2
   83e9c:	10fead0e 	bge	r2,r3,83954 <_dtoa_r+0xb40>
   83ea0:	383f921e 	bne	r7,zero,83cec <_dtoa_r+0xed8>
   83ea4:	a00b883a 	mov	r5,r20
   83ea8:	8009883a 	mov	r4,r16
   83eac:	01800144 	movi	r6,5
   83eb0:	00863e00 	call	863e0 <__multadd>
   83eb4:	e009883a 	mov	r4,fp
   83eb8:	100b883a 	mov	r5,r2
   83ebc:	1029883a 	mov	r20,r2
   83ec0:	0086c800 	call	86c80 <__mcmp>
   83ec4:	00bf890e 	bge	zero,r2,83cec <_dtoa_r+0xed8>
   83ec8:	d9c00617 	ldw	r7,24(sp)
   83ecc:	d9800717 	ldw	r6,28(sp)
   83ed0:	00800c44 	movi	r2,49
   83ed4:	39c00044 	addi	r7,r7,1
   83ed8:	35800044 	addi	r22,r6,1
   83edc:	30800005 	stb	r2,0(r6)
   83ee0:	d9c00615 	stw	r7,24(sp)
   83ee4:	003f8506 	br	83cfc <_dtoa_r+0xee8>
   83ee8:	d9800617 	ldw	r6,24(sp)
   83eec:	d9c00717 	ldw	r7,28(sp)
   83ef0:	00800c44 	movi	r2,49
   83ef4:	31800044 	addi	r6,r6,1
   83ef8:	d9800615 	stw	r6,24(sp)
   83efc:	38800005 	stb	r2,0(r7)
   83f00:	003ec706 	br	83a20 <_dtoa_r+0xc0c>
   83f04:	df000417 	ldw	fp,16(sp)
   83f08:	dc000317 	ldw	r16,12(sp)
   83f0c:	003d6d06 	br	834c4 <_dtoa_r+0x6b0>
   83f10:	8809883a 	mov	r4,r17
   83f14:	008d0080 	call	8d008 <__floatsidf>
   83f18:	9809883a 	mov	r4,r19
   83f1c:	a00b883a 	mov	r5,r20
   83f20:	100d883a 	mov	r6,r2
   83f24:	180f883a 	mov	r7,r3
   83f28:	008bf000 	call	8bf00 <__muldf3>
   83f2c:	1009883a 	mov	r4,r2
   83f30:	180b883a 	mov	r5,r3
   83f34:	000d883a 	mov	r6,zero
   83f38:	01d00734 	movhi	r7,16412
   83f3c:	008aaa00 	call	8aaa0 <__adddf3>
   83f40:	05bf3034 	movhi	r22,64704
   83f44:	1023883a 	mov	r17,r2
   83f48:	1daf883a 	add	r23,r3,r22
   83f4c:	9809883a 	mov	r4,r19
   83f50:	a00b883a 	mov	r5,r20
   83f54:	000d883a 	mov	r6,zero
   83f58:	01d00534 	movhi	r7,16404
   83f5c:	008c7000 	call	8c700 <__subdf3>
   83f60:	1009883a 	mov	r4,r2
   83f64:	180b883a 	mov	r5,r3
   83f68:	880d883a 	mov	r6,r17
   83f6c:	b80f883a 	mov	r7,r23
   83f70:	1027883a 	mov	r19,r2
   83f74:	1829883a 	mov	r20,r3
   83f78:	008bd3c0 	call	8bd3c <__gedf2>
   83f7c:	00806d16 	blt	zero,r2,84134 <_dtoa_r+0x1320>
   83f80:	b9e0003c 	xorhi	r7,r23,32768
   83f84:	9809883a 	mov	r4,r19
   83f88:	a00b883a 	mov	r5,r20
   83f8c:	880d883a 	mov	r6,r17
   83f90:	008be140 	call	8be14 <__ledf2>
   83f94:	103d7a0e 	bge	r2,zero,83580 <_dtoa_r+0x76c>
   83f98:	0029883a 	mov	r20,zero
   83f9c:	0023883a 	mov	r17,zero
   83fa0:	003f5206 	br	83cec <_dtoa_r+0xed8>
   83fa4:	d9800a17 	ldw	r6,40(sp)
   83fa8:	e00b883a 	mov	r5,fp
   83fac:	8009883a 	mov	r4,r16
   83fb0:	00869e80 	call	869e8 <__pow5mult>
   83fb4:	1039883a 	mov	fp,r2
   83fb8:	003e3606 	br	83894 <_dtoa_r+0xa80>
   83fbc:	d8000c15 	stw	zero,48(sp)
   83fc0:	003c5c06 	br	83134 <_dtoa_r+0x320>
   83fc4:	d9000a17 	ldw	r4,40(sp)
   83fc8:	d9800b17 	ldw	r6,44(sp)
   83fcc:	dd000a15 	stw	r20,40(sp)
   83fd0:	a105c83a 	sub	r2,r20,r4
   83fd4:	308d883a 	add	r6,r6,r2
   83fd8:	d9800b15 	stw	r6,44(sp)
   83fdc:	0029883a 	mov	r20,zero
   83fe0:	003e0106 	br	837e8 <_dtoa_r+0x9d4>
   83fe4:	dcc00317 	ldw	r19,12(sp)
   83fe8:	9029883a 	mov	r20,r18
   83fec:	04400084 	movi	r17,2
   83ff0:	003c8606 	br	8320c <_dtoa_r+0x3f8>
   83ff4:	3023883a 	mov	r17,r6
   83ff8:	80001115 	stw	zero,68(r16)
   83ffc:	000b883a 	mov	r5,zero
   84000:	003c6006 	br	83184 <_dtoa_r+0x370>
   84004:	04400044 	movi	r17,1
   84008:	dc400d15 	stw	r17,52(sp)
   8400c:	dc400915 	stw	r17,36(sp)
   84010:	dc402115 	stw	r17,132(sp)
   84014:	003ff806 	br	83ff8 <_dtoa_r+0x11e4>
   84018:	d8800617 	ldw	r2,24(sp)
   8401c:	00adc83a 	sub	r22,zero,r2
   84020:	b000ac26 	beq	r22,zero,842d4 <_dtoa_r+0x14c0>
   84024:	b08003cc 	andi	r2,r22,15
   84028:	100490fa 	slli	r2,r2,3
   8402c:	00c00274 	movhi	r3,9
   84030:	18ff3304 	addi	r3,r3,-820
   84034:	d9000317 	ldw	r4,12(sp)
   84038:	1885883a 	add	r2,r3,r2
   8403c:	11800017 	ldw	r6,0(r2)
   84040:	11c00117 	ldw	r7,4(r2)
   84044:	b02dd13a 	srai	r22,r22,4
   84048:	900b883a 	mov	r5,r18
   8404c:	008bf000 	call	8bf00 <__muldf3>
   84050:	1027883a 	mov	r19,r2
   84054:	1829883a 	mov	r20,r3
   84058:	b000ec26 	beq	r22,zero,8440c <_dtoa_r+0x15f8>
   8405c:	05c00274 	movhi	r23,9
   84060:	bdff2904 	addi	r23,r23,-860
   84064:	04400084 	movi	r17,2
   84068:	b180004c 	andi	r6,r22,1
   8406c:	1009883a 	mov	r4,r2
   84070:	b02dd07a 	srai	r22,r22,1
   84074:	180b883a 	mov	r5,r3
   84078:	30000426 	beq	r6,zero,8408c <_dtoa_r+0x1278>
   8407c:	b9800017 	ldw	r6,0(r23)
   84080:	b9c00117 	ldw	r7,4(r23)
   84084:	8c400044 	addi	r17,r17,1
   84088:	008bf000 	call	8bf00 <__muldf3>
   8408c:	bdc00204 	addi	r23,r23,8
   84090:	b03ff51e 	bne	r22,zero,84068 <_dtoa_r+0x1254>
   84094:	1027883a 	mov	r19,r2
   84098:	1829883a 	mov	r20,r3
   8409c:	003c7406 	br	83270 <_dtoa_r+0x45c>
   840a0:	d9800617 	ldw	r6,24(sp)
   840a4:	d9c00717 	ldw	r7,28(sp)
   840a8:	00c00c04 	movi	r3,48
   840ac:	31800044 	addi	r6,r6,1
   840b0:	38c00005 	stb	r3,0(r7)
   840b4:	02400c44 	movi	r9,49
   840b8:	d9800615 	stw	r6,24(sp)
   840bc:	12400005 	stb	r9,0(r2)
   840c0:	003d0006 	br	834c4 <_dtoa_r+0x6b0>
   840c4:	89400117 	ldw	r5,4(r17)
   840c8:	8009883a 	mov	r4,r16
   840cc:	00863100 	call	86310 <_Balloc>
   840d0:	89800417 	ldw	r6,16(r17)
   840d4:	11000304 	addi	r4,r2,12
   840d8:	89400304 	addi	r5,r17,12
   840dc:	31800084 	addi	r6,r6,2
   840e0:	318d883a 	add	r6,r6,r6
   840e4:	318d883a 	add	r6,r6,r6
   840e8:	1025883a 	mov	r18,r2
   840ec:	0085fb40 	call	85fb4 <memcpy>
   840f0:	8009883a 	mov	r4,r16
   840f4:	900b883a 	mov	r5,r18
   840f8:	01800044 	movi	r6,1
   840fc:	0086b300 	call	86b30 <__lshift>
   84100:	1027883a 	mov	r19,r2
   84104:	003e8806 	br	83b28 <_dtoa_r+0xd14>
   84108:	00800e44 	movi	r2,57
   8410c:	b8bf2b26 	beq	r23,r2,83dbc <_dtoa_r+0xfa8>
   84110:	ba400044 	addi	r9,r23,1
   84114:	882b883a 	mov	r21,r17
   84118:	95800044 	addi	r22,r18,1
   8411c:	92400005 	stb	r9,0(r18)
   84120:	9823883a 	mov	r17,r19
   84124:	003e3e06 	br	83a20 <_dtoa_r+0xc0c>
   84128:	882b883a 	mov	r21,r17
   8412c:	9823883a 	mov	r17,r19
   84130:	003e2206 	br	839bc <_dtoa_r+0xba8>
   84134:	0029883a 	mov	r20,zero
   84138:	0023883a 	mov	r17,zero
   8413c:	003f6206 	br	83ec8 <_dtoa_r+0x10b4>
   84140:	59bfffc4 	addi	r6,r11,-1
   84144:	300490fa 	slli	r2,r6,3
   84148:	00c00274 	movhi	r3,9
   8414c:	18ff3304 	addi	r3,r3,-820
   84150:	b80f883a 	mov	r7,r23
   84154:	1885883a 	add	r2,r3,r2
   84158:	11000017 	ldw	r4,0(r2)
   8415c:	11400117 	ldw	r5,4(r2)
   84160:	d8800717 	ldw	r2,28(sp)
   84164:	d9801015 	stw	r6,64(sp)
   84168:	880d883a 	mov	r6,r17
   8416c:	dac01615 	stw	r11,88(sp)
   84170:	15800044 	addi	r22,r2,1
   84174:	008bf000 	call	8bf00 <__muldf3>
   84178:	a00b883a 	mov	r5,r20
   8417c:	9809883a 	mov	r4,r19
   84180:	d8c01215 	stw	r3,72(sp)
   84184:	d8801115 	stw	r2,68(sp)
   84188:	008cf880 	call	8cf88 <__fixdfsi>
   8418c:	1009883a 	mov	r4,r2
   84190:	1023883a 	mov	r17,r2
   84194:	008d0080 	call	8d008 <__floatsidf>
   84198:	9809883a 	mov	r4,r19
   8419c:	a00b883a 	mov	r5,r20
   841a0:	100d883a 	mov	r6,r2
   841a4:	180f883a 	mov	r7,r3
   841a8:	008c7000 	call	8c700 <__subdf3>
   841ac:	1815883a 	mov	r10,r3
   841b0:	d8c00717 	ldw	r3,28(sp)
   841b4:	8c400c04 	addi	r17,r17,48
   841b8:	102f883a 	mov	r23,r2
   841bc:	1c400005 	stb	r17,0(r3)
   841c0:	dac01617 	ldw	r11,88(sp)
   841c4:	00800044 	movi	r2,1
   841c8:	58802426 	beq	r11,r2,8425c <_dtoa_r+0x1448>
   841cc:	d9800717 	ldw	r6,28(sp)
   841d0:	dc001415 	stw	r16,80(sp)
   841d4:	b805883a 	mov	r2,r23
   841d8:	32d7883a 	add	r11,r6,r11
   841dc:	b027883a 	mov	r19,r22
   841e0:	5821883a 	mov	r16,r11
   841e4:	5007883a 	mov	r3,r10
   841e8:	902f883a 	mov	r23,r18
   841ec:	000d883a 	mov	r6,zero
   841f0:	01d00934 	movhi	r7,16420
   841f4:	1009883a 	mov	r4,r2
   841f8:	180b883a 	mov	r5,r3
   841fc:	008bf000 	call	8bf00 <__muldf3>
   84200:	180b883a 	mov	r5,r3
   84204:	1009883a 	mov	r4,r2
   84208:	1829883a 	mov	r20,r3
   8420c:	1025883a 	mov	r18,r2
   84210:	008cf880 	call	8cf88 <__fixdfsi>
   84214:	1009883a 	mov	r4,r2
   84218:	1023883a 	mov	r17,r2
   8421c:	008d0080 	call	8d008 <__floatsidf>
   84220:	9009883a 	mov	r4,r18
   84224:	a00b883a 	mov	r5,r20
   84228:	100d883a 	mov	r6,r2
   8422c:	180f883a 	mov	r7,r3
   84230:	8c400c04 	addi	r17,r17,48
   84234:	008c7000 	call	8c700 <__subdf3>
   84238:	9cc00044 	addi	r19,r19,1
   8423c:	9c7fffc5 	stb	r17,-1(r19)
   84240:	9c3fea1e 	bne	r19,r16,841ec <_dtoa_r+0x13d8>
   84244:	d9c01017 	ldw	r7,64(sp)
   84248:	dc001417 	ldw	r16,80(sp)
   8424c:	b825883a 	mov	r18,r23
   84250:	1815883a 	mov	r10,r3
   84254:	102f883a 	mov	r23,r2
   84258:	b1ed883a 	add	r22,r22,r7
   8425c:	d9001117 	ldw	r4,68(sp)
   84260:	d9401217 	ldw	r5,72(sp)
   84264:	000d883a 	mov	r6,zero
   84268:	01cff834 	movhi	r7,16352
   8426c:	da801615 	stw	r10,88(sp)
   84270:	008aaa00 	call	8aaa0 <__adddf3>
   84274:	da801617 	ldw	r10,88(sp)
   84278:	1009883a 	mov	r4,r2
   8427c:	180b883a 	mov	r5,r3
   84280:	500f883a 	mov	r7,r10
   84284:	b80d883a 	mov	r6,r23
   84288:	008be140 	call	8be14 <__ledf2>
   8428c:	da801617 	ldw	r10,88(sp)
   84290:	1000330e 	bge	r2,zero,84360 <_dtoa_r+0x154c>
   84294:	d9001317 	ldw	r4,76(sp)
   84298:	b53fffc3 	ldbu	r20,-1(r22)
   8429c:	d9000615 	stw	r4,24(sp)
   842a0:	003d3706 	br	83780 <_dtoa_r+0x96c>
   842a4:	d8800817 	ldw	r2,32(sp)
   842a8:	11e7c83a 	sub	r19,r2,r7
   842ac:	0005883a 	mov	r2,zero
   842b0:	003d5106 	br	837f8 <_dtoa_r+0x9e4>
   842b4:	00800044 	movi	r2,1
   842b8:	003dbd06 	br	839b0 <_dtoa_r+0xb9c>
   842bc:	d8800217 	ldw	r2,8(sp)
   842c0:	00c00d84 	movi	r3,54
   842c4:	dd000a17 	ldw	r20,40(sp)
   842c8:	1885c83a 	sub	r2,r3,r2
   842cc:	dcc00817 	ldw	r19,32(sp)
   842d0:	003d4906 	br	837f8 <_dtoa_r+0x9e4>
   842d4:	dcc00317 	ldw	r19,12(sp)
   842d8:	9029883a 	mov	r20,r18
   842dc:	04400084 	movi	r17,2
   842e0:	003be306 	br	83270 <_dtoa_r+0x45c>
   842e4:	d9000917 	ldw	r4,36(sp)
   842e8:	203f0926 	beq	r4,zero,83f10 <_dtoa_r+0x10fc>
   842ec:	d9800d17 	ldw	r6,52(sp)
   842f0:	01bca30e 	bge	zero,r6,83580 <_dtoa_r+0x76c>
   842f4:	a00b883a 	mov	r5,r20
   842f8:	9809883a 	mov	r4,r19
   842fc:	000d883a 	mov	r6,zero
   84300:	01d00934 	movhi	r7,16420
   84304:	008bf000 	call	8bf00 <__muldf3>
   84308:	89000044 	addi	r4,r17,1
   8430c:	1027883a 	mov	r19,r2
   84310:	1829883a 	mov	r20,r3
   84314:	008d0080 	call	8d008 <__floatsidf>
   84318:	9809883a 	mov	r4,r19
   8431c:	a00b883a 	mov	r5,r20
   84320:	100d883a 	mov	r6,r2
   84324:	180f883a 	mov	r7,r3
   84328:	008bf000 	call	8bf00 <__muldf3>
   8432c:	01d00734 	movhi	r7,16412
   84330:	1009883a 	mov	r4,r2
   84334:	180b883a 	mov	r5,r3
   84338:	000d883a 	mov	r6,zero
   8433c:	008aaa00 	call	8aaa0 <__adddf3>
   84340:	d9c00617 	ldw	r7,24(sp)
   84344:	05bf3034 	movhi	r22,64704
   84348:	1023883a 	mov	r17,r2
   8434c:	39ffffc4 	addi	r7,r7,-1
   84350:	d9c01315 	stw	r7,76(sp)
   84354:	1daf883a 	add	r23,r3,r22
   84358:	dac00d17 	ldw	r11,52(sp)
   8435c:	003be006 	br	832e0 <_dtoa_r+0x4cc>
   84360:	d9801117 	ldw	r6,68(sp)
   84364:	d9c01217 	ldw	r7,72(sp)
   84368:	0009883a 	mov	r4,zero
   8436c:	014ff834 	movhi	r5,16352
   84370:	da801615 	stw	r10,88(sp)
   84374:	008c7000 	call	8c700 <__subdf3>
   84378:	da801617 	ldw	r10,88(sp)
   8437c:	1009883a 	mov	r4,r2
   84380:	180b883a 	mov	r5,r3
   84384:	b80d883a 	mov	r6,r23
   84388:	500f883a 	mov	r7,r10
   8438c:	008bd3c0 	call	8bd3c <__gedf2>
   84390:	00bc7b0e 	bge	zero,r2,83580 <_dtoa_r+0x76c>
   84394:	01000c04 	movi	r4,48
   84398:	00000106 	br	843a0 <_dtoa_r+0x158c>
   8439c:	102d883a 	mov	r22,r2
   843a0:	b0bfffc4 	addi	r2,r22,-1
   843a4:	10c00007 	ldb	r3,0(r2)
   843a8:	193ffc26 	beq	r3,r4,8439c <_dtoa_r+0x1588>
   843ac:	d9001317 	ldw	r4,76(sp)
   843b0:	d9000615 	stw	r4,24(sp)
   843b4:	003c4306 	br	834c4 <_dtoa_r+0x6b0>
   843b8:	d8c01317 	ldw	r3,76(sp)
   843bc:	dc001117 	ldw	r16,68(sp)
   843c0:	d8c00615 	stw	r3,24(sp)
   843c4:	003cee06 	br	83780 <_dtoa_r+0x96c>
   843c8:	dd401217 	ldw	r21,72(sp)
   843cc:	dc001117 	ldw	r16,68(sp)
   843d0:	dc801417 	ldw	r18,80(sp)
   843d4:	003c6a06 	br	83580 <_dtoa_r+0x76c>
   843d8:	103e6f1e 	bne	r2,zero,83d98 <_dtoa_r+0xf84>
   843dc:	b880004c 	andi	r2,r23,1
   843e0:	103e6d26 	beq	r2,zero,83d98 <_dtoa_r+0xf84>
   843e4:	003e6906 	br	83d8c <_dtoa_r+0xf78>
   843e8:	8009883a 	mov	r4,r16
   843ec:	880b883a 	mov	r5,r17
   843f0:	01800284 	movi	r6,10
   843f4:	000f883a 	mov	r7,zero
   843f8:	00863e00 	call	863e0 <__multadd>
   843fc:	d9000d17 	ldw	r4,52(sp)
   84400:	1023883a 	mov	r17,r2
   84404:	d9000915 	stw	r4,36(sp)
   84408:	003d5006 	br	8394c <_dtoa_r+0xb38>
   8440c:	04400084 	movi	r17,2
   84410:	003b9706 	br	83270 <_dtoa_r+0x45c>
   84414:	d8801317 	ldw	r2,76(sp)
   84418:	d8800615 	stw	r2,24(sp)
   8441c:	003cd806 	br	83780 <_dtoa_r+0x96c>
   84420:	d8801317 	ldw	r2,76(sp)
   84424:	d8800615 	stw	r2,24(sp)
   84428:	003c2606 	br	834c4 <_dtoa_r+0x6b0>
   8442c:	04c00044 	movi	r19,1
   84430:	003b3506 	br	83108 <_dtoa_r+0x2f4>
   84434:	3023883a 	mov	r17,r6
   84438:	000b883a 	mov	r5,zero
   8443c:	003b5106 	br	83184 <_dtoa_r+0x370>
   84440:	20fd3426 	beq	r4,r3,83914 <_dtoa_r+0xb00>
   84444:	00c00f04 	movi	r3,60
   84448:	1885c83a 	sub	r2,r3,r2
   8444c:	003da106 	br	83ad4 <_dtoa_r+0xcc0>

00084450 <_fflush_r>:
   84450:	defffb04 	addi	sp,sp,-20
   84454:	dcc00315 	stw	r19,12(sp)
   84458:	dc400115 	stw	r17,4(sp)
   8445c:	dfc00415 	stw	ra,16(sp)
   84460:	dc800215 	stw	r18,8(sp)
   84464:	dc000015 	stw	r16,0(sp)
   84468:	2027883a 	mov	r19,r4
   8446c:	2823883a 	mov	r17,r5
   84470:	20000226 	beq	r4,zero,8447c <_fflush_r+0x2c>
   84474:	20800e17 	ldw	r2,56(r4)
   84478:	10005826 	beq	r2,zero,845dc <_fflush_r+0x18c>
   8447c:	8880030b 	ldhu	r2,12(r17)
   84480:	10ffffcc 	andi	r3,r2,65535
   84484:	18e0001c 	xori	r3,r3,32768
   84488:	18e00004 	addi	r3,r3,-32768
   8448c:	18002b26 	beq	r3,zero,8453c <_fflush_r+0xec>
   84490:	10c0020c 	andi	r3,r2,8
   84494:	1800311e 	bne	r3,zero,8455c <_fflush_r+0x10c>
   84498:	88c00117 	ldw	r3,4(r17)
   8449c:	10820014 	ori	r2,r2,2048
   844a0:	8880030d 	sth	r2,12(r17)
   844a4:	00c05c0e 	bge	zero,r3,84618 <_fflush_r+0x1c8>
   844a8:	88c00a17 	ldw	r3,40(r17)
   844ac:	18002326 	beq	r3,zero,8453c <_fflush_r+0xec>
   844b0:	9c000017 	ldw	r16,0(r19)
   844b4:	1104000c 	andi	r4,r2,4096
   844b8:	98000015 	stw	zero,0(r19)
   844bc:	20004b26 	beq	r4,zero,845ec <_fflush_r+0x19c>
   844c0:	89801417 	ldw	r6,80(r17)
   844c4:	1080010c 	andi	r2,r2,4
   844c8:	10000626 	beq	r2,zero,844e4 <_fflush_r+0x94>
   844cc:	89000117 	ldw	r4,4(r17)
   844d0:	88800c17 	ldw	r2,48(r17)
   844d4:	310dc83a 	sub	r6,r6,r4
   844d8:	10000226 	beq	r2,zero,844e4 <_fflush_r+0x94>
   844dc:	88800f17 	ldw	r2,60(r17)
   844e0:	308dc83a 	sub	r6,r6,r2
   844e4:	89400717 	ldw	r5,28(r17)
   844e8:	9809883a 	mov	r4,r19
   844ec:	000f883a 	mov	r7,zero
   844f0:	183ee83a 	callr	r3
   844f4:	00ffffc4 	movi	r3,-1
   844f8:	10c04a26 	beq	r2,r3,84624 <_fflush_r+0x1d4>
   844fc:	88c0030b 	ldhu	r3,12(r17)
   84500:	89000417 	ldw	r4,16(r17)
   84504:	88000115 	stw	zero,4(r17)
   84508:	197dffcc 	andi	r5,r3,63487
   8450c:	8940030d 	sth	r5,12(r17)
   84510:	89000015 	stw	r4,0(r17)
   84514:	18c4000c 	andi	r3,r3,4096
   84518:	1800581e 	bne	r3,zero,8467c <_fflush_r+0x22c>
   8451c:	89400c17 	ldw	r5,48(r17)
   84520:	9c000015 	stw	r16,0(r19)
   84524:	28000526 	beq	r5,zero,8453c <_fflush_r+0xec>
   84528:	88801004 	addi	r2,r17,64
   8452c:	28800226 	beq	r5,r2,84538 <_fflush_r+0xe8>
   84530:	9809883a 	mov	r4,r19
   84534:	0084ba40 	call	84ba4 <_free_r>
   84538:	88000c15 	stw	zero,48(r17)
   8453c:	0005883a 	mov	r2,zero
   84540:	dfc00417 	ldw	ra,16(sp)
   84544:	dcc00317 	ldw	r19,12(sp)
   84548:	dc800217 	ldw	r18,8(sp)
   8454c:	dc400117 	ldw	r17,4(sp)
   84550:	dc000017 	ldw	r16,0(sp)
   84554:	dec00504 	addi	sp,sp,20
   84558:	f800283a 	ret
   8455c:	8c800417 	ldw	r18,16(r17)
   84560:	903ff626 	beq	r18,zero,8453c <_fflush_r+0xec>
   84564:	8c000017 	ldw	r16,0(r17)
   84568:	108000cc 	andi	r2,r2,3
   8456c:	8c800015 	stw	r18,0(r17)
   84570:	84a1c83a 	sub	r16,r16,r18
   84574:	10001b26 	beq	r2,zero,845e4 <_fflush_r+0x194>
   84578:	0005883a 	mov	r2,zero
   8457c:	88800215 	stw	r2,8(r17)
   84580:	04000316 	blt	zero,r16,84590 <_fflush_r+0x140>
   84584:	003fed06 	br	8453c <_fflush_r+0xec>
   84588:	90a5883a 	add	r18,r18,r2
   8458c:	043feb0e 	bge	zero,r16,8453c <_fflush_r+0xec>
   84590:	88800917 	ldw	r2,36(r17)
   84594:	89400717 	ldw	r5,28(r17)
   84598:	800f883a 	mov	r7,r16
   8459c:	900d883a 	mov	r6,r18
   845a0:	9809883a 	mov	r4,r19
   845a4:	103ee83a 	callr	r2
   845a8:	80a1c83a 	sub	r16,r16,r2
   845ac:	00bff616 	blt	zero,r2,84588 <_fflush_r+0x138>
   845b0:	88c0030b 	ldhu	r3,12(r17)
   845b4:	00bfffc4 	movi	r2,-1
   845b8:	18c01014 	ori	r3,r3,64
   845bc:	88c0030d 	sth	r3,12(r17)
   845c0:	dfc00417 	ldw	ra,16(sp)
   845c4:	dcc00317 	ldw	r19,12(sp)
   845c8:	dc800217 	ldw	r18,8(sp)
   845cc:	dc400117 	ldw	r17,4(sp)
   845d0:	dc000017 	ldw	r16,0(sp)
   845d4:	dec00504 	addi	sp,sp,20
   845d8:	f800283a 	ret
   845dc:	00847700 	call	84770 <__sinit>
   845e0:	003fa606 	br	8447c <_fflush_r+0x2c>
   845e4:	88800517 	ldw	r2,20(r17)
   845e8:	003fe406 	br	8457c <_fflush_r+0x12c>
   845ec:	89400717 	ldw	r5,28(r17)
   845f0:	000d883a 	mov	r6,zero
   845f4:	9809883a 	mov	r4,r19
   845f8:	01c00044 	movi	r7,1
   845fc:	183ee83a 	callr	r3
   84600:	100d883a 	mov	r6,r2
   84604:	00bfffc4 	movi	r2,-1
   84608:	30801326 	beq	r6,r2,84658 <_fflush_r+0x208>
   8460c:	8880030b 	ldhu	r2,12(r17)
   84610:	88c00a17 	ldw	r3,40(r17)
   84614:	003fab06 	br	844c4 <_fflush_r+0x74>
   84618:	88c00f17 	ldw	r3,60(r17)
   8461c:	00ffa216 	blt	zero,r3,844a8 <_fflush_r+0x58>
   84620:	003fc606 	br	8453c <_fflush_r+0xec>
   84624:	98c00017 	ldw	r3,0(r19)
   84628:	183fb426 	beq	r3,zero,844fc <_fflush_r+0xac>
   8462c:	01000744 	movi	r4,29
   84630:	19000226 	beq	r3,r4,8463c <_fflush_r+0x1ec>
   84634:	01000584 	movi	r4,22
   84638:	1900121e 	bne	r3,r4,84684 <_fflush_r+0x234>
   8463c:	88c0030b 	ldhu	r3,12(r17)
   84640:	88800417 	ldw	r2,16(r17)
   84644:	88000115 	stw	zero,4(r17)
   84648:	18fdffcc 	andi	r3,r3,63487
   8464c:	88c0030d 	sth	r3,12(r17)
   84650:	88800015 	stw	r2,0(r17)
   84654:	003fb106 	br	8451c <_fflush_r+0xcc>
   84658:	98800017 	ldw	r2,0(r19)
   8465c:	103feb26 	beq	r2,zero,8460c <_fflush_r+0x1bc>
   84660:	00c00744 	movi	r3,29
   84664:	10c00226 	beq	r2,r3,84670 <_fflush_r+0x220>
   84668:	00c00584 	movi	r3,22
   8466c:	10ffd01e 	bne	r2,r3,845b0 <_fflush_r+0x160>
   84670:	9c000015 	stw	r16,0(r19)
   84674:	0005883a 	mov	r2,zero
   84678:	003fb106 	br	84540 <_fflush_r+0xf0>
   8467c:	88801415 	stw	r2,80(r17)
   84680:	003fa606 	br	8451c <_fflush_r+0xcc>
   84684:	88c0030b 	ldhu	r3,12(r17)
   84688:	18c01014 	ori	r3,r3,64
   8468c:	88c0030d 	sth	r3,12(r17)
   84690:	003fab06 	br	84540 <_fflush_r+0xf0>

00084694 <fflush>:
   84694:	200b883a 	mov	r5,r4
   84698:	20000426 	beq	r4,zero,846ac <fflush+0x18>
   8469c:	00800274 	movhi	r2,9
   846a0:	10866404 	addi	r2,r2,6544
   846a4:	11000017 	ldw	r4,0(r2)
   846a8:	00844501 	jmpi	84450 <_fflush_r>
   846ac:	00800274 	movhi	r2,9
   846b0:	10866304 	addi	r2,r2,6540
   846b4:	11000017 	ldw	r4,0(r2)
   846b8:	01400234 	movhi	r5,8
   846bc:	29511404 	addi	r5,r5,17488
   846c0:	00853c81 	jmpi	853c8 <_fwalk_reent>

000846c4 <__fp_lock>:
   846c4:	0005883a 	mov	r2,zero
   846c8:	f800283a 	ret

000846cc <__fp_unlock>:
   846cc:	0005883a 	mov	r2,zero
   846d0:	f800283a 	ret

000846d4 <_cleanup_r>:
   846d4:	01400274 	movhi	r5,9
   846d8:	29656304 	addi	r5,r5,-27252
   846dc:	00853201 	jmpi	85320 <_fwalk>

000846e0 <__sfmoreglue>:
   846e0:	defffc04 	addi	sp,sp,-16
   846e4:	dc800215 	stw	r18,8(sp)
   846e8:	2825883a 	mov	r18,r5
   846ec:	dc000015 	stw	r16,0(sp)
   846f0:	01401a04 	movi	r5,104
   846f4:	2021883a 	mov	r16,r4
   846f8:	9009883a 	mov	r4,r18
   846fc:	dfc00315 	stw	ra,12(sp)
   84700:	dc400115 	stw	r17,4(sp)
   84704:	008aa780 	call	8aa78 <__mulsi3>
   84708:	8009883a 	mov	r4,r16
   8470c:	11400304 	addi	r5,r2,12
   84710:	1023883a 	mov	r17,r2
   84714:	00857080 	call	85708 <_malloc_r>
   84718:	1021883a 	mov	r16,r2
   8471c:	10000726 	beq	r2,zero,8473c <__sfmoreglue+0x5c>
   84720:	11000304 	addi	r4,r2,12
   84724:	10000015 	stw	zero,0(r2)
   84728:	14800115 	stw	r18,4(r2)
   8472c:	11000215 	stw	r4,8(r2)
   84730:	000b883a 	mov	r5,zero
   84734:	880d883a 	mov	r6,r17
   84738:	00861fc0 	call	861fc <memset>
   8473c:	8005883a 	mov	r2,r16
   84740:	dfc00317 	ldw	ra,12(sp)
   84744:	dc800217 	ldw	r18,8(sp)
   84748:	dc400117 	ldw	r17,4(sp)
   8474c:	dc000017 	ldw	r16,0(sp)
   84750:	dec00404 	addi	sp,sp,16
   84754:	f800283a 	ret

00084758 <_cleanup>:
   84758:	00800274 	movhi	r2,9
   8475c:	10866304 	addi	r2,r2,6540
   84760:	11000017 	ldw	r4,0(r2)
   84764:	01400274 	movhi	r5,9
   84768:	29656304 	addi	r5,r5,-27252
   8476c:	00853201 	jmpi	85320 <_fwalk>

00084770 <__sinit>:
   84770:	20800e17 	ldw	r2,56(r4)
   84774:	defff704 	addi	sp,sp,-36
   84778:	dc800215 	stw	r18,8(sp)
   8477c:	dfc00815 	stw	ra,32(sp)
   84780:	ddc00715 	stw	r23,28(sp)
   84784:	dd800615 	stw	r22,24(sp)
   84788:	dd400515 	stw	r21,20(sp)
   8478c:	dd000415 	stw	r20,16(sp)
   84790:	dcc00315 	stw	r19,12(sp)
   84794:	dc400115 	stw	r17,4(sp)
   84798:	dc000015 	stw	r16,0(sp)
   8479c:	2025883a 	mov	r18,r4
   847a0:	10004f1e 	bne	r2,zero,848e0 <__sinit+0x170>
   847a4:	24000117 	ldw	r16,4(r4)
   847a8:	00c00234 	movhi	r3,8
   847ac:	18d1b504 	addi	r3,r3,18132
   847b0:	20c00f15 	stw	r3,60(r4)
   847b4:	2080bb04 	addi	r2,r4,748
   847b8:	00c000c4 	movi	r3,3
   847bc:	05c00044 	movi	r23,1
   847c0:	20c0b915 	stw	r3,740(r4)
   847c4:	2080ba15 	stw	r2,744(r4)
   847c8:	25c00e15 	stw	r23,56(r4)
   847cc:	2000b815 	stw	zero,736(r4)
   847d0:	00800104 	movi	r2,4
   847d4:	81001704 	addi	r4,r16,92
   847d8:	000b883a 	mov	r5,zero
   847dc:	01800204 	movi	r6,8
   847e0:	80000015 	stw	zero,0(r16)
   847e4:	80000115 	stw	zero,4(r16)
   847e8:	80000215 	stw	zero,8(r16)
   847ec:	8080030d 	sth	r2,12(r16)
   847f0:	80001915 	stw	zero,100(r16)
   847f4:	8000038d 	sth	zero,14(r16)
   847f8:	80000415 	stw	zero,16(r16)
   847fc:	80000515 	stw	zero,20(r16)
   84800:	80000615 	stw	zero,24(r16)
   84804:	00861fc0 	call	861fc <memset>
   84808:	94400217 	ldw	r17,8(r18)
   8480c:	05800234 	movhi	r22,8
   84810:	b59ed704 	addi	r22,r22,31580
   84814:	05400234 	movhi	r21,8
   84818:	ad5eee04 	addi	r21,r21,31672
   8481c:	05000234 	movhi	r20,8
   84820:	a51f0d04 	addi	r20,r20,31796
   84824:	04c00234 	movhi	r19,8
   84828:	9cdf2404 	addi	r19,r19,31888
   8482c:	84000715 	stw	r16,28(r16)
   84830:	85800815 	stw	r22,32(r16)
   84834:	85400915 	stw	r21,36(r16)
   84838:	85000a15 	stw	r20,40(r16)
   8483c:	84c00b15 	stw	r19,44(r16)
   84840:	00800284 	movi	r2,10
   84844:	89001704 	addi	r4,r17,92
   84848:	000b883a 	mov	r5,zero
   8484c:	01800204 	movi	r6,8
   84850:	88000015 	stw	zero,0(r17)
   84854:	88000115 	stw	zero,4(r17)
   84858:	88000215 	stw	zero,8(r17)
   8485c:	8880030d 	sth	r2,12(r17)
   84860:	88001915 	stw	zero,100(r17)
   84864:	8dc0038d 	sth	r23,14(r17)
   84868:	88000415 	stw	zero,16(r17)
   8486c:	88000515 	stw	zero,20(r17)
   84870:	88000615 	stw	zero,24(r17)
   84874:	00861fc0 	call	861fc <memset>
   84878:	94000317 	ldw	r16,12(r18)
   8487c:	00800484 	movi	r2,18
   84880:	8c400715 	stw	r17,28(r17)
   84884:	8d800815 	stw	r22,32(r17)
   84888:	8d400915 	stw	r21,36(r17)
   8488c:	8d000a15 	stw	r20,40(r17)
   84890:	8cc00b15 	stw	r19,44(r17)
   84894:	8080030d 	sth	r2,12(r16)
   84898:	00800084 	movi	r2,2
   8489c:	80000015 	stw	zero,0(r16)
   848a0:	80000115 	stw	zero,4(r16)
   848a4:	80000215 	stw	zero,8(r16)
   848a8:	80001915 	stw	zero,100(r16)
   848ac:	8080038d 	sth	r2,14(r16)
   848b0:	80000415 	stw	zero,16(r16)
   848b4:	80000515 	stw	zero,20(r16)
   848b8:	80000615 	stw	zero,24(r16)
   848bc:	81001704 	addi	r4,r16,92
   848c0:	000b883a 	mov	r5,zero
   848c4:	01800204 	movi	r6,8
   848c8:	00861fc0 	call	861fc <memset>
   848cc:	84000715 	stw	r16,28(r16)
   848d0:	85800815 	stw	r22,32(r16)
   848d4:	85400915 	stw	r21,36(r16)
   848d8:	85000a15 	stw	r20,40(r16)
   848dc:	84c00b15 	stw	r19,44(r16)
   848e0:	dfc00817 	ldw	ra,32(sp)
   848e4:	ddc00717 	ldw	r23,28(sp)
   848e8:	dd800617 	ldw	r22,24(sp)
   848ec:	dd400517 	ldw	r21,20(sp)
   848f0:	dd000417 	ldw	r20,16(sp)
   848f4:	dcc00317 	ldw	r19,12(sp)
   848f8:	dc800217 	ldw	r18,8(sp)
   848fc:	dc400117 	ldw	r17,4(sp)
   84900:	dc000017 	ldw	r16,0(sp)
   84904:	dec00904 	addi	sp,sp,36
   84908:	f800283a 	ret

0008490c <__sfp>:
   8490c:	defffb04 	addi	sp,sp,-20
   84910:	00800274 	movhi	r2,9
   84914:	10866304 	addi	r2,r2,6540
   84918:	dc800215 	stw	r18,8(sp)
   8491c:	14800017 	ldw	r18,0(r2)
   84920:	dcc00315 	stw	r19,12(sp)
   84924:	dfc00415 	stw	ra,16(sp)
   84928:	90800e17 	ldw	r2,56(r18)
   8492c:	dc400115 	stw	r17,4(sp)
   84930:	dc000015 	stw	r16,0(sp)
   84934:	2027883a 	mov	r19,r4
   84938:	10002f26 	beq	r2,zero,849f8 <__sfp+0xec>
   8493c:	9480b804 	addi	r18,r18,736
   84940:	047fffc4 	movi	r17,-1
   84944:	91400117 	ldw	r5,4(r18)
   84948:	94000217 	ldw	r16,8(r18)
   8494c:	297fffc4 	addi	r5,r5,-1
   84950:	28000a16 	blt	r5,zero,8497c <__sfp+0x70>
   84954:	8080030f 	ldh	r2,12(r16)
   84958:	10000c26 	beq	r2,zero,8498c <__sfp+0x80>
   8495c:	80c01d04 	addi	r3,r16,116
   84960:	00000206 	br	8496c <__sfp+0x60>
   84964:	18bfe60f 	ldh	r2,-104(r3)
   84968:	10000826 	beq	r2,zero,8498c <__sfp+0x80>
   8496c:	297fffc4 	addi	r5,r5,-1
   84970:	1c3ffd04 	addi	r16,r3,-12
   84974:	18c01a04 	addi	r3,r3,104
   84978:	2c7ffa1e 	bne	r5,r17,84964 <__sfp+0x58>
   8497c:	90800017 	ldw	r2,0(r18)
   84980:	10002026 	beq	r2,zero,84a04 <__sfp+0xf8>
   84984:	1025883a 	mov	r18,r2
   84988:	003fee06 	br	84944 <__sfp+0x38>
   8498c:	00bfffc4 	movi	r2,-1
   84990:	8080038d 	sth	r2,14(r16)
   84994:	00800044 	movi	r2,1
   84998:	8080030d 	sth	r2,12(r16)
   8499c:	80001915 	stw	zero,100(r16)
   849a0:	80000015 	stw	zero,0(r16)
   849a4:	80000215 	stw	zero,8(r16)
   849a8:	80000115 	stw	zero,4(r16)
   849ac:	80000415 	stw	zero,16(r16)
   849b0:	80000515 	stw	zero,20(r16)
   849b4:	80000615 	stw	zero,24(r16)
   849b8:	81001704 	addi	r4,r16,92
   849bc:	000b883a 	mov	r5,zero
   849c0:	01800204 	movi	r6,8
   849c4:	00861fc0 	call	861fc <memset>
   849c8:	8005883a 	mov	r2,r16
   849cc:	80000c15 	stw	zero,48(r16)
   849d0:	80000d15 	stw	zero,52(r16)
   849d4:	80001115 	stw	zero,68(r16)
   849d8:	80001215 	stw	zero,72(r16)
   849dc:	dfc00417 	ldw	ra,16(sp)
   849e0:	dcc00317 	ldw	r19,12(sp)
   849e4:	dc800217 	ldw	r18,8(sp)
   849e8:	dc400117 	ldw	r17,4(sp)
   849ec:	dc000017 	ldw	r16,0(sp)
   849f0:	dec00504 	addi	sp,sp,20
   849f4:	f800283a 	ret
   849f8:	9009883a 	mov	r4,r18
   849fc:	00847700 	call	84770 <__sinit>
   84a00:	003fce06 	br	8493c <__sfp+0x30>
   84a04:	9809883a 	mov	r4,r19
   84a08:	01400104 	movi	r5,4
   84a0c:	00846e00 	call	846e0 <__sfmoreglue>
   84a10:	90800015 	stw	r2,0(r18)
   84a14:	103fdb1e 	bne	r2,zero,84984 <__sfp+0x78>
   84a18:	00800304 	movi	r2,12
   84a1c:	98800015 	stw	r2,0(r19)
   84a20:	0005883a 	mov	r2,zero
   84a24:	003fed06 	br	849dc <__sfp+0xd0>

00084a28 <__sfp_lock_acquire>:
   84a28:	f800283a 	ret

00084a2c <__sfp_lock_release>:
   84a2c:	f800283a 	ret

00084a30 <__sinit_lock_acquire>:
   84a30:	f800283a 	ret

00084a34 <__sinit_lock_release>:
   84a34:	f800283a 	ret

00084a38 <__fp_lock_all>:
   84a38:	00800274 	movhi	r2,9
   84a3c:	10866404 	addi	r2,r2,6544
   84a40:	11000017 	ldw	r4,0(r2)
   84a44:	01400234 	movhi	r5,8
   84a48:	2951b104 	addi	r5,r5,18116
   84a4c:	00853201 	jmpi	85320 <_fwalk>

00084a50 <__fp_unlock_all>:
   84a50:	00800274 	movhi	r2,9
   84a54:	10866404 	addi	r2,r2,6544
   84a58:	11000017 	ldw	r4,0(r2)
   84a5c:	01400234 	movhi	r5,8
   84a60:	2951b304 	addi	r5,r5,18124
   84a64:	00853201 	jmpi	85320 <_fwalk>

00084a68 <_malloc_trim_r>:
   84a68:	defffb04 	addi	sp,sp,-20
   84a6c:	dcc00315 	stw	r19,12(sp)
   84a70:	dc800215 	stw	r18,8(sp)
   84a74:	dc400115 	stw	r17,4(sp)
   84a78:	dc000015 	stw	r16,0(sp)
   84a7c:	2827883a 	mov	r19,r5
   84a80:	dfc00415 	stw	ra,16(sp)
   84a84:	04400274 	movhi	r17,9
   84a88:	8c40df04 	addi	r17,r17,892
   84a8c:	2021883a 	mov	r16,r4
   84a90:	008d7f00 	call	8d7f0 <__malloc_lock>
   84a94:	88800217 	ldw	r2,8(r17)
   84a98:	14800117 	ldw	r18,4(r2)
   84a9c:	00bfff04 	movi	r2,-4
   84aa0:	90a4703a 	and	r18,r18,r2
   84aa4:	94e7c83a 	sub	r19,r18,r19
   84aa8:	9cc3fbc4 	addi	r19,r19,4079
   84aac:	9826d33a 	srli	r19,r19,12
   84ab0:	0083ffc4 	movi	r2,4095
   84ab4:	9cffffc4 	addi	r19,r19,-1
   84ab8:	9826933a 	slli	r19,r19,12
   84abc:	14c0060e 	bge	r2,r19,84ad8 <_malloc_trim_r+0x70>
   84ac0:	8009883a 	mov	r4,r16
   84ac4:	000b883a 	mov	r5,zero
   84ac8:	0087af80 	call	87af8 <_sbrk_r>
   84acc:	88c00217 	ldw	r3,8(r17)
   84ad0:	1c87883a 	add	r3,r3,r18
   84ad4:	10c00a26 	beq	r2,r3,84b00 <_malloc_trim_r+0x98>
   84ad8:	8009883a 	mov	r4,r16
   84adc:	008d8100 	call	8d810 <__malloc_unlock>
   84ae0:	0005883a 	mov	r2,zero
   84ae4:	dfc00417 	ldw	ra,16(sp)
   84ae8:	dcc00317 	ldw	r19,12(sp)
   84aec:	dc800217 	ldw	r18,8(sp)
   84af0:	dc400117 	ldw	r17,4(sp)
   84af4:	dc000017 	ldw	r16,0(sp)
   84af8:	dec00504 	addi	sp,sp,20
   84afc:	f800283a 	ret
   84b00:	8009883a 	mov	r4,r16
   84b04:	04cbc83a 	sub	r5,zero,r19
   84b08:	0087af80 	call	87af8 <_sbrk_r>
   84b0c:	00ffffc4 	movi	r3,-1
   84b10:	10c01326 	beq	r2,r3,84b60 <_malloc_trim_r+0xf8>
   84b14:	00800274 	movhi	r2,9
   84b18:	108d3c04 	addi	r2,r2,13552
   84b1c:	11000017 	ldw	r4,0(r2)
   84b20:	88c00217 	ldw	r3,8(r17)
   84b24:	94e5c83a 	sub	r18,r18,r19
   84b28:	94800054 	ori	r18,r18,1
   84b2c:	24e7c83a 	sub	r19,r4,r19
   84b30:	1c800115 	stw	r18,4(r3)
   84b34:	8009883a 	mov	r4,r16
   84b38:	14c00015 	stw	r19,0(r2)
   84b3c:	008d8100 	call	8d810 <__malloc_unlock>
   84b40:	00800044 	movi	r2,1
   84b44:	dfc00417 	ldw	ra,16(sp)
   84b48:	dcc00317 	ldw	r19,12(sp)
   84b4c:	dc800217 	ldw	r18,8(sp)
   84b50:	dc400117 	ldw	r17,4(sp)
   84b54:	dc000017 	ldw	r16,0(sp)
   84b58:	dec00504 	addi	sp,sp,20
   84b5c:	f800283a 	ret
   84b60:	8009883a 	mov	r4,r16
   84b64:	000b883a 	mov	r5,zero
   84b68:	0087af80 	call	87af8 <_sbrk_r>
   84b6c:	88c00217 	ldw	r3,8(r17)
   84b70:	014003c4 	movi	r5,15
   84b74:	10c9c83a 	sub	r4,r2,r3
   84b78:	293fd70e 	bge	r5,r4,84ad8 <_malloc_trim_r+0x70>
   84b7c:	01400274 	movhi	r5,9
   84b80:	29466604 	addi	r5,r5,6552
   84b84:	29400017 	ldw	r5,0(r5)
   84b88:	21000054 	ori	r4,r4,1
   84b8c:	19000115 	stw	r4,4(r3)
   84b90:	1145c83a 	sub	r2,r2,r5
   84b94:	01400274 	movhi	r5,9
   84b98:	294d3c04 	addi	r5,r5,13552
   84b9c:	28800015 	stw	r2,0(r5)
   84ba0:	003fcd06 	br	84ad8 <_malloc_trim_r+0x70>

00084ba4 <_free_r>:
   84ba4:	defffd04 	addi	sp,sp,-12
   84ba8:	dc000015 	stw	r16,0(sp)
   84bac:	dfc00215 	stw	ra,8(sp)
   84bb0:	dc400115 	stw	r17,4(sp)
   84bb4:	2821883a 	mov	r16,r5
   84bb8:	28004c26 	beq	r5,zero,84cec <_free_r+0x148>
   84bbc:	2023883a 	mov	r17,r4
   84bc0:	008d7f00 	call	8d7f0 <__malloc_lock>
   84bc4:	823fff17 	ldw	r8,-4(r16)
   84bc8:	00bfff84 	movi	r2,-2
   84bcc:	81bffe04 	addi	r6,r16,-8
   84bd0:	4084703a 	and	r2,r8,r2
   84bd4:	3087883a 	add	r3,r6,r2
   84bd8:	01400274 	movhi	r5,9
   84bdc:	2940df04 	addi	r5,r5,892
   84be0:	1a400117 	ldw	r9,4(r3)
   84be4:	29000217 	ldw	r4,8(r5)
   84be8:	01ffff04 	movi	r7,-4
   84bec:	49ce703a 	and	r7,r9,r7
   84bf0:	20c06526 	beq	r4,r3,84d88 <_free_r+0x1e4>
   84bf4:	19c00115 	stw	r7,4(r3)
   84bf8:	4200004c 	andi	r8,r8,1
   84bfc:	40003026 	beq	r8,zero,84cc0 <_free_r+0x11c>
   84c00:	0009883a 	mov	r4,zero
   84c04:	19d1883a 	add	r8,r3,r7
   84c08:	42000117 	ldw	r8,4(r8)
   84c0c:	4200004c 	andi	r8,r8,1
   84c10:	4000061e 	bne	r8,zero,84c2c <_free_r+0x88>
   84c14:	11c5883a 	add	r2,r2,r7
   84c18:	19c00217 	ldw	r7,8(r3)
   84c1c:	20004e26 	beq	r4,zero,84d58 <_free_r+0x1b4>
   84c20:	18c00317 	ldw	r3,12(r3)
   84c24:	38c00315 	stw	r3,12(r7)
   84c28:	19c00215 	stw	r7,8(r3)
   84c2c:	10c00054 	ori	r3,r2,1
   84c30:	30c00115 	stw	r3,4(r6)
   84c34:	3087883a 	add	r3,r6,r2
   84c38:	18800015 	stw	r2,0(r3)
   84c3c:	20001a1e 	bne	r4,zero,84ca8 <_free_r+0x104>
   84c40:	00c07fc4 	movi	r3,511
   84c44:	18802e2e 	bgeu	r3,r2,84d00 <_free_r+0x15c>
   84c48:	1006d27a 	srli	r3,r2,9
   84c4c:	01000104 	movi	r4,4
   84c50:	20c06636 	bltu	r4,r3,84dec <_free_r+0x248>
   84c54:	1008d1ba 	srli	r4,r2,6
   84c58:	21000e04 	addi	r4,r4,56
   84c5c:	210f883a 	add	r7,r4,r4
   84c60:	39cf883a 	add	r7,r7,r7
   84c64:	39cf883a 	add	r7,r7,r7
   84c68:	29cf883a 	add	r7,r5,r7
   84c6c:	38c00217 	ldw	r3,8(r7)
   84c70:	01400274 	movhi	r5,9
   84c74:	2940df04 	addi	r5,r5,892
   84c78:	19c06126 	beq	r3,r7,84e00 <_free_r+0x25c>
   84c7c:	013fff04 	movi	r4,-4
   84c80:	19400117 	ldw	r5,4(r3)
   84c84:	290a703a 	and	r5,r5,r4
   84c88:	1140022e 	bgeu	r2,r5,84c94 <_free_r+0xf0>
   84c8c:	18c00217 	ldw	r3,8(r3)
   84c90:	38fffb1e 	bne	r7,r3,84c80 <_free_r+0xdc>
   84c94:	18800317 	ldw	r2,12(r3)
   84c98:	30800315 	stw	r2,12(r6)
   84c9c:	30c00215 	stw	r3,8(r6)
   84ca0:	11800215 	stw	r6,8(r2)
   84ca4:	19800315 	stw	r6,12(r3)
   84ca8:	8809883a 	mov	r4,r17
   84cac:	dfc00217 	ldw	ra,8(sp)
   84cb0:	dc400117 	ldw	r17,4(sp)
   84cb4:	dc000017 	ldw	r16,0(sp)
   84cb8:	dec00304 	addi	sp,sp,12
   84cbc:	008d8101 	jmpi	8d810 <__malloc_unlock>
   84cc0:	813ffe17 	ldw	r4,-8(r16)
   84cc4:	2a400204 	addi	r9,r5,8
   84cc8:	310dc83a 	sub	r6,r6,r4
   84ccc:	32000217 	ldw	r8,8(r6)
   84cd0:	1105883a 	add	r2,r2,r4
   84cd4:	42404326 	beq	r8,r9,84de4 <_free_r+0x240>
   84cd8:	32400317 	ldw	r9,12(r6)
   84cdc:	0009883a 	mov	r4,zero
   84ce0:	42400315 	stw	r9,12(r8)
   84ce4:	4a000215 	stw	r8,8(r9)
   84ce8:	003fc606 	br	84c04 <_free_r+0x60>
   84cec:	dfc00217 	ldw	ra,8(sp)
   84cf0:	dc400117 	ldw	r17,4(sp)
   84cf4:	dc000017 	ldw	r16,0(sp)
   84cf8:	dec00304 	addi	sp,sp,12
   84cfc:	f800283a 	ret
   84d00:	1004d0fa 	srli	r2,r2,3
   84d04:	02000044 	movi	r8,1
   84d08:	29c00117 	ldw	r7,4(r5)
   84d0c:	1087883a 	add	r3,r2,r2
   84d10:	18c7883a 	add	r3,r3,r3
   84d14:	18c7883a 	add	r3,r3,r3
   84d18:	28c7883a 	add	r3,r5,r3
   84d1c:	1005d0ba 	srai	r2,r2,2
   84d20:	19000217 	ldw	r4,8(r3)
   84d24:	30c00315 	stw	r3,12(r6)
   84d28:	4084983a 	sll	r2,r8,r2
   84d2c:	31000215 	stw	r4,8(r6)
   84d30:	19800215 	stw	r6,8(r3)
   84d34:	11c4b03a 	or	r2,r2,r7
   84d38:	21800315 	stw	r6,12(r4)
   84d3c:	8809883a 	mov	r4,r17
   84d40:	28800115 	stw	r2,4(r5)
   84d44:	dfc00217 	ldw	ra,8(sp)
   84d48:	dc400117 	ldw	r17,4(sp)
   84d4c:	dc000017 	ldw	r16,0(sp)
   84d50:	dec00304 	addi	sp,sp,12
   84d54:	008d8101 	jmpi	8d810 <__malloc_unlock>
   84d58:	02000274 	movhi	r8,9
   84d5c:	4200e104 	addi	r8,r8,900
   84d60:	3a3faf1e 	bne	r7,r8,84c20 <_free_r+0x7c>
   84d64:	29800515 	stw	r6,20(r5)
   84d68:	29800415 	stw	r6,16(r5)
   84d6c:	10c00054 	ori	r3,r2,1
   84d70:	31c00315 	stw	r7,12(r6)
   84d74:	31c00215 	stw	r7,8(r6)
   84d78:	30c00115 	stw	r3,4(r6)
   84d7c:	308d883a 	add	r6,r6,r2
   84d80:	30800015 	stw	r2,0(r6)
   84d84:	003fc806 	br	84ca8 <_free_r+0x104>
   84d88:	4200004c 	andi	r8,r8,1
   84d8c:	3885883a 	add	r2,r7,r2
   84d90:	4000071e 	bne	r8,zero,84db0 <_free_r+0x20c>
   84d94:	81fffe17 	ldw	r7,-8(r16)
   84d98:	31cdc83a 	sub	r6,r6,r7
   84d9c:	30c00317 	ldw	r3,12(r6)
   84da0:	31000217 	ldw	r4,8(r6)
   84da4:	11c5883a 	add	r2,r2,r7
   84da8:	20c00315 	stw	r3,12(r4)
   84dac:	19000215 	stw	r4,8(r3)
   84db0:	00c00274 	movhi	r3,9
   84db4:	18c66704 	addi	r3,r3,6556
   84db8:	11000054 	ori	r4,r2,1
   84dbc:	18c00017 	ldw	r3,0(r3)
   84dc0:	31000115 	stw	r4,4(r6)
   84dc4:	29800215 	stw	r6,8(r5)
   84dc8:	10ffb736 	bltu	r2,r3,84ca8 <_free_r+0x104>
   84dcc:	00800274 	movhi	r2,9
   84dd0:	108d3304 	addi	r2,r2,13516
   84dd4:	11400017 	ldw	r5,0(r2)
   84dd8:	8809883a 	mov	r4,r17
   84ddc:	0084a680 	call	84a68 <_malloc_trim_r>
   84de0:	003fb106 	br	84ca8 <_free_r+0x104>
   84de4:	01000044 	movi	r4,1
   84de8:	003f8606 	br	84c04 <_free_r+0x60>
   84dec:	01000504 	movi	r4,20
   84df0:	20c00b36 	bltu	r4,r3,84e20 <_free_r+0x27c>
   84df4:	190016c4 	addi	r4,r3,91
   84df8:	210f883a 	add	r7,r4,r4
   84dfc:	003f9806 	br	84c60 <_free_r+0xbc>
   84e00:	2009d0ba 	srai	r4,r4,2
   84e04:	00800044 	movi	r2,1
   84e08:	29c00117 	ldw	r7,4(r5)
   84e0c:	1108983a 	sll	r4,r2,r4
   84e10:	1805883a 	mov	r2,r3
   84e14:	21c8b03a 	or	r4,r4,r7
   84e18:	29000115 	stw	r4,4(r5)
   84e1c:	003f9e06 	br	84c98 <_free_r+0xf4>
   84e20:	01001504 	movi	r4,84
   84e24:	20c00436 	bltu	r4,r3,84e38 <_free_r+0x294>
   84e28:	1008d33a 	srli	r4,r2,12
   84e2c:	21001b84 	addi	r4,r4,110
   84e30:	210f883a 	add	r7,r4,r4
   84e34:	003f8a06 	br	84c60 <_free_r+0xbc>
   84e38:	01005504 	movi	r4,340
   84e3c:	20c00436 	bltu	r4,r3,84e50 <_free_r+0x2ac>
   84e40:	1008d3fa 	srli	r4,r2,15
   84e44:	21001dc4 	addi	r4,r4,119
   84e48:	210f883a 	add	r7,r4,r4
   84e4c:	003f8406 	br	84c60 <_free_r+0xbc>
   84e50:	01015504 	movi	r4,1364
   84e54:	20c00436 	bltu	r4,r3,84e68 <_free_r+0x2c4>
   84e58:	1008d4ba 	srli	r4,r2,18
   84e5c:	21001f04 	addi	r4,r4,124
   84e60:	210f883a 	add	r7,r4,r4
   84e64:	003f7e06 	br	84c60 <_free_r+0xbc>
   84e68:	01c03f04 	movi	r7,252
   84e6c:	01001f84 	movi	r4,126
   84e70:	003f7b06 	br	84c60 <_free_r+0xbc>

00084e74 <__sfvwrite_r>:
   84e74:	30800217 	ldw	r2,8(r6)
   84e78:	defff404 	addi	sp,sp,-48
   84e7c:	dcc00515 	stw	r19,20(sp)
   84e80:	dfc00b15 	stw	ra,44(sp)
   84e84:	df000a15 	stw	fp,40(sp)
   84e88:	ddc00915 	stw	r23,36(sp)
   84e8c:	dd800815 	stw	r22,32(sp)
   84e90:	dd400715 	stw	r21,28(sp)
   84e94:	dd000615 	stw	r20,24(sp)
   84e98:	dc800415 	stw	r18,16(sp)
   84e9c:	dc400315 	stw	r17,12(sp)
   84ea0:	dc000215 	stw	r16,8(sp)
   84ea4:	3027883a 	mov	r19,r6
   84ea8:	10001d26 	beq	r2,zero,84f20 <__sfvwrite_r+0xac>
   84eac:	2880030b 	ldhu	r2,12(r5)
   84eb0:	202b883a 	mov	r21,r4
   84eb4:	2821883a 	mov	r16,r5
   84eb8:	10c0020c 	andi	r3,r2,8
   84ebc:	18002526 	beq	r3,zero,84f54 <__sfvwrite_r+0xe0>
   84ec0:	28c00417 	ldw	r3,16(r5)
   84ec4:	18002326 	beq	r3,zero,84f54 <__sfvwrite_r+0xe0>
   84ec8:	10c0008c 	andi	r3,r2,2
   84ecc:	9c400017 	ldw	r17,0(r19)
   84ed0:	18002826 	beq	r3,zero,84f74 <__sfvwrite_r+0x100>
   84ed4:	0029883a 	mov	r20,zero
   84ed8:	0025883a 	mov	r18,zero
   84edc:	05810004 	movi	r22,1024
   84ee0:	a00d883a 	mov	r6,r20
   84ee4:	a809883a 	mov	r4,r21
   84ee8:	90004726 	beq	r18,zero,85008 <__sfvwrite_r+0x194>
   84eec:	900f883a 	mov	r7,r18
   84ef0:	81400717 	ldw	r5,28(r16)
   84ef4:	b480012e 	bgeu	r22,r18,84efc <__sfvwrite_r+0x88>
   84ef8:	01c10004 	movi	r7,1024
   84efc:	80800917 	ldw	r2,36(r16)
   84f00:	103ee83a 	callr	r2
   84f04:	00804c0e 	bge	zero,r2,85038 <__sfvwrite_r+0x1c4>
   84f08:	98c00217 	ldw	r3,8(r19)
   84f0c:	a0a9883a 	add	r20,r20,r2
   84f10:	90a5c83a 	sub	r18,r18,r2
   84f14:	1885c83a 	sub	r2,r3,r2
   84f18:	98800215 	stw	r2,8(r19)
   84f1c:	103ff01e 	bne	r2,zero,84ee0 <__sfvwrite_r+0x6c>
   84f20:	0005883a 	mov	r2,zero
   84f24:	dfc00b17 	ldw	ra,44(sp)
   84f28:	df000a17 	ldw	fp,40(sp)
   84f2c:	ddc00917 	ldw	r23,36(sp)
   84f30:	dd800817 	ldw	r22,32(sp)
   84f34:	dd400717 	ldw	r21,28(sp)
   84f38:	dd000617 	ldw	r20,24(sp)
   84f3c:	dcc00517 	ldw	r19,20(sp)
   84f40:	dc800417 	ldw	r18,16(sp)
   84f44:	dc400317 	ldw	r17,12(sp)
   84f48:	dc000217 	ldw	r16,8(sp)
   84f4c:	dec00c04 	addi	sp,sp,48
   84f50:	f800283a 	ret
   84f54:	a809883a 	mov	r4,r21
   84f58:	800b883a 	mov	r5,r16
   84f5c:	0082ab40 	call	82ab4 <__swsetup_r>
   84f60:	1000e81e 	bne	r2,zero,85304 <__sfvwrite_r+0x490>
   84f64:	8080030b 	ldhu	r2,12(r16)
   84f68:	9c400017 	ldw	r17,0(r19)
   84f6c:	10c0008c 	andi	r3,r2,2
   84f70:	183fd81e 	bne	r3,zero,84ed4 <__sfvwrite_r+0x60>
   84f74:	10c0004c 	andi	r3,r2,1
   84f78:	002d883a 	mov	r22,zero
   84f7c:	1800331e 	bne	r3,zero,8504c <__sfvwrite_r+0x1d8>
   84f80:	0025883a 	mov	r18,zero
   84f84:	90001c26 	beq	r18,zero,84ff8 <__sfvwrite_r+0x184>
   84f88:	10c0800c 	andi	r3,r2,512
   84f8c:	85000217 	ldw	r20,8(r16)
   84f90:	18006f26 	beq	r3,zero,85150 <__sfvwrite_r+0x2dc>
   84f94:	95008936 	bltu	r18,r20,851bc <__sfvwrite_r+0x348>
   84f98:	10c1200c 	andi	r3,r2,1152
   84f9c:	1800a11e 	bne	r3,zero,85224 <__sfvwrite_r+0x3b0>
   84fa0:	81000017 	ldw	r4,0(r16)
   84fa4:	a02f883a 	mov	r23,r20
   84fa8:	a039883a 	mov	fp,r20
   84fac:	9029883a 	mov	r20,r18
   84fb0:	b00b883a 	mov	r5,r22
   84fb4:	b80d883a 	mov	r6,r23
   84fb8:	00860c00 	call	860c0 <memmove>
   84fbc:	81400217 	ldw	r5,8(r16)
   84fc0:	81000017 	ldw	r4,0(r16)
   84fc4:	9005883a 	mov	r2,r18
   84fc8:	2f39c83a 	sub	fp,r5,fp
   84fcc:	25c7883a 	add	r3,r4,r23
   84fd0:	87000215 	stw	fp,8(r16)
   84fd4:	80c00015 	stw	r3,0(r16)
   84fd8:	98c00217 	ldw	r3,8(r19)
   84fdc:	b0ad883a 	add	r22,r22,r2
   84fe0:	90a5c83a 	sub	r18,r18,r2
   84fe4:	1d29c83a 	sub	r20,r3,r20
   84fe8:	9d000215 	stw	r20,8(r19)
   84fec:	a03fcc26 	beq	r20,zero,84f20 <__sfvwrite_r+0xac>
   84ff0:	8080030b 	ldhu	r2,12(r16)
   84ff4:	903fe41e 	bne	r18,zero,84f88 <__sfvwrite_r+0x114>
   84ff8:	8d800017 	ldw	r22,0(r17)
   84ffc:	8c800117 	ldw	r18,4(r17)
   85000:	8c400204 	addi	r17,r17,8
   85004:	003fdf06 	br	84f84 <__sfvwrite_r+0x110>
   85008:	8d000017 	ldw	r20,0(r17)
   8500c:	8c800117 	ldw	r18,4(r17)
   85010:	8c400204 	addi	r17,r17,8
   85014:	003fb206 	br	84ee0 <__sfvwrite_r+0x6c>
   85018:	00873380 	call	87338 <_realloc_r>
   8501c:	1039883a 	mov	fp,r2
   85020:	10009d1e 	bne	r2,zero,85298 <__sfvwrite_r+0x424>
   85024:	81400417 	ldw	r5,16(r16)
   85028:	a809883a 	mov	r4,r21
   8502c:	0084ba40 	call	84ba4 <_free_r>
   85030:	00800304 	movi	r2,12
   85034:	a8800015 	stw	r2,0(r21)
   85038:	80c0030b 	ldhu	r3,12(r16)
   8503c:	00bfffc4 	movi	r2,-1
   85040:	18c01014 	ori	r3,r3,64
   85044:	80c0030d 	sth	r3,12(r16)
   85048:	003fb606 	br	84f24 <__sfvwrite_r+0xb0>
   8504c:	0007883a 	mov	r3,zero
   85050:	0039883a 	mov	fp,zero
   85054:	0025883a 	mov	r18,zero
   85058:	90001f26 	beq	r18,zero,850d8 <__sfvwrite_r+0x264>
   8505c:	18006826 	beq	r3,zero,85200 <__sfvwrite_r+0x38c>
   85060:	b02f883a 	mov	r23,r22
   85064:	9580012e 	bgeu	r18,r22,8506c <__sfvwrite_r+0x1f8>
   85068:	902f883a 	mov	r23,r18
   8506c:	81000017 	ldw	r4,0(r16)
   85070:	80800417 	ldw	r2,16(r16)
   85074:	b829883a 	mov	r20,r23
   85078:	81800217 	ldw	r6,8(r16)
   8507c:	81c00517 	ldw	r7,20(r16)
   85080:	1100022e 	bgeu	r2,r4,8508c <__sfvwrite_r+0x218>
   85084:	31d1883a 	add	r8,r6,r7
   85088:	45c01816 	blt	r8,r23,850ec <__sfvwrite_r+0x278>
   8508c:	b9c03f16 	blt	r23,r7,8518c <__sfvwrite_r+0x318>
   85090:	80800917 	ldw	r2,36(r16)
   85094:	81400717 	ldw	r5,28(r16)
   85098:	a809883a 	mov	r4,r21
   8509c:	d8c00115 	stw	r3,4(sp)
   850a0:	e00d883a 	mov	r6,fp
   850a4:	103ee83a 	callr	r2
   850a8:	1029883a 	mov	r20,r2
   850ac:	d8c00117 	ldw	r3,4(sp)
   850b0:	00bfe10e 	bge	zero,r2,85038 <__sfvwrite_r+0x1c4>
   850b4:	b52dc83a 	sub	r22,r22,r20
   850b8:	b0001f26 	beq	r22,zero,85138 <__sfvwrite_r+0x2c4>
   850bc:	98800217 	ldw	r2,8(r19)
   850c0:	e539883a 	add	fp,fp,r20
   850c4:	9525c83a 	sub	r18,r18,r20
   850c8:	1529c83a 	sub	r20,r2,r20
   850cc:	9d000215 	stw	r20,8(r19)
   850d0:	a03f9326 	beq	r20,zero,84f20 <__sfvwrite_r+0xac>
   850d4:	903fe11e 	bne	r18,zero,8505c <__sfvwrite_r+0x1e8>
   850d8:	8f000017 	ldw	fp,0(r17)
   850dc:	8c800117 	ldw	r18,4(r17)
   850e0:	0007883a 	mov	r3,zero
   850e4:	8c400204 	addi	r17,r17,8
   850e8:	003fdb06 	br	85058 <__sfvwrite_r+0x1e4>
   850ec:	400d883a 	mov	r6,r8
   850f0:	e00b883a 	mov	r5,fp
   850f4:	d8c00115 	stw	r3,4(sp)
   850f8:	da000015 	stw	r8,0(sp)
   850fc:	00860c00 	call	860c0 <memmove>
   85100:	da000017 	ldw	r8,0(sp)
   85104:	80800017 	ldw	r2,0(r16)
   85108:	a809883a 	mov	r4,r21
   8510c:	800b883a 	mov	r5,r16
   85110:	1205883a 	add	r2,r2,r8
   85114:	80800015 	stw	r2,0(r16)
   85118:	da000015 	stw	r8,0(sp)
   8511c:	00844500 	call	84450 <_fflush_r>
   85120:	d8c00117 	ldw	r3,4(sp)
   85124:	da000017 	ldw	r8,0(sp)
   85128:	103fc31e 	bne	r2,zero,85038 <__sfvwrite_r+0x1c4>
   8512c:	4029883a 	mov	r20,r8
   85130:	b52dc83a 	sub	r22,r22,r20
   85134:	b03fe11e 	bne	r22,zero,850bc <__sfvwrite_r+0x248>
   85138:	a809883a 	mov	r4,r21
   8513c:	800b883a 	mov	r5,r16
   85140:	00844500 	call	84450 <_fflush_r>
   85144:	103fbc1e 	bne	r2,zero,85038 <__sfvwrite_r+0x1c4>
   85148:	0007883a 	mov	r3,zero
   8514c:	003fdb06 	br	850bc <__sfvwrite_r+0x248>
   85150:	81000017 	ldw	r4,0(r16)
   85154:	80800417 	ldw	r2,16(r16)
   85158:	1100012e 	bgeu	r2,r4,85160 <__sfvwrite_r+0x2ec>
   8515c:	a4805836 	bltu	r20,r18,852c0 <__sfvwrite_r+0x44c>
   85160:	81c00517 	ldw	r7,20(r16)
   85164:	91c01a36 	bltu	r18,r7,851d0 <__sfvwrite_r+0x35c>
   85168:	80800917 	ldw	r2,36(r16)
   8516c:	81400717 	ldw	r5,28(r16)
   85170:	a809883a 	mov	r4,r21
   85174:	b00d883a 	mov	r6,r22
   85178:	103ee83a 	callr	r2
   8517c:	1029883a 	mov	r20,r2
   85180:	00bfad0e 	bge	zero,r2,85038 <__sfvwrite_r+0x1c4>
   85184:	a005883a 	mov	r2,r20
   85188:	003f9306 	br	84fd8 <__sfvwrite_r+0x164>
   8518c:	b80d883a 	mov	r6,r23
   85190:	e00b883a 	mov	r5,fp
   85194:	d8c00115 	stw	r3,4(sp)
   85198:	00860c00 	call	860c0 <memmove>
   8519c:	80800217 	ldw	r2,8(r16)
   851a0:	81000017 	ldw	r4,0(r16)
   851a4:	d8c00117 	ldw	r3,4(sp)
   851a8:	15c5c83a 	sub	r2,r2,r23
   851ac:	25ef883a 	add	r23,r4,r23
   851b0:	80800215 	stw	r2,8(r16)
   851b4:	85c00015 	stw	r23,0(r16)
   851b8:	003fbe06 	br	850b4 <__sfvwrite_r+0x240>
   851bc:	81000017 	ldw	r4,0(r16)
   851c0:	9039883a 	mov	fp,r18
   851c4:	9029883a 	mov	r20,r18
   851c8:	902f883a 	mov	r23,r18
   851cc:	003f7806 	br	84fb0 <__sfvwrite_r+0x13c>
   851d0:	b00b883a 	mov	r5,r22
   851d4:	900d883a 	mov	r6,r18
   851d8:	00860c00 	call	860c0 <memmove>
   851dc:	80c00217 	ldw	r3,8(r16)
   851e0:	80800017 	ldw	r2,0(r16)
   851e4:	9029883a 	mov	r20,r18
   851e8:	1c87c83a 	sub	r3,r3,r18
   851ec:	1485883a 	add	r2,r2,r18
   851f0:	80800015 	stw	r2,0(r16)
   851f4:	80c00215 	stw	r3,8(r16)
   851f8:	9005883a 	mov	r2,r18
   851fc:	003f7606 	br	84fd8 <__sfvwrite_r+0x164>
   85200:	e009883a 	mov	r4,fp
   85204:	01400284 	movi	r5,10
   85208:	900d883a 	mov	r6,r18
   8520c:	0085ecc0 	call	85ecc <memchr>
   85210:	10003926 	beq	r2,zero,852f8 <__sfvwrite_r+0x484>
   85214:	15800044 	addi	r22,r2,1
   85218:	b72dc83a 	sub	r22,r22,fp
   8521c:	00c00044 	movi	r3,1
   85220:	003f8f06 	br	85060 <__sfvwrite_r+0x1ec>
   85224:	81000517 	ldw	r4,20(r16)
   85228:	81400417 	ldw	r5,16(r16)
   8522c:	80c00017 	ldw	r3,0(r16)
   85230:	210d883a 	add	r6,r4,r4
   85234:	3109883a 	add	r4,r6,r4
   85238:	2028d7fa 	srli	r20,r4,31
   8523c:	196fc83a 	sub	r23,r3,r5
   85240:	b9800044 	addi	r6,r23,1
   85244:	a109883a 	add	r4,r20,r4
   85248:	2029d07a 	srai	r20,r4,1
   8524c:	348d883a 	add	r6,r6,r18
   85250:	a180272e 	bgeu	r20,r6,852f0 <__sfvwrite_r+0x47c>
   85254:	3029883a 	mov	r20,r6
   85258:	1081000c 	andi	r2,r2,1024
   8525c:	a809883a 	mov	r4,r21
   85260:	103f6d26 	beq	r2,zero,85018 <__sfvwrite_r+0x1a4>
   85264:	300b883a 	mov	r5,r6
   85268:	00857080 	call	85708 <_malloc_r>
   8526c:	1039883a 	mov	fp,r2
   85270:	103f6f26 	beq	r2,zero,85030 <__sfvwrite_r+0x1bc>
   85274:	81400417 	ldw	r5,16(r16)
   85278:	1009883a 	mov	r4,r2
   8527c:	b80d883a 	mov	r6,r23
   85280:	0085fb40 	call	85fb4 <memcpy>
   85284:	8080030b 	ldhu	r2,12(r16)
   85288:	00fedfc4 	movi	r3,-1153
   8528c:	10c4703a 	and	r2,r2,r3
   85290:	10802014 	ori	r2,r2,128
   85294:	8080030d 	sth	r2,12(r16)
   85298:	e5c9883a 	add	r4,fp,r23
   8529c:	a5c7c83a 	sub	r3,r20,r23
   852a0:	87000415 	stw	fp,16(r16)
   852a4:	85000515 	stw	r20,20(r16)
   852a8:	81000015 	stw	r4,0(r16)
   852ac:	9039883a 	mov	fp,r18
   852b0:	80c00215 	stw	r3,8(r16)
   852b4:	9029883a 	mov	r20,r18
   852b8:	902f883a 	mov	r23,r18
   852bc:	003f3c06 	br	84fb0 <__sfvwrite_r+0x13c>
   852c0:	b00b883a 	mov	r5,r22
   852c4:	a00d883a 	mov	r6,r20
   852c8:	00860c00 	call	860c0 <memmove>
   852cc:	80800017 	ldw	r2,0(r16)
   852d0:	a809883a 	mov	r4,r21
   852d4:	800b883a 	mov	r5,r16
   852d8:	1505883a 	add	r2,r2,r20
   852dc:	80800015 	stw	r2,0(r16)
   852e0:	00844500 	call	84450 <_fflush_r>
   852e4:	103f541e 	bne	r2,zero,85038 <__sfvwrite_r+0x1c4>
   852e8:	a005883a 	mov	r2,r20
   852ec:	003f3a06 	br	84fd8 <__sfvwrite_r+0x164>
   852f0:	a00d883a 	mov	r6,r20
   852f4:	003fd806 	br	85258 <__sfvwrite_r+0x3e4>
   852f8:	95800044 	addi	r22,r18,1
   852fc:	00c00044 	movi	r3,1
   85300:	003f5706 	br	85060 <__sfvwrite_r+0x1ec>
   85304:	80c0030b 	ldhu	r3,12(r16)
   85308:	00bfffc4 	movi	r2,-1
   8530c:	18c01014 	ori	r3,r3,64
   85310:	80c0030d 	sth	r3,12(r16)
   85314:	00c00244 	movi	r3,9
   85318:	a8c00015 	stw	r3,0(r21)
   8531c:	003f0106 	br	84f24 <__sfvwrite_r+0xb0>

00085320 <_fwalk>:
   85320:	defff904 	addi	sp,sp,-28
   85324:	dcc00315 	stw	r19,12(sp)
   85328:	24c0b804 	addi	r19,r4,736
   8532c:	dd400515 	stw	r21,20(sp)
   85330:	dd000415 	stw	r20,16(sp)
   85334:	dfc00615 	stw	ra,24(sp)
   85338:	dc800215 	stw	r18,8(sp)
   8533c:	dc400115 	stw	r17,4(sp)
   85340:	dc000015 	stw	r16,0(sp)
   85344:	282b883a 	mov	r21,r5
   85348:	0029883a 	mov	r20,zero
   8534c:	0084a280 	call	84a28 <__sfp_lock_acquire>
   85350:	98001226 	beq	r19,zero,8539c <_fwalk+0x7c>
   85354:	04bfffc4 	movi	r18,-1
   85358:	9c400117 	ldw	r17,4(r19)
   8535c:	9c000217 	ldw	r16,8(r19)
   85360:	8c7fffc4 	addi	r17,r17,-1
   85364:	88000b16 	blt	r17,zero,85394 <_fwalk+0x74>
   85368:	84000304 	addi	r16,r16,12
   8536c:	80c0000f 	ldh	r3,0(r16)
   85370:	8c7fffc4 	addi	r17,r17,-1
   85374:	813ffd04 	addi	r4,r16,-12
   85378:	18000426 	beq	r3,zero,8538c <_fwalk+0x6c>
   8537c:	80c0008f 	ldh	r3,2(r16)
   85380:	1c800226 	beq	r3,r18,8538c <_fwalk+0x6c>
   85384:	a83ee83a 	callr	r21
   85388:	a0a8b03a 	or	r20,r20,r2
   8538c:	84001a04 	addi	r16,r16,104
   85390:	8cbff61e 	bne	r17,r18,8536c <_fwalk+0x4c>
   85394:	9cc00017 	ldw	r19,0(r19)
   85398:	983fef1e 	bne	r19,zero,85358 <_fwalk+0x38>
   8539c:	0084a2c0 	call	84a2c <__sfp_lock_release>
   853a0:	a005883a 	mov	r2,r20
   853a4:	dfc00617 	ldw	ra,24(sp)
   853a8:	dd400517 	ldw	r21,20(sp)
   853ac:	dd000417 	ldw	r20,16(sp)
   853b0:	dcc00317 	ldw	r19,12(sp)
   853b4:	dc800217 	ldw	r18,8(sp)
   853b8:	dc400117 	ldw	r17,4(sp)
   853bc:	dc000017 	ldw	r16,0(sp)
   853c0:	dec00704 	addi	sp,sp,28
   853c4:	f800283a 	ret

000853c8 <_fwalk_reent>:
   853c8:	defff804 	addi	sp,sp,-32
   853cc:	dcc00315 	stw	r19,12(sp)
   853d0:	24c0b804 	addi	r19,r4,736
   853d4:	dd800615 	stw	r22,24(sp)
   853d8:	dd400515 	stw	r21,20(sp)
   853dc:	dd000415 	stw	r20,16(sp)
   853e0:	dfc00715 	stw	ra,28(sp)
   853e4:	dc800215 	stw	r18,8(sp)
   853e8:	dc400115 	stw	r17,4(sp)
   853ec:	dc000015 	stw	r16,0(sp)
   853f0:	2029883a 	mov	r20,r4
   853f4:	282b883a 	mov	r21,r5
   853f8:	002d883a 	mov	r22,zero
   853fc:	0084a280 	call	84a28 <__sfp_lock_acquire>
   85400:	98001326 	beq	r19,zero,85450 <_fwalk_reent+0x88>
   85404:	04bfffc4 	movi	r18,-1
   85408:	9c400117 	ldw	r17,4(r19)
   8540c:	9c000217 	ldw	r16,8(r19)
   85410:	8c7fffc4 	addi	r17,r17,-1
   85414:	88000c16 	blt	r17,zero,85448 <_fwalk_reent+0x80>
   85418:	84000304 	addi	r16,r16,12
   8541c:	80c0000f 	ldh	r3,0(r16)
   85420:	8c7fffc4 	addi	r17,r17,-1
   85424:	817ffd04 	addi	r5,r16,-12
   85428:	18000526 	beq	r3,zero,85440 <_fwalk_reent+0x78>
   8542c:	80c0008f 	ldh	r3,2(r16)
   85430:	a009883a 	mov	r4,r20
   85434:	1c800226 	beq	r3,r18,85440 <_fwalk_reent+0x78>
   85438:	a83ee83a 	callr	r21
   8543c:	b0acb03a 	or	r22,r22,r2
   85440:	84001a04 	addi	r16,r16,104
   85444:	8cbff51e 	bne	r17,r18,8541c <_fwalk_reent+0x54>
   85448:	9cc00017 	ldw	r19,0(r19)
   8544c:	983fee1e 	bne	r19,zero,85408 <_fwalk_reent+0x40>
   85450:	0084a2c0 	call	84a2c <__sfp_lock_release>
   85454:	b005883a 	mov	r2,r22
   85458:	dfc00717 	ldw	ra,28(sp)
   8545c:	dd800617 	ldw	r22,24(sp)
   85460:	dd400517 	ldw	r21,20(sp)
   85464:	dd000417 	ldw	r20,16(sp)
   85468:	dcc00317 	ldw	r19,12(sp)
   8546c:	dc800217 	ldw	r18,8(sp)
   85470:	dc400117 	ldw	r17,4(sp)
   85474:	dc000017 	ldw	r16,0(sp)
   85478:	dec00804 	addi	sp,sp,32
   8547c:	f800283a 	ret

00085480 <_setlocale_r>:
   85480:	defffe04 	addi	sp,sp,-8
   85484:	dc000015 	stw	r16,0(sp)
   85488:	dfc00115 	stw	ra,4(sp)
   8548c:	3021883a 	mov	r16,r6
   85490:	30000526 	beq	r6,zero,854a8 <_setlocale_r+0x28>
   85494:	3009883a 	mov	r4,r6
   85498:	01400274 	movhi	r5,9
   8549c:	297f1904 	addi	r5,r5,-924
   854a0:	0087c980 	call	87c98 <strcmp>
   854a4:	1000061e 	bne	r2,zero,854c0 <_setlocale_r+0x40>
   854a8:	00800274 	movhi	r2,9
   854ac:	10befa04 	addi	r2,r2,-1048
   854b0:	dfc00117 	ldw	ra,4(sp)
   854b4:	dc000017 	ldw	r16,0(sp)
   854b8:	dec00204 	addi	sp,sp,8
   854bc:	f800283a 	ret
   854c0:	8009883a 	mov	r4,r16
   854c4:	01400274 	movhi	r5,9
   854c8:	297efa04 	addi	r5,r5,-1048
   854cc:	0087c980 	call	87c98 <strcmp>
   854d0:	103ff526 	beq	r2,zero,854a8 <_setlocale_r+0x28>
   854d4:	8009883a 	mov	r4,r16
   854d8:	01400274 	movhi	r5,9
   854dc:	297f0404 	addi	r5,r5,-1008
   854e0:	0087c980 	call	87c98 <strcmp>
   854e4:	103ff026 	beq	r2,zero,854a8 <_setlocale_r+0x28>
   854e8:	0005883a 	mov	r2,zero
   854ec:	003ff006 	br	854b0 <_setlocale_r+0x30>

000854f0 <__locale_charset>:
   854f0:	00800274 	movhi	r2,9
   854f4:	1080c904 	addi	r2,r2,804
   854f8:	f800283a 	ret

000854fc <__locale_mb_cur_max>:
   854fc:	00800274 	movhi	r2,9
   85500:	10866504 	addi	r2,r2,6548
   85504:	10800017 	ldw	r2,0(r2)
   85508:	f800283a 	ret

0008550c <__locale_msgcharset>:
   8550c:	00800274 	movhi	r2,9
   85510:	1080c104 	addi	r2,r2,772
   85514:	f800283a 	ret

00085518 <__locale_cjk_lang>:
   85518:	0005883a 	mov	r2,zero
   8551c:	f800283a 	ret

00085520 <_localeconv_r>:
   85520:	00800274 	movhi	r2,9
   85524:	1080d104 	addi	r2,r2,836
   85528:	f800283a 	ret

0008552c <setlocale>:
   8552c:	00c00274 	movhi	r3,9
   85530:	18c66404 	addi	r3,r3,6544
   85534:	2005883a 	mov	r2,r4
   85538:	19000017 	ldw	r4,0(r3)
   8553c:	280d883a 	mov	r6,r5
   85540:	100b883a 	mov	r5,r2
   85544:	00854801 	jmpi	85480 <_setlocale_r>

00085548 <localeconv>:
   85548:	00800274 	movhi	r2,9
   8554c:	1080d104 	addi	r2,r2,836
   85550:	f800283a 	ret

00085554 <__smakebuf_r>:
   85554:	2880030b 	ldhu	r2,12(r5)
   85558:	deffec04 	addi	sp,sp,-80
   8555c:	dc000f15 	stw	r16,60(sp)
   85560:	dfc01315 	stw	ra,76(sp)
   85564:	dcc01215 	stw	r19,72(sp)
   85568:	dc801115 	stw	r18,68(sp)
   8556c:	dc401015 	stw	r17,64(sp)
   85570:	10c0008c 	andi	r3,r2,2
   85574:	2821883a 	mov	r16,r5
   85578:	18003a1e 	bne	r3,zero,85664 <__smakebuf_r+0x110>
   8557c:	2940038f 	ldh	r5,14(r5)
   85580:	2023883a 	mov	r17,r4
   85584:	28001b16 	blt	r5,zero,855f4 <__smakebuf_r+0xa0>
   85588:	d80d883a 	mov	r6,sp
   8558c:	008979c0 	call	8979c <_fstat_r>
   85590:	10001716 	blt	r2,zero,855f0 <__smakebuf_r+0x9c>
   85594:	d8800117 	ldw	r2,4(sp)
   85598:	00e00014 	movui	r3,32768
   8559c:	10bc000c 	andi	r2,r2,61440
   855a0:	10c03e26 	beq	r2,r3,8569c <__smakebuf_r+0x148>
   855a4:	80c0030b 	ldhu	r3,12(r16)
   855a8:	18c20014 	ori	r3,r3,2048
   855ac:	80c0030d 	sth	r3,12(r16)
   855b0:	00c80004 	movi	r3,8192
   855b4:	10c0431e 	bne	r2,r3,856c4 <__smakebuf_r+0x170>
   855b8:	8140038f 	ldh	r5,14(r16)
   855bc:	8809883a 	mov	r4,r17
   855c0:	00898040 	call	89804 <_isatty_r>
   855c4:	10004d26 	beq	r2,zero,856fc <__smakebuf_r+0x1a8>
   855c8:	80c0030b 	ldhu	r3,12(r16)
   855cc:	04c00044 	movi	r19,1
   855d0:	808010c4 	addi	r2,r16,67
   855d4:	1cc6b03a 	or	r3,r3,r19
   855d8:	80c0030d 	sth	r3,12(r16)
   855dc:	80800015 	stw	r2,0(r16)
   855e0:	80800415 	stw	r2,16(r16)
   855e4:	84c00515 	stw	r19,20(r16)
   855e8:	04810004 	movi	r18,1024
   855ec:	00000706 	br	8560c <__smakebuf_r+0xb8>
   855f0:	8080030b 	ldhu	r2,12(r16)
   855f4:	10c0200c 	andi	r3,r2,128
   855f8:	1800261e 	bne	r3,zero,85694 <__smakebuf_r+0x140>
   855fc:	04810004 	movi	r18,1024
   85600:	10820014 	ori	r2,r2,2048
   85604:	8080030d 	sth	r2,12(r16)
   85608:	0027883a 	mov	r19,zero
   8560c:	8809883a 	mov	r4,r17
   85610:	900b883a 	mov	r5,r18
   85614:	00857080 	call	85708 <_malloc_r>
   85618:	10002d26 	beq	r2,zero,856d0 <__smakebuf_r+0x17c>
   8561c:	80c0030b 	ldhu	r3,12(r16)
   85620:	01000234 	movhi	r4,8
   85624:	2111b504 	addi	r4,r4,18132
   85628:	89000f15 	stw	r4,60(r17)
   8562c:	18c02014 	ori	r3,r3,128
   85630:	80c0030d 	sth	r3,12(r16)
   85634:	80800015 	stw	r2,0(r16)
   85638:	80800415 	stw	r2,16(r16)
   8563c:	84800515 	stw	r18,20(r16)
   85640:	98000d26 	beq	r19,zero,85678 <__smakebuf_r+0x124>
   85644:	8140038f 	ldh	r5,14(r16)
   85648:	8809883a 	mov	r4,r17
   8564c:	00898040 	call	89804 <_isatty_r>
   85650:	10000926 	beq	r2,zero,85678 <__smakebuf_r+0x124>
   85654:	8080030b 	ldhu	r2,12(r16)
   85658:	10800054 	ori	r2,r2,1
   8565c:	8080030d 	sth	r2,12(r16)
   85660:	00000506 	br	85678 <__smakebuf_r+0x124>
   85664:	288010c4 	addi	r2,r5,67
   85668:	28800015 	stw	r2,0(r5)
   8566c:	28800415 	stw	r2,16(r5)
   85670:	00800044 	movi	r2,1
   85674:	28800515 	stw	r2,20(r5)
   85678:	dfc01317 	ldw	ra,76(sp)
   8567c:	dcc01217 	ldw	r19,72(sp)
   85680:	dc801117 	ldw	r18,68(sp)
   85684:	dc401017 	ldw	r17,64(sp)
   85688:	dc000f17 	ldw	r16,60(sp)
   8568c:	dec01404 	addi	sp,sp,80
   85690:	f800283a 	ret
   85694:	04801004 	movi	r18,64
   85698:	003fd906 	br	85600 <__smakebuf_r+0xac>
   8569c:	81000a17 	ldw	r4,40(r16)
   856a0:	00c00234 	movhi	r3,8
   856a4:	18df0d04 	addi	r3,r3,31796
   856a8:	20ffbe1e 	bne	r4,r3,855a4 <__smakebuf_r+0x50>
   856ac:	80c0030b 	ldhu	r3,12(r16)
   856b0:	01010004 	movi	r4,1024
   856b4:	81001315 	stw	r4,76(r16)
   856b8:	1906b03a 	or	r3,r3,r4
   856bc:	80c0030d 	sth	r3,12(r16)
   856c0:	003fbb06 	br	855b0 <__smakebuf_r+0x5c>
   856c4:	0027883a 	mov	r19,zero
   856c8:	04810004 	movi	r18,1024
   856cc:	003fcf06 	br	8560c <__smakebuf_r+0xb8>
   856d0:	8080030b 	ldhu	r2,12(r16)
   856d4:	10c0800c 	andi	r3,r2,512
   856d8:	183fe71e 	bne	r3,zero,85678 <__smakebuf_r+0x124>
   856dc:	10800094 	ori	r2,r2,2
   856e0:	80c010c4 	addi	r3,r16,67
   856e4:	8080030d 	sth	r2,12(r16)
   856e8:	00800044 	movi	r2,1
   856ec:	80c00015 	stw	r3,0(r16)
   856f0:	80c00415 	stw	r3,16(r16)
   856f4:	80800515 	stw	r2,20(r16)
   856f8:	003fdf06 	br	85678 <__smakebuf_r+0x124>
   856fc:	04c00044 	movi	r19,1
   85700:	04810004 	movi	r18,1024
   85704:	003fc106 	br	8560c <__smakebuf_r+0xb8>

00085708 <_malloc_r>:
   85708:	defff504 	addi	sp,sp,-44
   8570c:	dc800315 	stw	r18,12(sp)
   85710:	dfc00a15 	stw	ra,40(sp)
   85714:	df000915 	stw	fp,36(sp)
   85718:	ddc00815 	stw	r23,32(sp)
   8571c:	dd800715 	stw	r22,28(sp)
   85720:	dd400615 	stw	r21,24(sp)
   85724:	dd000515 	stw	r20,20(sp)
   85728:	dcc00415 	stw	r19,16(sp)
   8572c:	dc400215 	stw	r17,8(sp)
   85730:	dc000115 	stw	r16,4(sp)
   85734:	288002c4 	addi	r2,r5,11
   85738:	00c00584 	movi	r3,22
   8573c:	2025883a 	mov	r18,r4
   85740:	18802b2e 	bgeu	r3,r2,857f0 <_malloc_r+0xe8>
   85744:	047ffe04 	movi	r17,-8
   85748:	1462703a 	and	r17,r2,r17
   8574c:	88002a16 	blt	r17,zero,857f8 <_malloc_r+0xf0>
   85750:	89402936 	bltu	r17,r5,857f8 <_malloc_r+0xf0>
   85754:	9009883a 	mov	r4,r18
   85758:	008d7f00 	call	8d7f0 <__malloc_lock>
   8575c:	00807dc4 	movi	r2,503
   85760:	14402936 	bltu	r2,r17,85808 <_malloc_r+0x100>
   85764:	8808d0fa 	srli	r4,r17,3
   85768:	04c00274 	movhi	r19,9
   8576c:	9cc0df04 	addi	r19,r19,892
   85770:	2105883a 	add	r2,r4,r4
   85774:	1085883a 	add	r2,r2,r2
   85778:	1085883a 	add	r2,r2,r2
   8577c:	9885883a 	add	r2,r19,r2
   85780:	14000317 	ldw	r16,12(r2)
   85784:	80815226 	beq	r16,r2,85cd0 <_malloc_r+0x5c8>
   85788:	81000117 	ldw	r4,4(r16)
   8578c:	00bfff04 	movi	r2,-4
   85790:	80c00317 	ldw	r3,12(r16)
   85794:	2084703a 	and	r2,r4,r2
   85798:	8085883a 	add	r2,r16,r2
   8579c:	81000217 	ldw	r4,8(r16)
   857a0:	11400117 	ldw	r5,4(r2)
   857a4:	20c00315 	stw	r3,12(r4)
   857a8:	19000215 	stw	r4,8(r3)
   857ac:	28c00054 	ori	r3,r5,1
   857b0:	10c00115 	stw	r3,4(r2)
   857b4:	9009883a 	mov	r4,r18
   857b8:	008d8100 	call	8d810 <__malloc_unlock>
   857bc:	80800204 	addi	r2,r16,8
   857c0:	dfc00a17 	ldw	ra,40(sp)
   857c4:	df000917 	ldw	fp,36(sp)
   857c8:	ddc00817 	ldw	r23,32(sp)
   857cc:	dd800717 	ldw	r22,28(sp)
   857d0:	dd400617 	ldw	r21,24(sp)
   857d4:	dd000517 	ldw	r20,20(sp)
   857d8:	dcc00417 	ldw	r19,16(sp)
   857dc:	dc800317 	ldw	r18,12(sp)
   857e0:	dc400217 	ldw	r17,8(sp)
   857e4:	dc000117 	ldw	r16,4(sp)
   857e8:	dec00b04 	addi	sp,sp,44
   857ec:	f800283a 	ret
   857f0:	04400404 	movi	r17,16
   857f4:	897fd72e 	bgeu	r17,r5,85754 <_malloc_r+0x4c>
   857f8:	00800304 	movi	r2,12
   857fc:	90800015 	stw	r2,0(r18)
   85800:	0005883a 	mov	r2,zero
   85804:	003fee06 	br	857c0 <_malloc_r+0xb8>
   85808:	8808d27a 	srli	r4,r17,9
   8580c:	20007126 	beq	r4,zero,859d4 <_malloc_r+0x2cc>
   85810:	00800104 	movi	r2,4
   85814:	1100f536 	bltu	r2,r4,85bec <_malloc_r+0x4e4>
   85818:	8808d1ba 	srli	r4,r17,6
   8581c:	21000e04 	addi	r4,r4,56
   85820:	210b883a 	add	r5,r4,r4
   85824:	294b883a 	add	r5,r5,r5
   85828:	294b883a 	add	r5,r5,r5
   8582c:	04c00274 	movhi	r19,9
   85830:	9cc0df04 	addi	r19,r19,892
   85834:	994b883a 	add	r5,r19,r5
   85838:	2c000317 	ldw	r16,12(r5)
   8583c:	2c000e26 	beq	r5,r16,85878 <_malloc_r+0x170>
   85840:	80c00117 	ldw	r3,4(r16)
   85844:	01ffff04 	movi	r7,-4
   85848:	018003c4 	movi	r6,15
   8584c:	19c6703a 	and	r3,r3,r7
   85850:	1c45c83a 	sub	r2,r3,r17
   85854:	30800716 	blt	r6,r2,85874 <_malloc_r+0x16c>
   85858:	1000610e 	bge	r2,zero,859e0 <_malloc_r+0x2d8>
   8585c:	84000317 	ldw	r16,12(r16)
   85860:	2c000526 	beq	r5,r16,85878 <_malloc_r+0x170>
   85864:	80c00117 	ldw	r3,4(r16)
   85868:	19c6703a 	and	r3,r3,r7
   8586c:	1c45c83a 	sub	r2,r3,r17
   85870:	30bff90e 	bge	r6,r2,85858 <_malloc_r+0x150>
   85874:	213fffc4 	addi	r4,r4,-1
   85878:	21000044 	addi	r4,r4,1
   8587c:	9c000417 	ldw	r16,16(r19)
   85880:	00c00274 	movhi	r3,9
   85884:	18c0df04 	addi	r3,r3,892
   85888:	1a400204 	addi	r9,r3,8
   8588c:	82410926 	beq	r16,r9,85cb4 <_malloc_r+0x5ac>
   85890:	81400117 	ldw	r5,4(r16)
   85894:	00bfff04 	movi	r2,-4
   85898:	018003c4 	movi	r6,15
   8589c:	2884703a 	and	r2,r5,r2
   858a0:	144bc83a 	sub	r5,r2,r17
   858a4:	3140f416 	blt	r6,r5,85c78 <_malloc_r+0x570>
   858a8:	1a400515 	stw	r9,20(r3)
   858ac:	1a400415 	stw	r9,16(r3)
   858b0:	2800570e 	bge	r5,zero,85a10 <_malloc_r+0x308>
   858b4:	01407fc4 	movi	r5,511
   858b8:	2880d436 	bltu	r5,r2,85c0c <_malloc_r+0x504>
   858bc:	1004d0fa 	srli	r2,r2,3
   858c0:	02000044 	movi	r8,1
   858c4:	19c00117 	ldw	r7,4(r3)
   858c8:	108b883a 	add	r5,r2,r2
   858cc:	294b883a 	add	r5,r5,r5
   858d0:	1005d0ba 	srai	r2,r2,2
   858d4:	294b883a 	add	r5,r5,r5
   858d8:	28cb883a 	add	r5,r5,r3
   858dc:	29800217 	ldw	r6,8(r5)
   858e0:	4084983a 	sll	r2,r8,r2
   858e4:	81400315 	stw	r5,12(r16)
   858e8:	81800215 	stw	r6,8(r16)
   858ec:	11c4b03a 	or	r2,r2,r7
   858f0:	2c000215 	stw	r16,8(r5)
   858f4:	18800115 	stw	r2,4(r3)
   858f8:	34000315 	stw	r16,12(r6)
   858fc:	2007d0ba 	srai	r3,r4,2
   85900:	01400044 	movi	r5,1
   85904:	28ca983a 	sll	r5,r5,r3
   85908:	11404936 	bltu	r2,r5,85a30 <_malloc_r+0x328>
   8590c:	1146703a 	and	r3,r2,r5
   85910:	18000a1e 	bne	r3,zero,8593c <_malloc_r+0x234>
   85914:	00ffff04 	movi	r3,-4
   85918:	294b883a 	add	r5,r5,r5
   8591c:	20c8703a 	and	r4,r4,r3
   85920:	1146703a 	and	r3,r2,r5
   85924:	21000104 	addi	r4,r4,4
   85928:	1800041e 	bne	r3,zero,8593c <_malloc_r+0x234>
   8592c:	294b883a 	add	r5,r5,r5
   85930:	1146703a 	and	r3,r2,r5
   85934:	21000104 	addi	r4,r4,4
   85938:	183ffc26 	beq	r3,zero,8592c <_malloc_r+0x224>
   8593c:	023fff04 	movi	r8,-4
   85940:	01c003c4 	movi	r7,15
   85944:	2105883a 	add	r2,r4,r4
   85948:	1085883a 	add	r2,r2,r2
   8594c:	1085883a 	add	r2,r2,r2
   85950:	9897883a 	add	r11,r19,r2
   85954:	5a800304 	addi	r10,r11,12
   85958:	2019883a 	mov	r12,r4
   8595c:	54000017 	ldw	r16,0(r10)
   85960:	51bffd04 	addi	r6,r10,-12
   85964:	8180041e 	bne	r16,r6,85978 <_malloc_r+0x270>
   85968:	0000d406 	br	85cbc <_malloc_r+0x5b4>
   8596c:	1000dd0e 	bge	r2,zero,85ce4 <_malloc_r+0x5dc>
   85970:	84000317 	ldw	r16,12(r16)
   85974:	8180d126 	beq	r16,r6,85cbc <_malloc_r+0x5b4>
   85978:	80c00117 	ldw	r3,4(r16)
   8597c:	1a06703a 	and	r3,r3,r8
   85980:	1c45c83a 	sub	r2,r3,r17
   85984:	38bff90e 	bge	r7,r2,8596c <_malloc_r+0x264>
   85988:	80c00317 	ldw	r3,12(r16)
   8598c:	81000217 	ldw	r4,8(r16)
   85990:	89400054 	ori	r5,r17,1
   85994:	81400115 	stw	r5,4(r16)
   85998:	20c00315 	stw	r3,12(r4)
   8599c:	19000215 	stw	r4,8(r3)
   859a0:	8463883a 	add	r17,r16,r17
   859a4:	9c400515 	stw	r17,20(r19)
   859a8:	9c400415 	stw	r17,16(r19)
   859ac:	10c00054 	ori	r3,r2,1
   859b0:	8a400315 	stw	r9,12(r17)
   859b4:	8a400215 	stw	r9,8(r17)
   859b8:	88c00115 	stw	r3,4(r17)
   859bc:	88a3883a 	add	r17,r17,r2
   859c0:	88800015 	stw	r2,0(r17)
   859c4:	9009883a 	mov	r4,r18
   859c8:	008d8100 	call	8d810 <__malloc_unlock>
   859cc:	80800204 	addi	r2,r16,8
   859d0:	003f7b06 	br	857c0 <_malloc_r+0xb8>
   859d4:	01401f84 	movi	r5,126
   859d8:	01000fc4 	movi	r4,63
   859dc:	003f9106 	br	85824 <_malloc_r+0x11c>
   859e0:	80800317 	ldw	r2,12(r16)
   859e4:	81000217 	ldw	r4,8(r16)
   859e8:	80c7883a 	add	r3,r16,r3
   859ec:	19400117 	ldw	r5,4(r3)
   859f0:	20800315 	stw	r2,12(r4)
   859f4:	11000215 	stw	r4,8(r2)
   859f8:	28800054 	ori	r2,r5,1
   859fc:	18800115 	stw	r2,4(r3)
   85a00:	9009883a 	mov	r4,r18
   85a04:	008d8100 	call	8d810 <__malloc_unlock>
   85a08:	80800204 	addi	r2,r16,8
   85a0c:	003f6c06 	br	857c0 <_malloc_r+0xb8>
   85a10:	8085883a 	add	r2,r16,r2
   85a14:	10c00117 	ldw	r3,4(r2)
   85a18:	9009883a 	mov	r4,r18
   85a1c:	18c00054 	ori	r3,r3,1
   85a20:	10c00115 	stw	r3,4(r2)
   85a24:	008d8100 	call	8d810 <__malloc_unlock>
   85a28:	80800204 	addi	r2,r16,8
   85a2c:	003f6406 	br	857c0 <_malloc_r+0xb8>
   85a30:	9c000217 	ldw	r16,8(r19)
   85a34:	00bfff04 	movi	r2,-4
   85a38:	85400117 	ldw	r21,4(r16)
   85a3c:	a8aa703a 	and	r21,r21,r2
   85a40:	ac400336 	bltu	r21,r17,85a50 <_malloc_r+0x348>
   85a44:	ac45c83a 	sub	r2,r21,r17
   85a48:	00c003c4 	movi	r3,15
   85a4c:	18805d16 	blt	r3,r2,85bc4 <_malloc_r+0x4bc>
   85a50:	00800274 	movhi	r2,9
   85a54:	108d3304 	addi	r2,r2,13516
   85a58:	00c00274 	movhi	r3,9
   85a5c:	18c66604 	addi	r3,r3,6552
   85a60:	15c00017 	ldw	r23,0(r2)
   85a64:	19000017 	ldw	r4,0(r3)
   85a68:	00bfffc4 	movi	r2,-1
   85a6c:	8579883a 	add	fp,r16,r21
   85a70:	8def883a 	add	r23,r17,r23
   85a74:	2080e426 	beq	r4,r2,85e08 <_malloc_r+0x700>
   85a78:	bdc403c4 	addi	r23,r23,4111
   85a7c:	00bc0004 	movi	r2,-4096
   85a80:	b8ae703a 	and	r23,r23,r2
   85a84:	9009883a 	mov	r4,r18
   85a88:	b80b883a 	mov	r5,r23
   85a8c:	d8c00015 	stw	r3,0(sp)
   85a90:	0087af80 	call	87af8 <_sbrk_r>
   85a94:	1029883a 	mov	r20,r2
   85a98:	00bfffc4 	movi	r2,-1
   85a9c:	d8c00017 	ldw	r3,0(sp)
   85aa0:	a080a426 	beq	r20,r2,85d34 <_malloc_r+0x62c>
   85aa4:	a700a236 	bltu	r20,fp,85d30 <_malloc_r+0x628>
   85aa8:	05800274 	movhi	r22,9
   85aac:	b58d3c04 	addi	r22,r22,13552
   85ab0:	b0800017 	ldw	r2,0(r22)
   85ab4:	b885883a 	add	r2,r23,r2
   85ab8:	b0800015 	stw	r2,0(r22)
   85abc:	e500da26 	beq	fp,r20,85e28 <_malloc_r+0x720>
   85ac0:	19000017 	ldw	r4,0(r3)
   85ac4:	00ffffc4 	movi	r3,-1
   85ac8:	20c0e426 	beq	r4,r3,85e5c <_malloc_r+0x754>
   85acc:	a739c83a 	sub	fp,r20,fp
   85ad0:	1705883a 	add	r2,r2,fp
   85ad4:	b0800015 	stw	r2,0(r22)
   85ad8:	a08001cc 	andi	r2,r20,7
   85adc:	1000b526 	beq	r2,zero,85db4 <_malloc_r+0x6ac>
   85ae0:	a0a9c83a 	sub	r20,r20,r2
   85ae4:	00c40204 	movi	r3,4104
   85ae8:	a5000204 	addi	r20,r20,8
   85aec:	1885c83a 	sub	r2,r3,r2
   85af0:	a5c7883a 	add	r3,r20,r23
   85af4:	18c3ffcc 	andi	r3,r3,4095
   85af8:	10efc83a 	sub	r23,r2,r3
   85afc:	9009883a 	mov	r4,r18
   85b00:	b80b883a 	mov	r5,r23
   85b04:	0087af80 	call	87af8 <_sbrk_r>
   85b08:	00ffffc4 	movi	r3,-1
   85b0c:	10c0d026 	beq	r2,r3,85e50 <_malloc_r+0x748>
   85b10:	1505c83a 	sub	r2,r2,r20
   85b14:	b887883a 	add	r3,r23,r2
   85b18:	18c00054 	ori	r3,r3,1
   85b1c:	b0800017 	ldw	r2,0(r22)
   85b20:	9d000215 	stw	r20,8(r19)
   85b24:	a0c00115 	stw	r3,4(r20)
   85b28:	b885883a 	add	r2,r23,r2
   85b2c:	b0800015 	stw	r2,0(r22)
   85b30:	84c00e26 	beq	r16,r19,85b6c <_malloc_r+0x464>
   85b34:	00c003c4 	movi	r3,15
   85b38:	1d40a02e 	bgeu	r3,r21,85dbc <_malloc_r+0x6b4>
   85b3c:	81400117 	ldw	r5,4(r16)
   85b40:	ad7ffd04 	addi	r21,r21,-12
   85b44:	013ffe04 	movi	r4,-8
   85b48:	a908703a 	and	r4,r21,r4
   85b4c:	2940004c 	andi	r5,r5,1
   85b50:	214ab03a 	or	r5,r4,r5
   85b54:	81400115 	stw	r5,4(r16)
   85b58:	01800144 	movi	r6,5
   85b5c:	810b883a 	add	r5,r16,r4
   85b60:	29800115 	stw	r6,4(r5)
   85b64:	29800215 	stw	r6,8(r5)
   85b68:	1900c036 	bltu	r3,r4,85e6c <_malloc_r+0x764>
   85b6c:	00c00274 	movhi	r3,9
   85b70:	18cd3204 	addi	r3,r3,13512
   85b74:	19000017 	ldw	r4,0(r3)
   85b78:	2080012e 	bgeu	r4,r2,85b80 <_malloc_r+0x478>
   85b7c:	18800015 	stw	r2,0(r3)
   85b80:	00c00274 	movhi	r3,9
   85b84:	18cd3104 	addi	r3,r3,13508
   85b88:	19000017 	ldw	r4,0(r3)
   85b8c:	9c000217 	ldw	r16,8(r19)
   85b90:	2080012e 	bgeu	r4,r2,85b98 <_malloc_r+0x490>
   85b94:	18800015 	stw	r2,0(r3)
   85b98:	80c00117 	ldw	r3,4(r16)
   85b9c:	00bfff04 	movi	r2,-4
   85ba0:	1886703a 	and	r3,r3,r2
   85ba4:	1c45c83a 	sub	r2,r3,r17
   85ba8:	1c400236 	bltu	r3,r17,85bb4 <_malloc_r+0x4ac>
   85bac:	00c003c4 	movi	r3,15
   85bb0:	18800416 	blt	r3,r2,85bc4 <_malloc_r+0x4bc>
   85bb4:	9009883a 	mov	r4,r18
   85bb8:	008d8100 	call	8d810 <__malloc_unlock>
   85bbc:	0005883a 	mov	r2,zero
   85bc0:	003eff06 	br	857c0 <_malloc_r+0xb8>
   85bc4:	88c00054 	ori	r3,r17,1
   85bc8:	80c00115 	stw	r3,4(r16)
   85bcc:	8463883a 	add	r17,r16,r17
   85bd0:	10800054 	ori	r2,r2,1
   85bd4:	9c400215 	stw	r17,8(r19)
   85bd8:	88800115 	stw	r2,4(r17)
   85bdc:	9009883a 	mov	r4,r18
   85be0:	008d8100 	call	8d810 <__malloc_unlock>
   85be4:	80800204 	addi	r2,r16,8
   85be8:	003ef506 	br	857c0 <_malloc_r+0xb8>
   85bec:	00800504 	movi	r2,20
   85bf0:	1100482e 	bgeu	r2,r4,85d14 <_malloc_r+0x60c>
   85bf4:	00801504 	movi	r2,84
   85bf8:	11006836 	bltu	r2,r4,85d9c <_malloc_r+0x694>
   85bfc:	8808d33a 	srli	r4,r17,12
   85c00:	21001b84 	addi	r4,r4,110
   85c04:	210b883a 	add	r5,r4,r4
   85c08:	003f0606 	br	85824 <_malloc_r+0x11c>
   85c0c:	1006d27a 	srli	r3,r2,9
   85c10:	01400104 	movi	r5,4
   85c14:	28c0422e 	bgeu	r5,r3,85d20 <_malloc_r+0x618>
   85c18:	01400504 	movi	r5,20
   85c1c:	28c07c36 	bltu	r5,r3,85e10 <_malloc_r+0x708>
   85c20:	194016c4 	addi	r5,r3,91
   85c24:	294d883a 	add	r6,r5,r5
   85c28:	318d883a 	add	r6,r6,r6
   85c2c:	318d883a 	add	r6,r6,r6
   85c30:	998d883a 	add	r6,r19,r6
   85c34:	30c00217 	ldw	r3,8(r6)
   85c38:	01c00274 	movhi	r7,9
   85c3c:	39c0df04 	addi	r7,r7,892
   85c40:	19806326 	beq	r3,r6,85dd0 <_malloc_r+0x6c8>
   85c44:	01ffff04 	movi	r7,-4
   85c48:	19400117 	ldw	r5,4(r3)
   85c4c:	29ca703a 	and	r5,r5,r7
   85c50:	1140022e 	bgeu	r2,r5,85c5c <_malloc_r+0x554>
   85c54:	18c00217 	ldw	r3,8(r3)
   85c58:	30fffb1e 	bne	r6,r3,85c48 <_malloc_r+0x540>
   85c5c:	19400317 	ldw	r5,12(r3)
   85c60:	98800117 	ldw	r2,4(r19)
   85c64:	81400315 	stw	r5,12(r16)
   85c68:	80c00215 	stw	r3,8(r16)
   85c6c:	2c000215 	stw	r16,8(r5)
   85c70:	1c000315 	stw	r16,12(r3)
   85c74:	003f2106 	br	858fc <_malloc_r+0x1f4>
   85c78:	88800054 	ori	r2,r17,1
   85c7c:	80800115 	stw	r2,4(r16)
   85c80:	8463883a 	add	r17,r16,r17
   85c84:	1c400515 	stw	r17,20(r3)
   85c88:	1c400415 	stw	r17,16(r3)
   85c8c:	28800054 	ori	r2,r5,1
   85c90:	88800115 	stw	r2,4(r17)
   85c94:	8a400315 	stw	r9,12(r17)
   85c98:	8a400215 	stw	r9,8(r17)
   85c9c:	8963883a 	add	r17,r17,r5
   85ca0:	89400015 	stw	r5,0(r17)
   85ca4:	9009883a 	mov	r4,r18
   85ca8:	008d8100 	call	8d810 <__malloc_unlock>
   85cac:	80800204 	addi	r2,r16,8
   85cb0:	003ec306 	br	857c0 <_malloc_r+0xb8>
   85cb4:	18800117 	ldw	r2,4(r3)
   85cb8:	003f1006 	br	858fc <_malloc_r+0x1f4>
   85cbc:	63000044 	addi	r12,r12,1
   85cc0:	608000cc 	andi	r2,r12,3
   85cc4:	52800204 	addi	r10,r10,8
   85cc8:	103f241e 	bne	r2,zero,8595c <_malloc_r+0x254>
   85ccc:	00002106 	br	85d54 <_malloc_r+0x64c>
   85cd0:	80800204 	addi	r2,r16,8
   85cd4:	84000517 	ldw	r16,20(r16)
   85cd8:	143eab1e 	bne	r2,r16,85788 <_malloc_r+0x80>
   85cdc:	21000084 	addi	r4,r4,2
   85ce0:	003ee606 	br	8587c <_malloc_r+0x174>
   85ce4:	80c7883a 	add	r3,r16,r3
   85ce8:	19400117 	ldw	r5,4(r3)
   85cec:	80800317 	ldw	r2,12(r16)
   85cf0:	81000217 	ldw	r4,8(r16)
   85cf4:	29400054 	ori	r5,r5,1
   85cf8:	19400115 	stw	r5,4(r3)
   85cfc:	20800315 	stw	r2,12(r4)
   85d00:	11000215 	stw	r4,8(r2)
   85d04:	9009883a 	mov	r4,r18
   85d08:	008d8100 	call	8d810 <__malloc_unlock>
   85d0c:	80800204 	addi	r2,r16,8
   85d10:	003eab06 	br	857c0 <_malloc_r+0xb8>
   85d14:	210016c4 	addi	r4,r4,91
   85d18:	210b883a 	add	r5,r4,r4
   85d1c:	003ec106 	br	85824 <_malloc_r+0x11c>
   85d20:	100ad1ba 	srli	r5,r2,6
   85d24:	29400e04 	addi	r5,r5,56
   85d28:	294d883a 	add	r6,r5,r5
   85d2c:	003fbe06 	br	85c28 <_malloc_r+0x520>
   85d30:	84ff5d26 	beq	r16,r19,85aa8 <_malloc_r+0x3a0>
   85d34:	9c000217 	ldw	r16,8(r19)
   85d38:	00bfff04 	movi	r2,-4
   85d3c:	80c00117 	ldw	r3,4(r16)
   85d40:	1886703a 	and	r3,r3,r2
   85d44:	003f9706 	br	85ba4 <_malloc_r+0x49c>
   85d48:	5ac00017 	ldw	r11,0(r11)
   85d4c:	213fffc4 	addi	r4,r4,-1
   85d50:	58805c1e 	bne	r11,r2,85ec4 <_malloc_r+0x7bc>
   85d54:	20c000cc 	andi	r3,r4,3
   85d58:	58bffe04 	addi	r2,r11,-8
   85d5c:	183ffa1e 	bne	r3,zero,85d48 <_malloc_r+0x640>
   85d60:	98800117 	ldw	r2,4(r19)
   85d64:	0146303a 	nor	r3,zero,r5
   85d68:	1884703a 	and	r2,r3,r2
   85d6c:	98800115 	stw	r2,4(r19)
   85d70:	294b883a 	add	r5,r5,r5
   85d74:	117f2e36 	bltu	r2,r5,85a30 <_malloc_r+0x328>
   85d78:	283f2d26 	beq	r5,zero,85a30 <_malloc_r+0x328>
   85d7c:	1146703a 	and	r3,r2,r5
   85d80:	6009883a 	mov	r4,r12
   85d84:	183eef1e 	bne	r3,zero,85944 <_malloc_r+0x23c>
   85d88:	294b883a 	add	r5,r5,r5
   85d8c:	1146703a 	and	r3,r2,r5
   85d90:	21000104 	addi	r4,r4,4
   85d94:	183ffc26 	beq	r3,zero,85d88 <_malloc_r+0x680>
   85d98:	003eea06 	br	85944 <_malloc_r+0x23c>
   85d9c:	00805504 	movi	r2,340
   85da0:	11001336 	bltu	r2,r4,85df0 <_malloc_r+0x6e8>
   85da4:	8808d3fa 	srli	r4,r17,15
   85da8:	21001dc4 	addi	r4,r4,119
   85dac:	210b883a 	add	r5,r4,r4
   85db0:	003e9c06 	br	85824 <_malloc_r+0x11c>
   85db4:	00840004 	movi	r2,4096
   85db8:	003f4d06 	br	85af0 <_malloc_r+0x3e8>
   85dbc:	00800044 	movi	r2,1
   85dc0:	a0800115 	stw	r2,4(r20)
   85dc4:	a021883a 	mov	r16,r20
   85dc8:	0007883a 	mov	r3,zero
   85dcc:	003f7506 	br	85ba4 <_malloc_r+0x49c>
   85dd0:	280bd0ba 	srai	r5,r5,2
   85dd4:	01800044 	movi	r6,1
   85dd8:	38800117 	ldw	r2,4(r7)
   85ddc:	314c983a 	sll	r6,r6,r5
   85de0:	180b883a 	mov	r5,r3
   85de4:	3084b03a 	or	r2,r6,r2
   85de8:	38800115 	stw	r2,4(r7)
   85dec:	003f9d06 	br	85c64 <_malloc_r+0x55c>
   85df0:	00815504 	movi	r2,1364
   85df4:	11001336 	bltu	r2,r4,85e44 <_malloc_r+0x73c>
   85df8:	8808d4ba 	srli	r4,r17,18
   85dfc:	21001f04 	addi	r4,r4,124
   85e00:	210b883a 	add	r5,r4,r4
   85e04:	003e8706 	br	85824 <_malloc_r+0x11c>
   85e08:	bdc00404 	addi	r23,r23,16
   85e0c:	003f1d06 	br	85a84 <_malloc_r+0x37c>
   85e10:	01401504 	movi	r5,84
   85e14:	28c01c36 	bltu	r5,r3,85e88 <_malloc_r+0x780>
   85e18:	100ad33a 	srli	r5,r2,12
   85e1c:	29401b84 	addi	r5,r5,110
   85e20:	294d883a 	add	r6,r5,r5
   85e24:	003f8006 	br	85c28 <_malloc_r+0x520>
   85e28:	e103ffcc 	andi	r4,fp,4095
   85e2c:	203f241e 	bne	r4,zero,85ac0 <_malloc_r+0x3b8>
   85e30:	98c00217 	ldw	r3,8(r19)
   85e34:	bd49883a 	add	r4,r23,r21
   85e38:	21000054 	ori	r4,r4,1
   85e3c:	19000115 	stw	r4,4(r3)
   85e40:	003f4a06 	br	85b6c <_malloc_r+0x464>
   85e44:	01403f04 	movi	r5,252
   85e48:	01001f84 	movi	r4,126
   85e4c:	003e7506 	br	85824 <_malloc_r+0x11c>
   85e50:	00c00044 	movi	r3,1
   85e54:	002f883a 	mov	r23,zero
   85e58:	003f3006 	br	85b1c <_malloc_r+0x414>
   85e5c:	00800274 	movhi	r2,9
   85e60:	10866604 	addi	r2,r2,6552
   85e64:	15000015 	stw	r20,0(r2)
   85e68:	003f1b06 	br	85ad8 <_malloc_r+0x3d0>
   85e6c:	9009883a 	mov	r4,r18
   85e70:	81400204 	addi	r5,r16,8
   85e74:	0084ba40 	call	84ba4 <_free_r>
   85e78:	00800274 	movhi	r2,9
   85e7c:	108d3c04 	addi	r2,r2,13552
   85e80:	10800017 	ldw	r2,0(r2)
   85e84:	003f3906 	br	85b6c <_malloc_r+0x464>
   85e88:	01405504 	movi	r5,340
   85e8c:	28c00436 	bltu	r5,r3,85ea0 <_malloc_r+0x798>
   85e90:	100ad3fa 	srli	r5,r2,15
   85e94:	29401dc4 	addi	r5,r5,119
   85e98:	294d883a 	add	r6,r5,r5
   85e9c:	003f6206 	br	85c28 <_malloc_r+0x520>
   85ea0:	01415504 	movi	r5,1364
   85ea4:	28c00436 	bltu	r5,r3,85eb8 <_malloc_r+0x7b0>
   85ea8:	100ad4ba 	srli	r5,r2,18
   85eac:	29401f04 	addi	r5,r5,124
   85eb0:	294d883a 	add	r6,r5,r5
   85eb4:	003f5c06 	br	85c28 <_malloc_r+0x520>
   85eb8:	01803f04 	movi	r6,252
   85ebc:	01401f84 	movi	r5,126
   85ec0:	003f5906 	br	85c28 <_malloc_r+0x520>
   85ec4:	98800117 	ldw	r2,4(r19)
   85ec8:	003fa906 	br	85d70 <_malloc_r+0x668>

00085ecc <memchr>:
   85ecc:	208000cc 	andi	r2,r4,3
   85ed0:	2811883a 	mov	r8,r5
   85ed4:	10003526 	beq	r2,zero,85fac <memchr+0xe0>
   85ed8:	30bfffc4 	addi	r2,r6,-1
   85edc:	30001b26 	beq	r6,zero,85f4c <memchr+0x80>
   85ee0:	21800003 	ldbu	r6,0(r4)
   85ee4:	28c03fcc 	andi	r3,r5,255
   85ee8:	30c01a26 	beq	r6,r3,85f54 <memchr+0x88>
   85eec:	180d883a 	mov	r6,r3
   85ef0:	00000406 	br	85f04 <memchr+0x38>
   85ef4:	10001526 	beq	r2,zero,85f4c <memchr+0x80>
   85ef8:	20c00003 	ldbu	r3,0(r4)
   85efc:	10bfffc4 	addi	r2,r2,-1
   85f00:	19801426 	beq	r3,r6,85f54 <memchr+0x88>
   85f04:	21000044 	addi	r4,r4,1
   85f08:	20c000cc 	andi	r3,r4,3
   85f0c:	183ff91e 	bne	r3,zero,85ef4 <memchr+0x28>
   85f10:	02c000c4 	movi	r11,3
   85f14:	58801136 	bltu	r11,r2,85f5c <memchr+0x90>
   85f18:	10000c26 	beq	r2,zero,85f4c <memchr+0x80>
   85f1c:	20c00003 	ldbu	r3,0(r4)
   85f20:	29403fcc 	andi	r5,r5,255
   85f24:	19400b26 	beq	r3,r5,85f54 <memchr+0x88>
   85f28:	20c00044 	addi	r3,r4,1
   85f2c:	2085883a 	add	r2,r4,r2
   85f30:	41803fcc 	andi	r6,r8,255
   85f34:	00000306 	br	85f44 <memchr+0x78>
   85f38:	18c00044 	addi	r3,r3,1
   85f3c:	197fffc3 	ldbu	r5,-1(r3)
   85f40:	29800426 	beq	r5,r6,85f54 <memchr+0x88>
   85f44:	1809883a 	mov	r4,r3
   85f48:	18bffb1e 	bne	r3,r2,85f38 <memchr+0x6c>
   85f4c:	0005883a 	mov	r2,zero
   85f50:	f800283a 	ret
   85f54:	2005883a 	mov	r2,r4
   85f58:	f800283a 	ret
   85f5c:	28c03fcc 	andi	r3,r5,255
   85f60:	180c923a 	slli	r6,r3,8
   85f64:	02bfbff4 	movhi	r10,65279
   85f68:	52bfbfc4 	addi	r10,r10,-257
   85f6c:	02602074 	movhi	r9,32897
   85f70:	4a602004 	addi	r9,r9,-32640
   85f74:	30c6b03a 	or	r3,r6,r3
   85f78:	180c943a 	slli	r6,r3,16
   85f7c:	30ccb03a 	or	r6,r6,r3
   85f80:	20c00017 	ldw	r3,0(r4)
   85f84:	30c6f03a 	xor	r3,r6,r3
   85f88:	1a8f883a 	add	r7,r3,r10
   85f8c:	00c6303a 	nor	r3,zero,r3
   85f90:	38c6703a 	and	r3,r7,r3
   85f94:	1a46703a 	and	r3,r3,r9
   85f98:	183fdf1e 	bne	r3,zero,85f18 <memchr+0x4c>
   85f9c:	10bfff04 	addi	r2,r2,-4
   85fa0:	21000104 	addi	r4,r4,4
   85fa4:	58bff636 	bltu	r11,r2,85f80 <memchr+0xb4>
   85fa8:	003fdb06 	br	85f18 <memchr+0x4c>
   85fac:	3005883a 	mov	r2,r6
   85fb0:	003fd706 	br	85f10 <memchr+0x44>

00085fb4 <memcpy>:
   85fb4:	00c003c4 	movi	r3,15
   85fb8:	2005883a 	mov	r2,r4
   85fbc:	1980372e 	bgeu	r3,r6,8609c <memcpy+0xe8>
   85fc0:	2146b03a 	or	r3,r4,r5
   85fc4:	18c000cc 	andi	r3,r3,3
   85fc8:	1800371e 	bne	r3,zero,860a8 <memcpy+0xf4>
   85fcc:	327ffc04 	addi	r9,r6,-16
   85fd0:	4812d13a 	srli	r9,r9,4
   85fd4:	2007883a 	mov	r3,r4
   85fd8:	280f883a 	mov	r7,r5
   85fdc:	4808913a 	slli	r4,r9,4
   85fe0:	1109883a 	add	r4,r2,r4
   85fe4:	21000404 	addi	r4,r4,16
   85fe8:	3a000017 	ldw	r8,0(r7)
   85fec:	18c00404 	addi	r3,r3,16
   85ff0:	39c00404 	addi	r7,r7,16
   85ff4:	1a3ffc15 	stw	r8,-16(r3)
   85ff8:	3a3ffd17 	ldw	r8,-12(r7)
   85ffc:	1a3ffd15 	stw	r8,-12(r3)
   86000:	3a3ffe17 	ldw	r8,-8(r7)
   86004:	1a3ffe15 	stw	r8,-8(r3)
   86008:	3a3fff17 	ldw	r8,-4(r7)
   8600c:	1a3fff15 	stw	r8,-4(r3)
   86010:	193ff51e 	bne	r3,r4,85fe8 <memcpy+0x34>
   86014:	49000044 	addi	r4,r9,1
   86018:	2008913a 	slli	r4,r4,4
   8601c:	328003cc 	andi	r10,r6,15
   86020:	1107883a 	add	r3,r2,r4
   86024:	290b883a 	add	r5,r5,r4
   86028:	010000c4 	movi	r4,3
   8602c:	2280212e 	bgeu	r4,r10,860b4 <memcpy+0x100>
   86030:	52bfff04 	addi	r10,r10,-4
   86034:	5014d0ba 	srli	r10,r10,2
   86038:	180f883a 	mov	r7,r3
   8603c:	2811883a 	mov	r8,r5
   86040:	5289883a 	add	r4,r10,r10
   86044:	2109883a 	add	r4,r4,r4
   86048:	21000104 	addi	r4,r4,4
   8604c:	1909883a 	add	r4,r3,r4
   86050:	42400017 	ldw	r9,0(r8)
   86054:	39c00104 	addi	r7,r7,4
   86058:	42000104 	addi	r8,r8,4
   8605c:	3a7fff15 	stw	r9,-4(r7)
   86060:	393ffb1e 	bne	r7,r4,86050 <memcpy+0x9c>
   86064:	51000044 	addi	r4,r10,1
   86068:	2109883a 	add	r4,r4,r4
   8606c:	2109883a 	add	r4,r4,r4
   86070:	318000cc 	andi	r6,r6,3
   86074:	1907883a 	add	r3,r3,r4
   86078:	290b883a 	add	r5,r5,r4
   8607c:	30000c26 	beq	r6,zero,860b0 <memcpy+0xfc>
   86080:	298d883a 	add	r6,r5,r6
   86084:	29c00003 	ldbu	r7,0(r5)
   86088:	18c00044 	addi	r3,r3,1
   8608c:	29400044 	addi	r5,r5,1
   86090:	19ffffc5 	stb	r7,-1(r3)
   86094:	29bffb1e 	bne	r5,r6,86084 <memcpy+0xd0>
   86098:	f800283a 	ret
   8609c:	2007883a 	mov	r3,r4
   860a0:	303ff71e 	bne	r6,zero,86080 <memcpy+0xcc>
   860a4:	00000206 	br	860b0 <memcpy+0xfc>
   860a8:	2007883a 	mov	r3,r4
   860ac:	003ff406 	br	86080 <memcpy+0xcc>
   860b0:	f800283a 	ret
   860b4:	500d883a 	mov	r6,r10
   860b8:	303ff11e 	bne	r6,zero,86080 <memcpy+0xcc>
   860bc:	003ffc06 	br	860b0 <memcpy+0xfc>

000860c0 <memmove>:
   860c0:	2005883a 	mov	r2,r4
   860c4:	29000b2e 	bgeu	r5,r4,860f4 <memmove+0x34>
   860c8:	298f883a 	add	r7,r5,r6
   860cc:	21c0092e 	bgeu	r4,r7,860f4 <memmove+0x34>
   860d0:	2187883a 	add	r3,r4,r6
   860d4:	198bc83a 	sub	r5,r3,r6
   860d8:	30003e26 	beq	r6,zero,861d4 <memmove+0x114>
   860dc:	39ffffc4 	addi	r7,r7,-1
   860e0:	39000003 	ldbu	r4,0(r7)
   860e4:	18ffffc4 	addi	r3,r3,-1
   860e8:	19000005 	stb	r4,0(r3)
   860ec:	197ffb1e 	bne	r3,r5,860dc <memmove+0x1c>
   860f0:	f800283a 	ret
   860f4:	00c003c4 	movi	r3,15
   860f8:	1980372e 	bgeu	r3,r6,861d8 <memmove+0x118>
   860fc:	1146b03a 	or	r3,r2,r5
   86100:	18c000cc 	andi	r3,r3,3
   86104:	1800371e 	bne	r3,zero,861e4 <memmove+0x124>
   86108:	327ffc04 	addi	r9,r6,-16
   8610c:	4812d13a 	srli	r9,r9,4
   86110:	280f883a 	mov	r7,r5
   86114:	1007883a 	mov	r3,r2
   86118:	4810913a 	slli	r8,r9,4
   8611c:	1211883a 	add	r8,r2,r8
   86120:	42000404 	addi	r8,r8,16
   86124:	39000017 	ldw	r4,0(r7)
   86128:	18c00404 	addi	r3,r3,16
   8612c:	39c00404 	addi	r7,r7,16
   86130:	193ffc15 	stw	r4,-16(r3)
   86134:	393ffd17 	ldw	r4,-12(r7)
   86138:	193ffd15 	stw	r4,-12(r3)
   8613c:	393ffe17 	ldw	r4,-8(r7)
   86140:	193ffe15 	stw	r4,-8(r3)
   86144:	393fff17 	ldw	r4,-4(r7)
   86148:	193fff15 	stw	r4,-4(r3)
   8614c:	1a3ff51e 	bne	r3,r8,86124 <memmove+0x64>
   86150:	49000044 	addi	r4,r9,1
   86154:	2008913a 	slli	r4,r4,4
   86158:	328003cc 	andi	r10,r6,15
   8615c:	1107883a 	add	r3,r2,r4
   86160:	290b883a 	add	r5,r5,r4
   86164:	010000c4 	movi	r4,3
   86168:	2280212e 	bgeu	r4,r10,861f0 <memmove+0x130>
   8616c:	52bfff04 	addi	r10,r10,-4
   86170:	5014d0ba 	srli	r10,r10,2
   86174:	180f883a 	mov	r7,r3
   86178:	2809883a 	mov	r4,r5
   8617c:	5291883a 	add	r8,r10,r10
   86180:	4211883a 	add	r8,r8,r8
   86184:	42400104 	addi	r9,r8,4
   86188:	1a53883a 	add	r9,r3,r9
   8618c:	22000017 	ldw	r8,0(r4)
   86190:	39c00104 	addi	r7,r7,4
   86194:	21000104 	addi	r4,r4,4
   86198:	3a3fff15 	stw	r8,-4(r7)
   8619c:	3a7ffb1e 	bne	r7,r9,8618c <memmove+0xcc>
   861a0:	51000044 	addi	r4,r10,1
   861a4:	2109883a 	add	r4,r4,r4
   861a8:	2109883a 	add	r4,r4,r4
   861ac:	318000cc 	andi	r6,r6,3
   861b0:	1907883a 	add	r3,r3,r4
   861b4:	290b883a 	add	r5,r5,r4
   861b8:	30000c26 	beq	r6,zero,861ec <memmove+0x12c>
   861bc:	198d883a 	add	r6,r3,r6
   861c0:	29c00003 	ldbu	r7,0(r5)
   861c4:	18c00044 	addi	r3,r3,1
   861c8:	29400044 	addi	r5,r5,1
   861cc:	19ffffc5 	stb	r7,-1(r3)
   861d0:	19bffb1e 	bne	r3,r6,861c0 <memmove+0x100>
   861d4:	f800283a 	ret
   861d8:	1007883a 	mov	r3,r2
   861dc:	303ff71e 	bne	r6,zero,861bc <memmove+0xfc>
   861e0:	00000206 	br	861ec <memmove+0x12c>
   861e4:	1007883a 	mov	r3,r2
   861e8:	003ff406 	br	861bc <memmove+0xfc>
   861ec:	f800283a 	ret
   861f0:	500d883a 	mov	r6,r10
   861f4:	303ff11e 	bne	r6,zero,861bc <memmove+0xfc>
   861f8:	003ffc06 	br	861ec <memmove+0x12c>

000861fc <memset>:
   861fc:	20c000cc 	andi	r3,r4,3
   86200:	2005883a 	mov	r2,r4
   86204:	18003f26 	beq	r3,zero,86304 <memset+0x108>
   86208:	31ffffc4 	addi	r7,r6,-1
   8620c:	30003b26 	beq	r6,zero,862fc <memset+0x100>
   86210:	2813883a 	mov	r9,r5
   86214:	200d883a 	mov	r6,r4
   86218:	2007883a 	mov	r3,r4
   8621c:	00000406 	br	86230 <memset+0x34>
   86220:	3a3fffc4 	addi	r8,r7,-1
   86224:	31800044 	addi	r6,r6,1
   86228:	38003426 	beq	r7,zero,862fc <memset+0x100>
   8622c:	400f883a 	mov	r7,r8
   86230:	18c00044 	addi	r3,r3,1
   86234:	32400005 	stb	r9,0(r6)
   86238:	1a0000cc 	andi	r8,r3,3
   8623c:	403ff81e 	bne	r8,zero,86220 <memset+0x24>
   86240:	010000c4 	movi	r4,3
   86244:	21c0282e 	bgeu	r4,r7,862e8 <memset+0xec>
   86248:	29003fcc 	andi	r4,r5,255
   8624c:	2010923a 	slli	r8,r4,8
   86250:	4108b03a 	or	r4,r8,r4
   86254:	2010943a 	slli	r8,r4,16
   86258:	4110b03a 	or	r8,r8,r4
   8625c:	010003c4 	movi	r4,15
   86260:	21c0122e 	bgeu	r4,r7,862ac <memset+0xb0>
   86264:	3a7ffc04 	addi	r9,r7,-16
   86268:	4812d13a 	srli	r9,r9,4
   8626c:	19000404 	addi	r4,r3,16
   86270:	180d883a 	mov	r6,r3
   86274:	4814913a 	slli	r10,r9,4
   86278:	2289883a 	add	r4,r4,r10
   8627c:	32000015 	stw	r8,0(r6)
   86280:	32000115 	stw	r8,4(r6)
   86284:	32000215 	stw	r8,8(r6)
   86288:	32000315 	stw	r8,12(r6)
   8628c:	31800404 	addi	r6,r6,16
   86290:	313ffa1e 	bne	r6,r4,8627c <memset+0x80>
   86294:	4a400044 	addi	r9,r9,1
   86298:	4812913a 	slli	r9,r9,4
   8629c:	39c003cc 	andi	r7,r7,15
   862a0:	010000c4 	movi	r4,3
   862a4:	1a47883a 	add	r3,r3,r9
   862a8:	21c00f2e 	bgeu	r4,r7,862e8 <memset+0xec>
   862ac:	3a7fff04 	addi	r9,r7,-4
   862b0:	4812d0ba 	srli	r9,r9,2
   862b4:	19000104 	addi	r4,r3,4
   862b8:	180d883a 	mov	r6,r3
   862bc:	4a55883a 	add	r10,r9,r9
   862c0:	5295883a 	add	r10,r10,r10
   862c4:	2289883a 	add	r4,r4,r10
   862c8:	32000015 	stw	r8,0(r6)
   862cc:	31800104 	addi	r6,r6,4
   862d0:	313ffd1e 	bne	r6,r4,862c8 <memset+0xcc>
   862d4:	4a400044 	addi	r9,r9,1
   862d8:	4a53883a 	add	r9,r9,r9
   862dc:	4a53883a 	add	r9,r9,r9
   862e0:	1a47883a 	add	r3,r3,r9
   862e4:	39c000cc 	andi	r7,r7,3
   862e8:	38000526 	beq	r7,zero,86300 <memset+0x104>
   862ec:	19cf883a 	add	r7,r3,r7
   862f0:	19400005 	stb	r5,0(r3)
   862f4:	18c00044 	addi	r3,r3,1
   862f8:	19fffd1e 	bne	r3,r7,862f0 <memset+0xf4>
   862fc:	f800283a 	ret
   86300:	f800283a 	ret
   86304:	2007883a 	mov	r3,r4
   86308:	300f883a 	mov	r7,r6
   8630c:	003fcc06 	br	86240 <memset+0x44>

00086310 <_Balloc>:
   86310:	20801317 	ldw	r2,76(r4)
   86314:	defffc04 	addi	sp,sp,-16
   86318:	dc400115 	stw	r17,4(sp)
   8631c:	dc000015 	stw	r16,0(sp)
   86320:	dfc00315 	stw	ra,12(sp)
   86324:	dc800215 	stw	r18,8(sp)
   86328:	2023883a 	mov	r17,r4
   8632c:	2821883a 	mov	r16,r5
   86330:	10000f26 	beq	r2,zero,86370 <_Balloc+0x60>
   86334:	8407883a 	add	r3,r16,r16
   86338:	18c7883a 	add	r3,r3,r3
   8633c:	10c7883a 	add	r3,r2,r3
   86340:	18800017 	ldw	r2,0(r3)
   86344:	10001126 	beq	r2,zero,8638c <_Balloc+0x7c>
   86348:	11000017 	ldw	r4,0(r2)
   8634c:	19000015 	stw	r4,0(r3)
   86350:	10000415 	stw	zero,16(r2)
   86354:	10000315 	stw	zero,12(r2)
   86358:	dfc00317 	ldw	ra,12(sp)
   8635c:	dc800217 	ldw	r18,8(sp)
   86360:	dc400117 	ldw	r17,4(sp)
   86364:	dc000017 	ldw	r16,0(sp)
   86368:	dec00404 	addi	sp,sp,16
   8636c:	f800283a 	ret
   86370:	01400104 	movi	r5,4
   86374:	01800844 	movi	r6,33
   86378:	008938c0 	call	8938c <_calloc_r>
   8637c:	88801315 	stw	r2,76(r17)
   86380:	103fec1e 	bne	r2,zero,86334 <_Balloc+0x24>
   86384:	0005883a 	mov	r2,zero
   86388:	003ff306 	br	86358 <_Balloc+0x48>
   8638c:	01400044 	movi	r5,1
   86390:	2c24983a 	sll	r18,r5,r16
   86394:	8809883a 	mov	r4,r17
   86398:	91800144 	addi	r6,r18,5
   8639c:	318d883a 	add	r6,r6,r6
   863a0:	318d883a 	add	r6,r6,r6
   863a4:	008938c0 	call	8938c <_calloc_r>
   863a8:	103ff626 	beq	r2,zero,86384 <_Balloc+0x74>
   863ac:	14000115 	stw	r16,4(r2)
   863b0:	14800215 	stw	r18,8(r2)
   863b4:	003fe606 	br	86350 <_Balloc+0x40>

000863b8 <_Bfree>:
   863b8:	28000826 	beq	r5,zero,863dc <_Bfree+0x24>
   863bc:	28c00117 	ldw	r3,4(r5)
   863c0:	20801317 	ldw	r2,76(r4)
   863c4:	18c7883a 	add	r3,r3,r3
   863c8:	18c7883a 	add	r3,r3,r3
   863cc:	10c5883a 	add	r2,r2,r3
   863d0:	10c00017 	ldw	r3,0(r2)
   863d4:	28c00015 	stw	r3,0(r5)
   863d8:	11400015 	stw	r5,0(r2)
   863dc:	f800283a 	ret

000863e0 <__multadd>:
   863e0:	defff604 	addi	sp,sp,-40
   863e4:	dd400515 	stw	r21,20(sp)
   863e8:	2d400417 	ldw	r21,16(r5)
   863ec:	df000815 	stw	fp,32(sp)
   863f0:	ddc00715 	stw	r23,28(sp)
   863f4:	dd800615 	stw	r22,24(sp)
   863f8:	dd000415 	stw	r20,16(sp)
   863fc:	dc400115 	stw	r17,4(sp)
   86400:	dc000015 	stw	r16,0(sp)
   86404:	dfc00915 	stw	ra,36(sp)
   86408:	dcc00315 	stw	r19,12(sp)
   8640c:	dc800215 	stw	r18,8(sp)
   86410:	282d883a 	mov	r22,r5
   86414:	202f883a 	mov	r23,r4
   86418:	3029883a 	mov	r20,r6
   8641c:	3839883a 	mov	fp,r7
   86420:	2c000504 	addi	r16,r5,20
   86424:	0023883a 	mov	r17,zero
   86428:	84c00017 	ldw	r19,0(r16)
   8642c:	a00b883a 	mov	r5,r20
   86430:	8c400044 	addi	r17,r17,1
   86434:	993fffcc 	andi	r4,r19,65535
   86438:	008aa780 	call	8aa78 <__mulsi3>
   8643c:	1725883a 	add	r18,r2,fp
   86440:	9808d43a 	srli	r4,r19,16
   86444:	9026d43a 	srli	r19,r18,16
   86448:	a00b883a 	mov	r5,r20
   8644c:	008aa780 	call	8aa78 <__mulsi3>
   86450:	988f883a 	add	r7,r19,r2
   86454:	3804943a 	slli	r2,r7,16
   86458:	94bfffcc 	andi	r18,r18,65535
   8645c:	3838d43a 	srli	fp,r7,16
   86460:	14a5883a 	add	r18,r2,r18
   86464:	84800015 	stw	r18,0(r16)
   86468:	84000104 	addi	r16,r16,4
   8646c:	8d7fee16 	blt	r17,r21,86428 <__multadd+0x48>
   86470:	e0000926 	beq	fp,zero,86498 <__multadd+0xb8>
   86474:	b0800217 	ldw	r2,8(r22)
   86478:	a880140e 	bge	r21,r2,864cc <__multadd+0xec>
   8647c:	a8800144 	addi	r2,r21,5
   86480:	1085883a 	add	r2,r2,r2
   86484:	1085883a 	add	r2,r2,r2
   86488:	b085883a 	add	r2,r22,r2
   8648c:	17000015 	stw	fp,0(r2)
   86490:	ad400044 	addi	r21,r21,1
   86494:	b5400415 	stw	r21,16(r22)
   86498:	b005883a 	mov	r2,r22
   8649c:	dfc00917 	ldw	ra,36(sp)
   864a0:	df000817 	ldw	fp,32(sp)
   864a4:	ddc00717 	ldw	r23,28(sp)
   864a8:	dd800617 	ldw	r22,24(sp)
   864ac:	dd400517 	ldw	r21,20(sp)
   864b0:	dd000417 	ldw	r20,16(sp)
   864b4:	dcc00317 	ldw	r19,12(sp)
   864b8:	dc800217 	ldw	r18,8(sp)
   864bc:	dc400117 	ldw	r17,4(sp)
   864c0:	dc000017 	ldw	r16,0(sp)
   864c4:	dec00a04 	addi	sp,sp,40
   864c8:	f800283a 	ret
   864cc:	b1400117 	ldw	r5,4(r22)
   864d0:	b809883a 	mov	r4,r23
   864d4:	29400044 	addi	r5,r5,1
   864d8:	00863100 	call	86310 <_Balloc>
   864dc:	b1800417 	ldw	r6,16(r22)
   864e0:	b1400304 	addi	r5,r22,12
   864e4:	11000304 	addi	r4,r2,12
   864e8:	31800084 	addi	r6,r6,2
   864ec:	318d883a 	add	r6,r6,r6
   864f0:	318d883a 	add	r6,r6,r6
   864f4:	1021883a 	mov	r16,r2
   864f8:	0085fb40 	call	85fb4 <memcpy>
   864fc:	b0c00117 	ldw	r3,4(r22)
   86500:	b8801317 	ldw	r2,76(r23)
   86504:	18c7883a 	add	r3,r3,r3
   86508:	18c7883a 	add	r3,r3,r3
   8650c:	10c5883a 	add	r2,r2,r3
   86510:	10c00017 	ldw	r3,0(r2)
   86514:	b0c00015 	stw	r3,0(r22)
   86518:	15800015 	stw	r22,0(r2)
   8651c:	802d883a 	mov	r22,r16
   86520:	003fd606 	br	8647c <__multadd+0x9c>

00086524 <__s2b>:
   86524:	defff904 	addi	sp,sp,-28
   86528:	dd000415 	stw	r20,16(sp)
   8652c:	dc400115 	stw	r17,4(sp)
   86530:	2829883a 	mov	r20,r5
   86534:	2023883a 	mov	r17,r4
   86538:	01400244 	movi	r5,9
   8653c:	39000204 	addi	r4,r7,8
   86540:	dcc00315 	stw	r19,12(sp)
   86544:	dc800215 	stw	r18,8(sp)
   86548:	dfc00615 	stw	ra,24(sp)
   8654c:	dd400515 	stw	r21,20(sp)
   86550:	dc000015 	stw	r16,0(sp)
   86554:	3827883a 	mov	r19,r7
   86558:	3025883a 	mov	r18,r6
   8655c:	008a9d40 	call	8a9d4 <__divsi3>
   86560:	00c00044 	movi	r3,1
   86564:	000b883a 	mov	r5,zero
   86568:	1880030e 	bge	r3,r2,86578 <__s2b+0x54>
   8656c:	18c7883a 	add	r3,r3,r3
   86570:	29400044 	addi	r5,r5,1
   86574:	18bffd16 	blt	r3,r2,8656c <__s2b+0x48>
   86578:	8809883a 	mov	r4,r17
   8657c:	00863100 	call	86310 <_Balloc>
   86580:	d8c00717 	ldw	r3,28(sp)
   86584:	10c00515 	stw	r3,20(r2)
   86588:	00c00044 	movi	r3,1
   8658c:	10c00415 	stw	r3,16(r2)
   86590:	00c00244 	movi	r3,9
   86594:	1c80210e 	bge	r3,r18,8661c <__s2b+0xf8>
   86598:	a0eb883a 	add	r21,r20,r3
   8659c:	a821883a 	mov	r16,r21
   865a0:	a4a9883a 	add	r20,r20,r18
   865a4:	81c00007 	ldb	r7,0(r16)
   865a8:	8809883a 	mov	r4,r17
   865ac:	84000044 	addi	r16,r16,1
   865b0:	100b883a 	mov	r5,r2
   865b4:	01800284 	movi	r6,10
   865b8:	39fff404 	addi	r7,r7,-48
   865bc:	00863e00 	call	863e0 <__multadd>
   865c0:	853ff81e 	bne	r16,r20,865a4 <__s2b+0x80>
   865c4:	aca1883a 	add	r16,r21,r18
   865c8:	843ffe04 	addi	r16,r16,-8
   865cc:	94c00a0e 	bge	r18,r19,865f8 <__s2b+0xd4>
   865d0:	84e7883a 	add	r19,r16,r19
   865d4:	9ca5c83a 	sub	r18,r19,r18
   865d8:	81c00007 	ldb	r7,0(r16)
   865dc:	8809883a 	mov	r4,r17
   865e0:	84000044 	addi	r16,r16,1
   865e4:	100b883a 	mov	r5,r2
   865e8:	01800284 	movi	r6,10
   865ec:	39fff404 	addi	r7,r7,-48
   865f0:	00863e00 	call	863e0 <__multadd>
   865f4:	84bff81e 	bne	r16,r18,865d8 <__s2b+0xb4>
   865f8:	dfc00617 	ldw	ra,24(sp)
   865fc:	dd400517 	ldw	r21,20(sp)
   86600:	dd000417 	ldw	r20,16(sp)
   86604:	dcc00317 	ldw	r19,12(sp)
   86608:	dc800217 	ldw	r18,8(sp)
   8660c:	dc400117 	ldw	r17,4(sp)
   86610:	dc000017 	ldw	r16,0(sp)
   86614:	dec00704 	addi	sp,sp,28
   86618:	f800283a 	ret
   8661c:	a4000284 	addi	r16,r20,10
   86620:	1825883a 	mov	r18,r3
   86624:	003fe906 	br	865cc <__s2b+0xa8>

00086628 <__hi0bits>:
   86628:	20bfffec 	andhi	r2,r4,65535
   8662c:	1000141e 	bne	r2,zero,86680 <__hi0bits+0x58>
   86630:	2008943a 	slli	r4,r4,16
   86634:	00800404 	movi	r2,16
   86638:	20ffc02c 	andhi	r3,r4,65280
   8663c:	1800021e 	bne	r3,zero,86648 <__hi0bits+0x20>
   86640:	2008923a 	slli	r4,r4,8
   86644:	10800204 	addi	r2,r2,8
   86648:	20fc002c 	andhi	r3,r4,61440
   8664c:	1800021e 	bne	r3,zero,86658 <__hi0bits+0x30>
   86650:	2008913a 	slli	r4,r4,4
   86654:	10800104 	addi	r2,r2,4
   86658:	20f0002c 	andhi	r3,r4,49152
   8665c:	1800031e 	bne	r3,zero,8666c <__hi0bits+0x44>
   86660:	2109883a 	add	r4,r4,r4
   86664:	10800084 	addi	r2,r2,2
   86668:	2109883a 	add	r4,r4,r4
   8666c:	20000316 	blt	r4,zero,8667c <__hi0bits+0x54>
   86670:	2110002c 	andhi	r4,r4,16384
   86674:	2000041e 	bne	r4,zero,86688 <__hi0bits+0x60>
   86678:	00800804 	movi	r2,32
   8667c:	f800283a 	ret
   86680:	0005883a 	mov	r2,zero
   86684:	003fec06 	br	86638 <__hi0bits+0x10>
   86688:	10800044 	addi	r2,r2,1
   8668c:	f800283a 	ret

00086690 <__lo0bits>:
   86690:	20c00017 	ldw	r3,0(r4)
   86694:	188001cc 	andi	r2,r3,7
   86698:	10000826 	beq	r2,zero,866bc <__lo0bits+0x2c>
   8669c:	1880004c 	andi	r2,r3,1
   866a0:	1000211e 	bne	r2,zero,86728 <__lo0bits+0x98>
   866a4:	1880008c 	andi	r2,r3,2
   866a8:	1000211e 	bne	r2,zero,86730 <__lo0bits+0xa0>
   866ac:	1806d0ba 	srli	r3,r3,2
   866b0:	00800084 	movi	r2,2
   866b4:	20c00015 	stw	r3,0(r4)
   866b8:	f800283a 	ret
   866bc:	18bfffcc 	andi	r2,r3,65535
   866c0:	10001326 	beq	r2,zero,86710 <__lo0bits+0x80>
   866c4:	0005883a 	mov	r2,zero
   866c8:	19403fcc 	andi	r5,r3,255
   866cc:	2800021e 	bne	r5,zero,866d8 <__lo0bits+0x48>
   866d0:	1806d23a 	srli	r3,r3,8
   866d4:	10800204 	addi	r2,r2,8
   866d8:	194003cc 	andi	r5,r3,15
   866dc:	2800021e 	bne	r5,zero,866e8 <__lo0bits+0x58>
   866e0:	1806d13a 	srli	r3,r3,4
   866e4:	10800104 	addi	r2,r2,4
   866e8:	194000cc 	andi	r5,r3,3
   866ec:	2800021e 	bne	r5,zero,866f8 <__lo0bits+0x68>
   866f0:	1806d0ba 	srli	r3,r3,2
   866f4:	10800084 	addi	r2,r2,2
   866f8:	1940004c 	andi	r5,r3,1
   866fc:	2800081e 	bne	r5,zero,86720 <__lo0bits+0x90>
   86700:	1806d07a 	srli	r3,r3,1
   86704:	1800051e 	bne	r3,zero,8671c <__lo0bits+0x8c>
   86708:	00800804 	movi	r2,32
   8670c:	f800283a 	ret
   86710:	1806d43a 	srli	r3,r3,16
   86714:	00800404 	movi	r2,16
   86718:	003feb06 	br	866c8 <__lo0bits+0x38>
   8671c:	10800044 	addi	r2,r2,1
   86720:	20c00015 	stw	r3,0(r4)
   86724:	f800283a 	ret
   86728:	0005883a 	mov	r2,zero
   8672c:	f800283a 	ret
   86730:	1806d07a 	srli	r3,r3,1
   86734:	00800044 	movi	r2,1
   86738:	20c00015 	stw	r3,0(r4)
   8673c:	f800283a 	ret

00086740 <__i2b>:
   86740:	defffd04 	addi	sp,sp,-12
   86744:	dc000015 	stw	r16,0(sp)
   86748:	04000044 	movi	r16,1
   8674c:	dc400115 	stw	r17,4(sp)
   86750:	2823883a 	mov	r17,r5
   86754:	800b883a 	mov	r5,r16
   86758:	dfc00215 	stw	ra,8(sp)
   8675c:	00863100 	call	86310 <_Balloc>
   86760:	14400515 	stw	r17,20(r2)
   86764:	14000415 	stw	r16,16(r2)
   86768:	dfc00217 	ldw	ra,8(sp)
   8676c:	dc400117 	ldw	r17,4(sp)
   86770:	dc000017 	ldw	r16,0(sp)
   86774:	dec00304 	addi	sp,sp,12
   86778:	f800283a 	ret

0008677c <__multiply>:
   8677c:	defff004 	addi	sp,sp,-64
   86780:	dc400715 	stw	r17,28(sp)
   86784:	dc000615 	stw	r16,24(sp)
   86788:	34400417 	ldw	r17,16(r6)
   8678c:	2c000417 	ldw	r16,16(r5)
   86790:	df000e15 	stw	fp,56(sp)
   86794:	dd000a15 	stw	r20,40(sp)
   86798:	dfc00f15 	stw	ra,60(sp)
   8679c:	ddc00d15 	stw	r23,52(sp)
   867a0:	dd800c15 	stw	r22,48(sp)
   867a4:	dd400b15 	stw	r21,44(sp)
   867a8:	dcc00915 	stw	r19,36(sp)
   867ac:	dc800815 	stw	r18,32(sp)
   867b0:	2839883a 	mov	fp,r5
   867b4:	3029883a 	mov	r20,r6
   867b8:	8440050e 	bge	r16,r17,867d0 <__multiply+0x54>
   867bc:	8007883a 	mov	r3,r16
   867c0:	3039883a 	mov	fp,r6
   867c4:	8821883a 	mov	r16,r17
   867c8:	2829883a 	mov	r20,r5
   867cc:	1823883a 	mov	r17,r3
   867d0:	e0800217 	ldw	r2,8(fp)
   867d4:	8447883a 	add	r3,r16,r17
   867d8:	d8c00115 	stw	r3,4(sp)
   867dc:	e1400117 	ldw	r5,4(fp)
   867e0:	10c0010e 	bge	r2,r3,867e8 <__multiply+0x6c>
   867e4:	29400044 	addi	r5,r5,1
   867e8:	00863100 	call	86310 <_Balloc>
   867ec:	d8c00117 	ldw	r3,4(sp)
   867f0:	d8800515 	stw	r2,20(sp)
   867f4:	18ef883a 	add	r23,r3,r3
   867f8:	bdef883a 	add	r23,r23,r23
   867fc:	10c00504 	addi	r3,r2,20
   86800:	1def883a 	add	r23,r3,r23
   86804:	d8c00015 	stw	r3,0(sp)
   86808:	ddc00215 	stw	r23,8(sp)
   8680c:	1805883a 	mov	r2,r3
   86810:	1dc0042e 	bgeu	r3,r23,86824 <__multiply+0xa8>
   86814:	d8c00217 	ldw	r3,8(sp)
   86818:	10000015 	stw	zero,0(r2)
   8681c:	10800104 	addi	r2,r2,4
   86820:	10fffc36 	bltu	r2,r3,86814 <__multiply+0x98>
   86824:	8c63883a 	add	r17,r17,r17
   86828:	a5000504 	addi	r20,r20,20
   8682c:	8c63883a 	add	r17,r17,r17
   86830:	e7000504 	addi	fp,fp,20
   86834:	8421883a 	add	r16,r16,r16
   86838:	a463883a 	add	r17,r20,r17
   8683c:	8421883a 	add	r16,r16,r16
   86840:	df000315 	stw	fp,12(sp)
   86844:	dc400415 	stw	r17,16(sp)
   86848:	e425883a 	add	r18,fp,r16
   8684c:	a440482e 	bgeu	r20,r17,86970 <__multiply+0x1f4>
   86850:	a4000017 	ldw	r16,0(r20)
   86854:	847fffcc 	andi	r17,r16,65535
   86858:	88001d26 	beq	r17,zero,868d0 <__multiply+0x154>
   8685c:	dc000017 	ldw	r16,0(sp)
   86860:	dcc00317 	ldw	r19,12(sp)
   86864:	002b883a 	mov	r21,zero
   86868:	9dc00017 	ldw	r23,0(r19)
   8686c:	85800017 	ldw	r22,0(r16)
   86870:	880b883a 	mov	r5,r17
   86874:	b93fffcc 	andi	r4,r23,65535
   86878:	008aa780 	call	8aa78 <__mulsi3>
   8687c:	b808d43a 	srli	r4,r23,16
   86880:	b0ffffcc 	andi	r3,r22,65535
   86884:	1885883a 	add	r2,r3,r2
   86888:	880b883a 	mov	r5,r17
   8688c:	156b883a 	add	r21,r2,r21
   86890:	b02cd43a 	srli	r22,r22,16
   86894:	008aa780 	call	8aa78 <__mulsi3>
   86898:	a808d43a 	srli	r4,r21,16
   8689c:	b085883a 	add	r2,r22,r2
   868a0:	a8ffffcc 	andi	r3,r21,65535
   868a4:	110d883a 	add	r6,r2,r4
   868a8:	3004943a 	slli	r2,r6,16
   868ac:	9cc00104 	addi	r19,r19,4
   868b0:	8009883a 	mov	r4,r16
   868b4:	10c6b03a 	or	r3,r2,r3
   868b8:	80c00015 	stw	r3,0(r16)
   868bc:	302ad43a 	srli	r21,r6,16
   868c0:	84000104 	addi	r16,r16,4
   868c4:	9cbfe836 	bltu	r19,r18,86868 <__multiply+0xec>
   868c8:	25400115 	stw	r21,4(r4)
   868cc:	a4000017 	ldw	r16,0(r20)
   868d0:	8020d43a 	srli	r16,r16,16
   868d4:	80002026 	beq	r16,zero,86958 <__multiply+0x1dc>
   868d8:	d8c00017 	ldw	r3,0(sp)
   868dc:	dd400317 	ldw	r21,12(sp)
   868e0:	002f883a 	mov	r23,zero
   868e4:	1f000017 	ldw	fp,0(r3)
   868e8:	182d883a 	mov	r22,r3
   868ec:	e023883a 	mov	r17,fp
   868f0:	a900000b 	ldhu	r4,0(r21)
   868f4:	8822d43a 	srli	r17,r17,16
   868f8:	800b883a 	mov	r5,r16
   868fc:	008aa780 	call	8aa78 <__mulsi3>
   86900:	1445883a 	add	r2,r2,r17
   86904:	15ef883a 	add	r23,r2,r23
   86908:	b804943a 	slli	r2,r23,16
   8690c:	e1ffffcc 	andi	r7,fp,65535
   86910:	ad400104 	addi	r21,r21,4
   86914:	11ceb03a 	or	r7,r2,r7
   86918:	b1c00015 	stw	r7,0(r22)
   8691c:	a93fff17 	ldw	r4,-4(r21)
   86920:	b7000117 	ldw	fp,4(r22)
   86924:	800b883a 	mov	r5,r16
   86928:	2008d43a 	srli	r4,r4,16
   8692c:	e023883a 	mov	r17,fp
   86930:	b027883a 	mov	r19,r22
   86934:	008aa780 	call	8aa78 <__mulsi3>
   86938:	b812d43a 	srli	r9,r23,16
   8693c:	e23fffcc 	andi	r8,fp,65535
   86940:	1205883a 	add	r2,r2,r8
   86944:	1279883a 	add	fp,r2,r9
   86948:	b5800104 	addi	r22,r22,4
   8694c:	e02ed43a 	srli	r23,fp,16
   86950:	acbfe736 	bltu	r21,r18,868f0 <__multiply+0x174>
   86954:	9f000115 	stw	fp,4(r19)
   86958:	d8c00017 	ldw	r3,0(sp)
   8695c:	a5000104 	addi	r20,r20,4
   86960:	18c00104 	addi	r3,r3,4
   86964:	d8c00015 	stw	r3,0(sp)
   86968:	d8c00417 	ldw	r3,16(sp)
   8696c:	a0ffb836 	bltu	r20,r3,86850 <__multiply+0xd4>
   86970:	d8c00117 	ldw	r3,4(sp)
   86974:	00c00c0e 	bge	zero,r3,869a8 <__multiply+0x22c>
   86978:	d8c00217 	ldw	r3,8(sp)
   8697c:	18bfff17 	ldw	r2,-4(r3)
   86980:	1dffff04 	addi	r23,r3,-4
   86984:	10000326 	beq	r2,zero,86994 <__multiply+0x218>
   86988:	00000706 	br	869a8 <__multiply+0x22c>
   8698c:	b8800017 	ldw	r2,0(r23)
   86990:	1000051e 	bne	r2,zero,869a8 <__multiply+0x22c>
   86994:	d8c00117 	ldw	r3,4(sp)
   86998:	bdffff04 	addi	r23,r23,-4
   8699c:	18ffffc4 	addi	r3,r3,-1
   869a0:	d8c00115 	stw	r3,4(sp)
   869a4:	183ff91e 	bne	r3,zero,8698c <__multiply+0x210>
   869a8:	d8c00517 	ldw	r3,20(sp)
   869ac:	d9000117 	ldw	r4,4(sp)
   869b0:	1805883a 	mov	r2,r3
   869b4:	19000415 	stw	r4,16(r3)
   869b8:	dfc00f17 	ldw	ra,60(sp)
   869bc:	df000e17 	ldw	fp,56(sp)
   869c0:	ddc00d17 	ldw	r23,52(sp)
   869c4:	dd800c17 	ldw	r22,48(sp)
   869c8:	dd400b17 	ldw	r21,44(sp)
   869cc:	dd000a17 	ldw	r20,40(sp)
   869d0:	dcc00917 	ldw	r19,36(sp)
   869d4:	dc800817 	ldw	r18,32(sp)
   869d8:	dc400717 	ldw	r17,28(sp)
   869dc:	dc000617 	ldw	r16,24(sp)
   869e0:	dec01004 	addi	sp,sp,64
   869e4:	f800283a 	ret

000869e8 <__pow5mult>:
   869e8:	defffa04 	addi	sp,sp,-24
   869ec:	dcc00315 	stw	r19,12(sp)
   869f0:	dc800215 	stw	r18,8(sp)
   869f4:	dc000015 	stw	r16,0(sp)
   869f8:	dfc00515 	stw	ra,20(sp)
   869fc:	dd000415 	stw	r20,16(sp)
   86a00:	dc400115 	stw	r17,4(sp)
   86a04:	308000cc 	andi	r2,r6,3
   86a08:	3021883a 	mov	r16,r6
   86a0c:	2027883a 	mov	r19,r4
   86a10:	2825883a 	mov	r18,r5
   86a14:	1000301e 	bne	r2,zero,86ad8 <__pow5mult+0xf0>
   86a18:	8021d0ba 	srai	r16,r16,2
   86a1c:	80001b26 	beq	r16,zero,86a8c <__pow5mult+0xa4>
   86a20:	9c401217 	ldw	r17,72(r19)
   86a24:	88003726 	beq	r17,zero,86b04 <__pow5mult+0x11c>
   86a28:	80c0004c 	andi	r3,r16,1
   86a2c:	1800071e 	bne	r3,zero,86a4c <__pow5mult+0x64>
   86a30:	8021d07a 	srai	r16,r16,1
   86a34:	80001526 	beq	r16,zero,86a8c <__pow5mult+0xa4>
   86a38:	88800017 	ldw	r2,0(r17)
   86a3c:	10001c26 	beq	r2,zero,86ab0 <__pow5mult+0xc8>
   86a40:	1023883a 	mov	r17,r2
   86a44:	80c0004c 	andi	r3,r16,1
   86a48:	183ff926 	beq	r3,zero,86a30 <__pow5mult+0x48>
   86a4c:	900b883a 	mov	r5,r18
   86a50:	880d883a 	mov	r6,r17
   86a54:	9809883a 	mov	r4,r19
   86a58:	008677c0 	call	8677c <__multiply>
   86a5c:	90001c26 	beq	r18,zero,86ad0 <__pow5mult+0xe8>
   86a60:	91000117 	ldw	r4,4(r18)
   86a64:	98c01317 	ldw	r3,76(r19)
   86a68:	8021d07a 	srai	r16,r16,1
   86a6c:	2109883a 	add	r4,r4,r4
   86a70:	2109883a 	add	r4,r4,r4
   86a74:	1907883a 	add	r3,r3,r4
   86a78:	19000017 	ldw	r4,0(r3)
   86a7c:	91000015 	stw	r4,0(r18)
   86a80:	1c800015 	stw	r18,0(r3)
   86a84:	1025883a 	mov	r18,r2
   86a88:	803feb1e 	bne	r16,zero,86a38 <__pow5mult+0x50>
   86a8c:	9005883a 	mov	r2,r18
   86a90:	dfc00517 	ldw	ra,20(sp)
   86a94:	dd000417 	ldw	r20,16(sp)
   86a98:	dcc00317 	ldw	r19,12(sp)
   86a9c:	dc800217 	ldw	r18,8(sp)
   86aa0:	dc400117 	ldw	r17,4(sp)
   86aa4:	dc000017 	ldw	r16,0(sp)
   86aa8:	dec00604 	addi	sp,sp,24
   86aac:	f800283a 	ret
   86ab0:	880b883a 	mov	r5,r17
   86ab4:	880d883a 	mov	r6,r17
   86ab8:	9809883a 	mov	r4,r19
   86abc:	008677c0 	call	8677c <__multiply>
   86ac0:	88800015 	stw	r2,0(r17)
   86ac4:	10000015 	stw	zero,0(r2)
   86ac8:	1023883a 	mov	r17,r2
   86acc:	003fdd06 	br	86a44 <__pow5mult+0x5c>
   86ad0:	1025883a 	mov	r18,r2
   86ad4:	003fd606 	br	86a30 <__pow5mult+0x48>
   86ad8:	10bfffc4 	addi	r2,r2,-1
   86adc:	1085883a 	add	r2,r2,r2
   86ae0:	00c00274 	movhi	r3,9
   86ae4:	18ff1c04 	addi	r3,r3,-912
   86ae8:	1085883a 	add	r2,r2,r2
   86aec:	1885883a 	add	r2,r3,r2
   86af0:	11800017 	ldw	r6,0(r2)
   86af4:	000f883a 	mov	r7,zero
   86af8:	00863e00 	call	863e0 <__multadd>
   86afc:	1025883a 	mov	r18,r2
   86b00:	003fc506 	br	86a18 <__pow5mult+0x30>
   86b04:	05000044 	movi	r20,1
   86b08:	9809883a 	mov	r4,r19
   86b0c:	a00b883a 	mov	r5,r20
   86b10:	00863100 	call	86310 <_Balloc>
   86b14:	1023883a 	mov	r17,r2
   86b18:	00809c44 	movi	r2,625
   86b1c:	88800515 	stw	r2,20(r17)
   86b20:	8d000415 	stw	r20,16(r17)
   86b24:	9c401215 	stw	r17,72(r19)
   86b28:	88000015 	stw	zero,0(r17)
   86b2c:	003fbe06 	br	86a28 <__pow5mult+0x40>

00086b30 <__lshift>:
   86b30:	defff904 	addi	sp,sp,-28
   86b34:	dd000415 	stw	r20,16(sp)
   86b38:	dc400115 	stw	r17,4(sp)
   86b3c:	2d000417 	ldw	r20,16(r5)
   86b40:	3023d17a 	srai	r17,r6,5
   86b44:	28800217 	ldw	r2,8(r5)
   86b48:	dd400515 	stw	r21,20(sp)
   86b4c:	8d29883a 	add	r20,r17,r20
   86b50:	dcc00315 	stw	r19,12(sp)
   86b54:	dc800215 	stw	r18,8(sp)
   86b58:	dc000015 	stw	r16,0(sp)
   86b5c:	dfc00615 	stw	ra,24(sp)
   86b60:	a4000044 	addi	r16,r20,1
   86b64:	2825883a 	mov	r18,r5
   86b68:	302b883a 	mov	r21,r6
   86b6c:	2027883a 	mov	r19,r4
   86b70:	29400117 	ldw	r5,4(r5)
   86b74:	1400030e 	bge	r2,r16,86b84 <__lshift+0x54>
   86b78:	1085883a 	add	r2,r2,r2
   86b7c:	29400044 	addi	r5,r5,1
   86b80:	143ffd16 	blt	r2,r16,86b78 <__lshift+0x48>
   86b84:	9809883a 	mov	r4,r19
   86b88:	00863100 	call	86310 <_Balloc>
   86b8c:	11000504 	addi	r4,r2,20
   86b90:	0440090e 	bge	zero,r17,86bb8 <__lshift+0x88>
   86b94:	200f883a 	mov	r7,r4
   86b98:	0007883a 	mov	r3,zero
   86b9c:	38000015 	stw	zero,0(r7)
   86ba0:	18c00044 	addi	r3,r3,1
   86ba4:	39c00104 	addi	r7,r7,4
   86ba8:	1c7ffc1e 	bne	r3,r17,86b9c <__lshift+0x6c>
   86bac:	18c7883a 	add	r3,r3,r3
   86bb0:	18c7883a 	add	r3,r3,r3
   86bb4:	20c9883a 	add	r4,r4,r3
   86bb8:	92400417 	ldw	r9,16(r18)
   86bbc:	90c00504 	addi	r3,r18,20
   86bc0:	a98007cc 	andi	r6,r21,31
   86bc4:	4a53883a 	add	r9,r9,r9
   86bc8:	4a53883a 	add	r9,r9,r9
   86bcc:	1a53883a 	add	r9,r3,r9
   86bd0:	30002426 	beq	r6,zero,86c64 <__lshift+0x134>
   86bd4:	01400804 	movi	r5,32
   86bd8:	298bc83a 	sub	r5,r5,r6
   86bdc:	200f883a 	mov	r7,r4
   86be0:	0011883a 	mov	r8,zero
   86be4:	1a800017 	ldw	r10,0(r3)
   86be8:	3809883a 	mov	r4,r7
   86bec:	39c00104 	addi	r7,r7,4
   86bf0:	5194983a 	sll	r10,r10,r6
   86bf4:	18c00104 	addi	r3,r3,4
   86bf8:	4290b03a 	or	r8,r8,r10
   86bfc:	3a3fff15 	stw	r8,-4(r7)
   86c00:	1a3fff17 	ldw	r8,-4(r3)
   86c04:	4150d83a 	srl	r8,r8,r5
   86c08:	1a7ff636 	bltu	r3,r9,86be4 <__lshift+0xb4>
   86c0c:	22000115 	stw	r8,4(r4)
   86c10:	40000126 	beq	r8,zero,86c18 <__lshift+0xe8>
   86c14:	a4000084 	addi	r16,r20,2
   86c18:	91000117 	ldw	r4,4(r18)
   86c1c:	98c01317 	ldw	r3,76(r19)
   86c20:	843fffc4 	addi	r16,r16,-1
   86c24:	2109883a 	add	r4,r4,r4
   86c28:	2109883a 	add	r4,r4,r4
   86c2c:	1907883a 	add	r3,r3,r4
   86c30:	19000017 	ldw	r4,0(r3)
   86c34:	14000415 	stw	r16,16(r2)
   86c38:	91000015 	stw	r4,0(r18)
   86c3c:	1c800015 	stw	r18,0(r3)
   86c40:	dfc00617 	ldw	ra,24(sp)
   86c44:	dd400517 	ldw	r21,20(sp)
   86c48:	dd000417 	ldw	r20,16(sp)
   86c4c:	dcc00317 	ldw	r19,12(sp)
   86c50:	dc800217 	ldw	r18,8(sp)
   86c54:	dc400117 	ldw	r17,4(sp)
   86c58:	dc000017 	ldw	r16,0(sp)
   86c5c:	dec00704 	addi	sp,sp,28
   86c60:	f800283a 	ret
   86c64:	200f883a 	mov	r7,r4
   86c68:	19800017 	ldw	r6,0(r3)
   86c6c:	39c00104 	addi	r7,r7,4
   86c70:	18c00104 	addi	r3,r3,4
   86c74:	39bfff15 	stw	r6,-4(r7)
   86c78:	1a7ffb36 	bltu	r3,r9,86c68 <__lshift+0x138>
   86c7c:	003fe606 	br	86c18 <__lshift+0xe8>

00086c80 <__mcmp>:
   86c80:	20800417 	ldw	r2,16(r4)
   86c84:	28c00417 	ldw	r3,16(r5)
   86c88:	10c5c83a 	sub	r2,r2,r3
   86c8c:	1000111e 	bne	r2,zero,86cd4 <__mcmp+0x54>
   86c90:	18c7883a 	add	r3,r3,r3
   86c94:	18c7883a 	add	r3,r3,r3
   86c98:	21000504 	addi	r4,r4,20
   86c9c:	29400504 	addi	r5,r5,20
   86ca0:	20c5883a 	add	r2,r4,r3
   86ca4:	28cb883a 	add	r5,r5,r3
   86ca8:	00000106 	br	86cb0 <__mcmp+0x30>
   86cac:	2080082e 	bgeu	r4,r2,86cd0 <__mcmp+0x50>
   86cb0:	10bfff04 	addi	r2,r2,-4
   86cb4:	297fff04 	addi	r5,r5,-4
   86cb8:	11800017 	ldw	r6,0(r2)
   86cbc:	28c00017 	ldw	r3,0(r5)
   86cc0:	30fffa26 	beq	r6,r3,86cac <__mcmp+0x2c>
   86cc4:	30c00436 	bltu	r6,r3,86cd8 <__mcmp+0x58>
   86cc8:	00800044 	movi	r2,1
   86ccc:	f800283a 	ret
   86cd0:	0005883a 	mov	r2,zero
   86cd4:	f800283a 	ret
   86cd8:	00bfffc4 	movi	r2,-1
   86cdc:	f800283a 	ret

00086ce0 <__mdiff>:
   86ce0:	defffc04 	addi	sp,sp,-16
   86ce4:	dc000015 	stw	r16,0(sp)
   86ce8:	2821883a 	mov	r16,r5
   86cec:	200f883a 	mov	r7,r4
   86cf0:	300b883a 	mov	r5,r6
   86cf4:	8009883a 	mov	r4,r16
   86cf8:	dc400115 	stw	r17,4(sp)
   86cfc:	dfc00315 	stw	ra,12(sp)
   86d00:	dc800215 	stw	r18,8(sp)
   86d04:	3023883a 	mov	r17,r6
   86d08:	0086c800 	call	86c80 <__mcmp>
   86d0c:	10005226 	beq	r2,zero,86e58 <__mdiff+0x178>
   86d10:	10004c16 	blt	r2,zero,86e44 <__mdiff+0x164>
   86d14:	0025883a 	mov	r18,zero
   86d18:	81400117 	ldw	r5,4(r16)
   86d1c:	3809883a 	mov	r4,r7
   86d20:	00863100 	call	86310 <_Balloc>
   86d24:	82800417 	ldw	r10,16(r16)
   86d28:	8b400417 	ldw	r13,16(r17)
   86d2c:	81000504 	addi	r4,r16,20
   86d30:	5299883a 	add	r12,r10,r10
   86d34:	6b5b883a 	add	r13,r13,r13
   86d38:	6319883a 	add	r12,r12,r12
   86d3c:	89800504 	addi	r6,r17,20
   86d40:	6b5b883a 	add	r13,r13,r13
   86d44:	14800315 	stw	r18,12(r2)
   86d48:	2319883a 	add	r12,r4,r12
   86d4c:	335b883a 	add	r13,r6,r13
   86d50:	11400504 	addi	r5,r2,20
   86d54:	0007883a 	mov	r3,zero
   86d58:	00000106 	br	86d60 <__mdiff+0x80>
   86d5c:	400b883a 	mov	r5,r8
   86d60:	22400017 	ldw	r9,0(r4)
   86d64:	32000017 	ldw	r8,0(r6)
   86d68:	31800104 	addi	r6,r6,4
   86d6c:	49ffffcc 	andi	r7,r9,65535
   86d70:	42ffffcc 	andi	r11,r8,65535
   86d74:	38c7883a 	add	r3,r7,r3
   86d78:	1acfc83a 	sub	r7,r3,r11
   86d7c:	4010d43a 	srli	r8,r8,16
   86d80:	4806d43a 	srli	r3,r9,16
   86d84:	3817d43a 	srai	r11,r7,16
   86d88:	39ffffcc 	andi	r7,r7,65535
   86d8c:	1a07c83a 	sub	r3,r3,r8
   86d90:	1ac7883a 	add	r3,r3,r11
   86d94:	1812943a 	slli	r9,r3,16
   86d98:	2a000104 	addi	r8,r5,4
   86d9c:	21000104 	addi	r4,r4,4
   86da0:	49ceb03a 	or	r7,r9,r7
   86da4:	29c00015 	stw	r7,0(r5)
   86da8:	1807d43a 	srai	r3,r3,16
   86dac:	337feb36 	bltu	r6,r13,86d5c <__mdiff+0x7c>
   86db0:	2013883a 	mov	r9,r4
   86db4:	2300342e 	bgeu	r4,r12,86e88 <__mdiff+0x1a8>
   86db8:	400b883a 	mov	r5,r8
   86dbc:	21c00017 	ldw	r7,0(r4)
   86dc0:	29400104 	addi	r5,r5,4
   86dc4:	21000104 	addi	r4,r4,4
   86dc8:	39bfffcc 	andi	r6,r7,65535
   86dcc:	30cd883a 	add	r6,r6,r3
   86dd0:	3007d43a 	srai	r3,r6,16
   86dd4:	380ed43a 	srli	r7,r7,16
   86dd8:	31bfffcc 	andi	r6,r6,65535
   86ddc:	19c7883a 	add	r3,r3,r7
   86de0:	180e943a 	slli	r7,r3,16
   86de4:	1807d43a 	srai	r3,r3,16
   86de8:	398cb03a 	or	r6,r7,r6
   86dec:	29bfff15 	stw	r6,-4(r5)
   86df0:	233ff236 	bltu	r4,r12,86dbc <__mdiff+0xdc>
   86df4:	0248303a 	nor	r4,zero,r9
   86df8:	2309883a 	add	r4,r4,r12
   86dfc:	2008d0ba 	srli	r4,r4,2
   86e00:	21000044 	addi	r4,r4,1
   86e04:	2109883a 	add	r4,r4,r4
   86e08:	2109883a 	add	r4,r4,r4
   86e0c:	4111883a 	add	r8,r8,r4
   86e10:	413fff04 	addi	r4,r8,-4
   86e14:	3000041e 	bne	r6,zero,86e28 <__mdiff+0x148>
   86e18:	213fff04 	addi	r4,r4,-4
   86e1c:	20c00017 	ldw	r3,0(r4)
   86e20:	52bfffc4 	addi	r10,r10,-1
   86e24:	183ffc26 	beq	r3,zero,86e18 <__mdiff+0x138>
   86e28:	12800415 	stw	r10,16(r2)
   86e2c:	dfc00317 	ldw	ra,12(sp)
   86e30:	dc800217 	ldw	r18,8(sp)
   86e34:	dc400117 	ldw	r17,4(sp)
   86e38:	dc000017 	ldw	r16,0(sp)
   86e3c:	dec00404 	addi	sp,sp,16
   86e40:	f800283a 	ret
   86e44:	8005883a 	mov	r2,r16
   86e48:	04800044 	movi	r18,1
   86e4c:	8821883a 	mov	r16,r17
   86e50:	1023883a 	mov	r17,r2
   86e54:	003fb006 	br	86d18 <__mdiff+0x38>
   86e58:	3809883a 	mov	r4,r7
   86e5c:	000b883a 	mov	r5,zero
   86e60:	00863100 	call	86310 <_Balloc>
   86e64:	00c00044 	movi	r3,1
   86e68:	10c00415 	stw	r3,16(r2)
   86e6c:	10000515 	stw	zero,20(r2)
   86e70:	dfc00317 	ldw	ra,12(sp)
   86e74:	dc800217 	ldw	r18,8(sp)
   86e78:	dc400117 	ldw	r17,4(sp)
   86e7c:	dc000017 	ldw	r16,0(sp)
   86e80:	dec00404 	addi	sp,sp,16
   86e84:	f800283a 	ret
   86e88:	380d883a 	mov	r6,r7
   86e8c:	003fe006 	br	86e10 <__mdiff+0x130>

00086e90 <__ulp>:
   86e90:	295ffc2c 	andhi	r5,r5,32752
   86e94:	00bf3034 	movhi	r2,64704
   86e98:	2887883a 	add	r3,r5,r2
   86e9c:	00c0020e 	bge	zero,r3,86ea8 <__ulp+0x18>
   86ea0:	0005883a 	mov	r2,zero
   86ea4:	f800283a 	ret
   86ea8:	00c7c83a 	sub	r3,zero,r3
   86eac:	1805d53a 	srai	r2,r3,20
   86eb0:	00c004c4 	movi	r3,19
   86eb4:	18800a0e 	bge	r3,r2,86ee0 <__ulp+0x50>
   86eb8:	01000c84 	movi	r4,50
   86ebc:	0007883a 	mov	r3,zero
   86ec0:	20800516 	blt	r4,r2,86ed8 <__ulp+0x48>
   86ec4:	01000cc4 	movi	r4,51
   86ec8:	2085c83a 	sub	r2,r4,r2
   86ecc:	01000044 	movi	r4,1
   86ed0:	2084983a 	sll	r2,r4,r2
   86ed4:	f800283a 	ret
   86ed8:	00800044 	movi	r2,1
   86edc:	f800283a 	ret
   86ee0:	00c00234 	movhi	r3,8
   86ee4:	1887d83a 	sra	r3,r3,r2
   86ee8:	0005883a 	mov	r2,zero
   86eec:	f800283a 	ret

00086ef0 <__b2d>:
   86ef0:	21800417 	ldw	r6,16(r4)
   86ef4:	22000504 	addi	r8,r4,20
   86ef8:	deffff04 	addi	sp,sp,-4
   86efc:	318d883a 	add	r6,r6,r6
   86f00:	318d883a 	add	r6,r6,r6
   86f04:	418d883a 	add	r6,r8,r6
   86f08:	31ffff17 	ldw	r7,-4(r6)
   86f0c:	327fff04 	addi	r9,r6,-4
   86f10:	dfc00015 	stw	ra,0(sp)
   86f14:	3809883a 	mov	r4,r7
   86f18:	00866280 	call	86628 <__hi0bits>
   86f1c:	00c00804 	movi	r3,32
   86f20:	1887c83a 	sub	r3,r3,r2
   86f24:	28c00015 	stw	r3,0(r5)
   86f28:	00c00284 	movi	r3,10
   86f2c:	18800d16 	blt	r3,r2,86f64 <__b2d+0x74>
   86f30:	010002c4 	movi	r4,11
   86f34:	2089c83a 	sub	r4,r4,r2
   86f38:	3906d83a 	srl	r3,r7,r4
   86f3c:	18cffc34 	orhi	r3,r3,16368
   86f40:	4240232e 	bgeu	r8,r9,86fd0 <__b2d+0xe0>
   86f44:	317ffe17 	ldw	r5,-8(r6)
   86f48:	2908d83a 	srl	r4,r5,r4
   86f4c:	10800544 	addi	r2,r2,21
   86f50:	388e983a 	sll	r7,r7,r2
   86f54:	21c4b03a 	or	r2,r4,r7
   86f58:	dfc00017 	ldw	ra,0(sp)
   86f5c:	dec00104 	addi	sp,sp,4
   86f60:	f800283a 	ret
   86f64:	42401136 	bltu	r8,r9,86fac <__b2d+0xbc>
   86f68:	113ffd44 	addi	r4,r2,-11
   86f6c:	000b883a 	mov	r5,zero
   86f70:	20001226 	beq	r4,zero,86fbc <__b2d+0xcc>
   86f74:	00c00ac4 	movi	r3,43
   86f78:	1885c83a 	sub	r2,r3,r2
   86f7c:	3906983a 	sll	r3,r7,r4
   86f80:	288cd83a 	srl	r6,r5,r2
   86f84:	18cffc34 	orhi	r3,r3,16368
   86f88:	1986b03a 	or	r3,r3,r6
   86f8c:	4240122e 	bgeu	r8,r9,86fd8 <__b2d+0xe8>
   86f90:	49bfff17 	ldw	r6,-4(r9)
   86f94:	3084d83a 	srl	r2,r6,r2
   86f98:	2908983a 	sll	r4,r5,r4
   86f9c:	1104b03a 	or	r2,r2,r4
   86fa0:	dfc00017 	ldw	ra,0(sp)
   86fa4:	dec00104 	addi	sp,sp,4
   86fa8:	f800283a 	ret
   86fac:	113ffd44 	addi	r4,r2,-11
   86fb0:	327ffe04 	addi	r9,r6,-8
   86fb4:	317ffe17 	ldw	r5,-8(r6)
   86fb8:	203fee1e 	bne	r4,zero,86f74 <__b2d+0x84>
   86fbc:	38cffc34 	orhi	r3,r7,16368
   86fc0:	2805883a 	mov	r2,r5
   86fc4:	dfc00017 	ldw	ra,0(sp)
   86fc8:	dec00104 	addi	sp,sp,4
   86fcc:	f800283a 	ret
   86fd0:	0009883a 	mov	r4,zero
   86fd4:	003fdd06 	br	86f4c <__b2d+0x5c>
   86fd8:	0005883a 	mov	r2,zero
   86fdc:	003fee06 	br	86f98 <__b2d+0xa8>

00086fe0 <__d2b>:
   86fe0:	defffa04 	addi	sp,sp,-24
   86fe4:	dc400315 	stw	r17,12(sp)
   86fe8:	2823883a 	mov	r17,r5
   86fec:	01400044 	movi	r5,1
   86ff0:	dc800415 	stw	r18,16(sp)
   86ff4:	dc000215 	stw	r16,8(sp)
   86ff8:	dfc00515 	stw	ra,20(sp)
   86ffc:	3021883a 	mov	r16,r6
   87000:	3825883a 	mov	r18,r7
   87004:	00863100 	call	86310 <_Balloc>
   87008:	8012907a 	slli	r9,r16,1
   8700c:	1011883a 	mov	r8,r2
   87010:	00800434 	movhi	r2,16
   87014:	10bfffc4 	addi	r2,r2,-1
   87018:	4812d57a 	srli	r9,r9,21
   8701c:	80a0703a 	and	r16,r16,r2
   87020:	48000126 	beq	r9,zero,87028 <__d2b+0x48>
   87024:	84000434 	orhi	r16,r16,16
   87028:	dc000015 	stw	r16,0(sp)
   8702c:	88001e26 	beq	r17,zero,870a8 <__d2b+0xc8>
   87030:	d9000104 	addi	r4,sp,4
   87034:	dc400115 	stw	r17,4(sp)
   87038:	00866900 	call	86690 <__lo0bits>
   8703c:	d8c00017 	ldw	r3,0(sp)
   87040:	10002f1e 	bne	r2,zero,87100 <__d2b+0x120>
   87044:	d9000117 	ldw	r4,4(sp)
   87048:	41000515 	stw	r4,20(r8)
   8704c:	180b003a 	cmpeq	r5,r3,zero
   87050:	01000084 	movi	r4,2
   87054:	214bc83a 	sub	r5,r4,r5
   87058:	40c00615 	stw	r3,24(r8)
   8705c:	41400415 	stw	r5,16(r8)
   87060:	4800191e 	bne	r9,zero,870c8 <__d2b+0xe8>
   87064:	280690ba 	slli	r3,r5,2
   87068:	10bef384 	addi	r2,r2,-1074
   8706c:	90800015 	stw	r2,0(r18)
   87070:	40c5883a 	add	r2,r8,r3
   87074:	11000417 	ldw	r4,16(r2)
   87078:	00866280 	call	86628 <__hi0bits>
   8707c:	280a917a 	slli	r5,r5,5
   87080:	d8c00617 	ldw	r3,24(sp)
   87084:	2885c83a 	sub	r2,r5,r2
   87088:	18800015 	stw	r2,0(r3)
   8708c:	4005883a 	mov	r2,r8
   87090:	dfc00517 	ldw	ra,20(sp)
   87094:	dc800417 	ldw	r18,16(sp)
   87098:	dc400317 	ldw	r17,12(sp)
   8709c:	dc000217 	ldw	r16,8(sp)
   870a0:	dec00604 	addi	sp,sp,24
   870a4:	f800283a 	ret
   870a8:	d809883a 	mov	r4,sp
   870ac:	00866900 	call	86690 <__lo0bits>
   870b0:	d8c00017 	ldw	r3,0(sp)
   870b4:	01400044 	movi	r5,1
   870b8:	41400415 	stw	r5,16(r8)
   870bc:	40c00515 	stw	r3,20(r8)
   870c0:	10800804 	addi	r2,r2,32
   870c4:	483fe726 	beq	r9,zero,87064 <__d2b+0x84>
   870c8:	00c00d44 	movi	r3,53
   870cc:	4a7ef344 	addi	r9,r9,-1075
   870d0:	4893883a 	add	r9,r9,r2
   870d4:	1885c83a 	sub	r2,r3,r2
   870d8:	d8c00617 	ldw	r3,24(sp)
   870dc:	92400015 	stw	r9,0(r18)
   870e0:	18800015 	stw	r2,0(r3)
   870e4:	4005883a 	mov	r2,r8
   870e8:	dfc00517 	ldw	ra,20(sp)
   870ec:	dc800417 	ldw	r18,16(sp)
   870f0:	dc400317 	ldw	r17,12(sp)
   870f4:	dc000217 	ldw	r16,8(sp)
   870f8:	dec00604 	addi	sp,sp,24
   870fc:	f800283a 	ret
   87100:	01000804 	movi	r4,32
   87104:	2089c83a 	sub	r4,r4,r2
   87108:	1908983a 	sll	r4,r3,r4
   8710c:	d9400117 	ldw	r5,4(sp)
   87110:	1886d83a 	srl	r3,r3,r2
   87114:	2148b03a 	or	r4,r4,r5
   87118:	41000515 	stw	r4,20(r8)
   8711c:	d8c00015 	stw	r3,0(sp)
   87120:	003fca06 	br	8704c <__d2b+0x6c>

00087124 <__ratio>:
   87124:	defffd04 	addi	sp,sp,-12
   87128:	2817883a 	mov	r11,r5
   8712c:	201b883a 	mov	r13,r4
   87130:	d9400104 	addi	r5,sp,4
   87134:	dfc00215 	stw	ra,8(sp)
   87138:	0086ef00 	call	86ef0 <__b2d>
   8713c:	5809883a 	mov	r4,r11
   87140:	d80b883a 	mov	r5,sp
   87144:	1019883a 	mov	r12,r2
   87148:	1815883a 	mov	r10,r3
   8714c:	0086ef00 	call	86ef0 <__b2d>
   87150:	69400417 	ldw	r5,16(r13)
   87154:	59000417 	ldw	r4,16(r11)
   87158:	d9800117 	ldw	r6,4(sp)
   8715c:	2909c83a 	sub	r4,r5,r4
   87160:	d9400017 	ldw	r5,0(sp)
   87164:	2008917a 	slli	r4,r4,5
   87168:	314bc83a 	sub	r5,r6,r5
   8716c:	290b883a 	add	r5,r5,r4
   87170:	01400a0e 	bge	zero,r5,8719c <__ratio+0x78>
   87174:	280a953a 	slli	r5,r5,20
   87178:	6009883a 	mov	r4,r12
   8717c:	100d883a 	mov	r6,r2
   87180:	2a95883a 	add	r10,r5,r10
   87184:	500b883a 	mov	r5,r10
   87188:	180f883a 	mov	r7,r3
   8718c:	008b31c0 	call	8b31c <__divdf3>
   87190:	dfc00217 	ldw	ra,8(sp)
   87194:	dec00304 	addi	sp,sp,12
   87198:	f800283a 	ret
   8719c:	280a953a 	slli	r5,r5,20
   871a0:	6009883a 	mov	r4,r12
   871a4:	100d883a 	mov	r6,r2
   871a8:	1947c83a 	sub	r3,r3,r5
   871ac:	180f883a 	mov	r7,r3
   871b0:	500b883a 	mov	r5,r10
   871b4:	008b31c0 	call	8b31c <__divdf3>
   871b8:	dfc00217 	ldw	ra,8(sp)
   871bc:	dec00304 	addi	sp,sp,12
   871c0:	f800283a 	ret

000871c4 <_mprec_log10>:
   871c4:	defffe04 	addi	sp,sp,-8
   871c8:	dc000015 	stw	r16,0(sp)
   871cc:	dfc00115 	stw	ra,4(sp)
   871d0:	008005c4 	movi	r2,23
   871d4:	2021883a 	mov	r16,r4
   871d8:	11000d0e 	bge	r2,r4,87210 <_mprec_log10+0x4c>
   871dc:	0005883a 	mov	r2,zero
   871e0:	00cffc34 	movhi	r3,16368
   871e4:	843fffc4 	addi	r16,r16,-1
   871e8:	1009883a 	mov	r4,r2
   871ec:	180b883a 	mov	r5,r3
   871f0:	000d883a 	mov	r6,zero
   871f4:	01d00934 	movhi	r7,16420
   871f8:	008bf000 	call	8bf00 <__muldf3>
   871fc:	803ff91e 	bne	r16,zero,871e4 <_mprec_log10+0x20>
   87200:	dfc00117 	ldw	ra,4(sp)
   87204:	dc000017 	ldw	r16,0(sp)
   87208:	dec00204 	addi	sp,sp,8
   8720c:	f800283a 	ret
   87210:	202090fa 	slli	r16,r4,3
   87214:	00800274 	movhi	r2,9
   87218:	10bf3304 	addi	r2,r2,-820
   8721c:	1421883a 	add	r16,r2,r16
   87220:	80800017 	ldw	r2,0(r16)
   87224:	80c00117 	ldw	r3,4(r16)
   87228:	dfc00117 	ldw	ra,4(sp)
   8722c:	dc000017 	ldw	r16,0(sp)
   87230:	dec00204 	addi	sp,sp,8
   87234:	f800283a 	ret

00087238 <__copybits>:
   87238:	297fffc4 	addi	r5,r5,-1
   8723c:	2811d17a 	srai	r8,r5,5
   87240:	31c00417 	ldw	r7,16(r6)
   87244:	30800504 	addi	r2,r6,20
   87248:	42000044 	addi	r8,r8,1
   8724c:	39cf883a 	add	r7,r7,r7
   87250:	4211883a 	add	r8,r8,r8
   87254:	39cf883a 	add	r7,r7,r7
   87258:	4211883a 	add	r8,r8,r8
   8725c:	11cf883a 	add	r7,r2,r7
   87260:	2211883a 	add	r8,r4,r8
   87264:	11c00d2e 	bgeu	r2,r7,8729c <__copybits+0x64>
   87268:	2007883a 	mov	r3,r4
   8726c:	11400017 	ldw	r5,0(r2)
   87270:	18c00104 	addi	r3,r3,4
   87274:	10800104 	addi	r2,r2,4
   87278:	197fff15 	stw	r5,-4(r3)
   8727c:	11fffb36 	bltu	r2,r7,8726c <__copybits+0x34>
   87280:	3985c83a 	sub	r2,r7,r6
   87284:	10bffac4 	addi	r2,r2,-21
   87288:	1004d0ba 	srli	r2,r2,2
   8728c:	10800044 	addi	r2,r2,1
   87290:	1085883a 	add	r2,r2,r2
   87294:	1085883a 	add	r2,r2,r2
   87298:	2089883a 	add	r4,r4,r2
   8729c:	2200032e 	bgeu	r4,r8,872ac <__copybits+0x74>
   872a0:	20000015 	stw	zero,0(r4)
   872a4:	21000104 	addi	r4,r4,4
   872a8:	223ffd36 	bltu	r4,r8,872a0 <__copybits+0x68>
   872ac:	f800283a 	ret

000872b0 <__any_on>:
   872b0:	20800417 	ldw	r2,16(r4)
   872b4:	2807d17a 	srai	r3,r5,5
   872b8:	21000504 	addi	r4,r4,20
   872bc:	10c00d0e 	bge	r2,r3,872f4 <__any_on+0x44>
   872c0:	1085883a 	add	r2,r2,r2
   872c4:	1085883a 	add	r2,r2,r2
   872c8:	2085883a 	add	r2,r4,r2
   872cc:	2080182e 	bgeu	r4,r2,87330 <__any_on+0x80>
   872d0:	10ffff17 	ldw	r3,-4(r2)
   872d4:	10bfff04 	addi	r2,r2,-4
   872d8:	1800041e 	bne	r3,zero,872ec <__any_on+0x3c>
   872dc:	2080142e 	bgeu	r4,r2,87330 <__any_on+0x80>
   872e0:	10bfff04 	addi	r2,r2,-4
   872e4:	10c00017 	ldw	r3,0(r2)
   872e8:	183ffc26 	beq	r3,zero,872dc <__any_on+0x2c>
   872ec:	00800044 	movi	r2,1
   872f0:	f800283a 	ret
   872f4:	18800a0e 	bge	r3,r2,87320 <__any_on+0x70>
   872f8:	18c7883a 	add	r3,r3,r3
   872fc:	18c7883a 	add	r3,r3,r3
   87300:	294007cc 	andi	r5,r5,31
   87304:	20c5883a 	add	r2,r4,r3
   87308:	283ff026 	beq	r5,zero,872cc <__any_on+0x1c>
   8730c:	10c00017 	ldw	r3,0(r2)
   87310:	194cd83a 	srl	r6,r3,r5
   87314:	314a983a 	sll	r5,r6,r5
   87318:	28fff41e 	bne	r5,r3,872ec <__any_on+0x3c>
   8731c:	003feb06 	br	872cc <__any_on+0x1c>
   87320:	18c7883a 	add	r3,r3,r3
   87324:	18c7883a 	add	r3,r3,r3
   87328:	20c5883a 	add	r2,r4,r3
   8732c:	003fe706 	br	872cc <__any_on+0x1c>
   87330:	0005883a 	mov	r2,zero
   87334:	f800283a 	ret

00087338 <_realloc_r>:
   87338:	defff604 	addi	sp,sp,-40
   8733c:	dd000415 	stw	r20,16(sp)
   87340:	dc000015 	stw	r16,0(sp)
   87344:	dfc00915 	stw	ra,36(sp)
   87348:	df000815 	stw	fp,32(sp)
   8734c:	ddc00715 	stw	r23,28(sp)
   87350:	dd800615 	stw	r22,24(sp)
   87354:	dd400515 	stw	r21,20(sp)
   87358:	dcc00315 	stw	r19,12(sp)
   8735c:	dc800215 	stw	r18,8(sp)
   87360:	dc400115 	stw	r17,4(sp)
   87364:	2821883a 	mov	r16,r5
   87368:	3029883a 	mov	r20,r6
   8736c:	28009a26 	beq	r5,zero,875d8 <_realloc_r+0x2a0>
   87370:	202b883a 	mov	r21,r4
   87374:	008d7f00 	call	8d7f0 <__malloc_lock>
   87378:	80ffff17 	ldw	r3,-4(r16)
   8737c:	047fff04 	movi	r17,-4
   87380:	a08002c4 	addi	r2,r20,11
   87384:	01000584 	movi	r4,22
   87388:	84fffe04 	addi	r19,r16,-8
   8738c:	1c62703a 	and	r17,r3,r17
   87390:	2080372e 	bgeu	r4,r2,87470 <_realloc_r+0x138>
   87394:	04bffe04 	movi	r18,-8
   87398:	14a4703a 	and	r18,r2,r18
   8739c:	9005883a 	mov	r2,r18
   873a0:	90005b16 	blt	r18,zero,87510 <_realloc_r+0x1d8>
   873a4:	95005a36 	bltu	r18,r20,87510 <_realloc_r+0x1d8>
   873a8:	8880340e 	bge	r17,r2,8747c <_realloc_r+0x144>
   873ac:	05c00274 	movhi	r23,9
   873b0:	bdc0df04 	addi	r23,r23,892
   873b4:	b9000217 	ldw	r4,8(r23)
   873b8:	9c4b883a 	add	r5,r19,r17
   873bc:	21409626 	beq	r4,r5,87618 <_realloc_r+0x2e0>
   873c0:	29800117 	ldw	r6,4(r5)
   873c4:	01ffff84 	movi	r7,-2
   873c8:	31ce703a 	and	r7,r6,r7
   873cc:	29cf883a 	add	r7,r5,r7
   873d0:	39c00117 	ldw	r7,4(r7)
   873d4:	39c0004c 	andi	r7,r7,1
   873d8:	38004226 	beq	r7,zero,874e4 <_realloc_r+0x1ac>
   873dc:	000d883a 	mov	r6,zero
   873e0:	000b883a 	mov	r5,zero
   873e4:	18c0004c 	andi	r3,r3,1
   873e8:	18005c1e 	bne	r3,zero,8755c <_realloc_r+0x224>
   873ec:	85bffe17 	ldw	r22,-8(r16)
   873f0:	00ffff04 	movi	r3,-4
   873f4:	9dadc83a 	sub	r22,r19,r22
   873f8:	b1c00117 	ldw	r7,4(r22)
   873fc:	38c6703a 	and	r3,r7,r3
   87400:	28005426 	beq	r5,zero,87554 <_realloc_r+0x21c>
   87404:	1c47883a 	add	r3,r3,r17
   87408:	2900bf26 	beq	r5,r4,87708 <_realloc_r+0x3d0>
   8740c:	30ef883a 	add	r23,r6,r3
   87410:	b8807e16 	blt	r23,r2,8760c <_realloc_r+0x2d4>
   87414:	28800317 	ldw	r2,12(r5)
   87418:	28c00217 	ldw	r3,8(r5)
   8741c:	89bfff04 	addi	r6,r17,-4
   87420:	01000904 	movi	r4,36
   87424:	18800315 	stw	r2,12(r3)
   87428:	10c00215 	stw	r3,8(r2)
   8742c:	b1400217 	ldw	r5,8(r22)
   87430:	b0c00317 	ldw	r3,12(r22)
   87434:	b5000204 	addi	r20,r22,8
   87438:	28c00315 	stw	r3,12(r5)
   8743c:	19400215 	stw	r5,8(r3)
   87440:	21808536 	bltu	r4,r6,87658 <_realloc_r+0x320>
   87444:	008004c4 	movi	r2,19
   87448:	1180932e 	bgeu	r2,r6,87698 <_realloc_r+0x360>
   8744c:	80800017 	ldw	r2,0(r16)
   87450:	b0800215 	stw	r2,8(r22)
   87454:	80800117 	ldw	r2,4(r16)
   87458:	b0800315 	stw	r2,12(r22)
   8745c:	008006c4 	movi	r2,27
   87460:	1180df36 	bltu	r2,r6,877e0 <_realloc_r+0x4a8>
   87464:	b0c00404 	addi	r3,r22,16
   87468:	84000204 	addi	r16,r16,8
   8746c:	00008b06 	br	8769c <_realloc_r+0x364>
   87470:	00800404 	movi	r2,16
   87474:	1025883a 	mov	r18,r2
   87478:	003fca06 	br	873a4 <_realloc_r+0x6c>
   8747c:	8029883a 	mov	r20,r16
   87480:	8c8dc83a 	sub	r6,r17,r18
   87484:	008003c4 	movi	r2,15
   87488:	18c0004c 	andi	r3,r3,1
   8748c:	11802436 	bltu	r2,r6,87520 <_realloc_r+0x1e8>
   87490:	1c46b03a 	or	r3,r3,r17
   87494:	98c00115 	stw	r3,4(r19)
   87498:	9c63883a 	add	r17,r19,r17
   8749c:	88800117 	ldw	r2,4(r17)
   874a0:	10800054 	ori	r2,r2,1
   874a4:	88800115 	stw	r2,4(r17)
   874a8:	a809883a 	mov	r4,r21
   874ac:	008d8100 	call	8d810 <__malloc_unlock>
   874b0:	a005883a 	mov	r2,r20
   874b4:	dfc00917 	ldw	ra,36(sp)
   874b8:	df000817 	ldw	fp,32(sp)
   874bc:	ddc00717 	ldw	r23,28(sp)
   874c0:	dd800617 	ldw	r22,24(sp)
   874c4:	dd400517 	ldw	r21,20(sp)
   874c8:	dd000417 	ldw	r20,16(sp)
   874cc:	dcc00317 	ldw	r19,12(sp)
   874d0:	dc800217 	ldw	r18,8(sp)
   874d4:	dc400117 	ldw	r17,4(sp)
   874d8:	dc000017 	ldw	r16,0(sp)
   874dc:	dec00a04 	addi	sp,sp,40
   874e0:	f800283a 	ret
   874e4:	01ffff04 	movi	r7,-4
   874e8:	31cc703a 	and	r6,r6,r7
   874ec:	344f883a 	add	r7,r6,r17
   874f0:	38bfbc16 	blt	r7,r2,873e4 <_realloc_r+0xac>
   874f4:	28800317 	ldw	r2,12(r5)
   874f8:	29000217 	ldw	r4,8(r5)
   874fc:	8029883a 	mov	r20,r16
   87500:	3823883a 	mov	r17,r7
   87504:	20800315 	stw	r2,12(r4)
   87508:	11000215 	stw	r4,8(r2)
   8750c:	003fdc06 	br	87480 <_realloc_r+0x148>
   87510:	00800304 	movi	r2,12
   87514:	a8800015 	stw	r2,0(r21)
   87518:	0005883a 	mov	r2,zero
   8751c:	003fe506 	br	874b4 <_realloc_r+0x17c>
   87520:	1c86b03a 	or	r3,r3,r18
   87524:	9c8b883a 	add	r5,r19,r18
   87528:	98c00115 	stw	r3,4(r19)
   8752c:	30800054 	ori	r2,r6,1
   87530:	28800115 	stw	r2,4(r5)
   87534:	298d883a 	add	r6,r5,r6
   87538:	30800117 	ldw	r2,4(r6)
   8753c:	a809883a 	mov	r4,r21
   87540:	29400204 	addi	r5,r5,8
   87544:	10800054 	ori	r2,r2,1
   87548:	30800115 	stw	r2,4(r6)
   8754c:	0084ba40 	call	84ba4 <_free_r>
   87550:	003fd506 	br	874a8 <_realloc_r+0x170>
   87554:	1c6f883a 	add	r23,r3,r17
   87558:	b880370e 	bge	r23,r2,87638 <_realloc_r+0x300>
   8755c:	a00b883a 	mov	r5,r20
   87560:	a809883a 	mov	r4,r21
   87564:	00857080 	call	85708 <_malloc_r>
   87568:	1029883a 	mov	r20,r2
   8756c:	1000c026 	beq	r2,zero,87870 <_realloc_r+0x538>
   87570:	80ffff17 	ldw	r3,-4(r16)
   87574:	113ffe04 	addi	r4,r2,-8
   87578:	00bfff84 	movi	r2,-2
   8757c:	1884703a 	and	r2,r3,r2
   87580:	9885883a 	add	r2,r19,r2
   87584:	20809026 	beq	r4,r2,877c8 <_realloc_r+0x490>
   87588:	89bfff04 	addi	r6,r17,-4
   8758c:	00800904 	movi	r2,36
   87590:	11805936 	bltu	r2,r6,876f8 <_realloc_r+0x3c0>
   87594:	00c004c4 	movi	r3,19
   87598:	19803636 	bltu	r3,r6,87674 <_realloc_r+0x33c>
   8759c:	a005883a 	mov	r2,r20
   875a0:	8007883a 	mov	r3,r16
   875a4:	19000017 	ldw	r4,0(r3)
   875a8:	11000015 	stw	r4,0(r2)
   875ac:	19000117 	ldw	r4,4(r3)
   875b0:	11000115 	stw	r4,4(r2)
   875b4:	18c00217 	ldw	r3,8(r3)
   875b8:	10c00215 	stw	r3,8(r2)
   875bc:	800b883a 	mov	r5,r16
   875c0:	a809883a 	mov	r4,r21
   875c4:	0084ba40 	call	84ba4 <_free_r>
   875c8:	a809883a 	mov	r4,r21
   875cc:	008d8100 	call	8d810 <__malloc_unlock>
   875d0:	a005883a 	mov	r2,r20
   875d4:	003fb706 	br	874b4 <_realloc_r+0x17c>
   875d8:	300b883a 	mov	r5,r6
   875dc:	dfc00917 	ldw	ra,36(sp)
   875e0:	df000817 	ldw	fp,32(sp)
   875e4:	ddc00717 	ldw	r23,28(sp)
   875e8:	dd800617 	ldw	r22,24(sp)
   875ec:	dd400517 	ldw	r21,20(sp)
   875f0:	dd000417 	ldw	r20,16(sp)
   875f4:	dcc00317 	ldw	r19,12(sp)
   875f8:	dc800217 	ldw	r18,8(sp)
   875fc:	dc400117 	ldw	r17,4(sp)
   87600:	dc000017 	ldw	r16,0(sp)
   87604:	dec00a04 	addi	sp,sp,40
   87608:	00857081 	jmpi	85708 <_malloc_r>
   8760c:	182f883a 	mov	r23,r3
   87610:	b8bfd216 	blt	r23,r2,8755c <_realloc_r+0x224>
   87614:	00000806 	br	87638 <_realloc_r+0x300>
   87618:	21800117 	ldw	r6,4(r4)
   8761c:	017fff04 	movi	r5,-4
   87620:	91c00404 	addi	r7,r18,16
   87624:	314c703a 	and	r6,r6,r5
   87628:	344b883a 	add	r5,r6,r17
   8762c:	29c0250e 	bge	r5,r7,876c4 <_realloc_r+0x38c>
   87630:	200b883a 	mov	r5,r4
   87634:	003f6b06 	br	873e4 <_realloc_r+0xac>
   87638:	b0800317 	ldw	r2,12(r22)
   8763c:	b0c00217 	ldw	r3,8(r22)
   87640:	89bfff04 	addi	r6,r17,-4
   87644:	01000904 	movi	r4,36
   87648:	18800315 	stw	r2,12(r3)
   8764c:	10c00215 	stw	r3,8(r2)
   87650:	b5000204 	addi	r20,r22,8
   87654:	21bf7b2e 	bgeu	r4,r6,87444 <_realloc_r+0x10c>
   87658:	a009883a 	mov	r4,r20
   8765c:	800b883a 	mov	r5,r16
   87660:	00860c00 	call	860c0 <memmove>
   87664:	b0c00117 	ldw	r3,4(r22)
   87668:	b823883a 	mov	r17,r23
   8766c:	b027883a 	mov	r19,r22
   87670:	003f8306 	br	87480 <_realloc_r+0x148>
   87674:	80c00017 	ldw	r3,0(r16)
   87678:	a0c00015 	stw	r3,0(r20)
   8767c:	80c00117 	ldw	r3,4(r16)
   87680:	a0c00115 	stw	r3,4(r20)
   87684:	00c006c4 	movi	r3,27
   87688:	19804736 	bltu	r3,r6,877a8 <_realloc_r+0x470>
   8768c:	a0800204 	addi	r2,r20,8
   87690:	80c00204 	addi	r3,r16,8
   87694:	003fc306 	br	875a4 <_realloc_r+0x26c>
   87698:	a007883a 	mov	r3,r20
   8769c:	80800017 	ldw	r2,0(r16)
   876a0:	b823883a 	mov	r17,r23
   876a4:	b027883a 	mov	r19,r22
   876a8:	18800015 	stw	r2,0(r3)
   876ac:	80800117 	ldw	r2,4(r16)
   876b0:	18800115 	stw	r2,4(r3)
   876b4:	80800217 	ldw	r2,8(r16)
   876b8:	18800215 	stw	r2,8(r3)
   876bc:	b0c00117 	ldw	r3,4(r22)
   876c0:	003f6f06 	br	87480 <_realloc_r+0x148>
   876c4:	9ca7883a 	add	r19,r19,r18
   876c8:	2c85c83a 	sub	r2,r5,r18
   876cc:	bcc00215 	stw	r19,8(r23)
   876d0:	10800054 	ori	r2,r2,1
   876d4:	98800115 	stw	r2,4(r19)
   876d8:	80bfff17 	ldw	r2,-4(r16)
   876dc:	a809883a 	mov	r4,r21
   876e0:	1080004c 	andi	r2,r2,1
   876e4:	90a4b03a 	or	r18,r18,r2
   876e8:	84bfff15 	stw	r18,-4(r16)
   876ec:	008d8100 	call	8d810 <__malloc_unlock>
   876f0:	8005883a 	mov	r2,r16
   876f4:	003f6f06 	br	874b4 <_realloc_r+0x17c>
   876f8:	a009883a 	mov	r4,r20
   876fc:	800b883a 	mov	r5,r16
   87700:	00860c00 	call	860c0 <memmove>
   87704:	003fad06 	br	875bc <_realloc_r+0x284>
   87708:	30f9883a 	add	fp,r6,r3
   8770c:	91000404 	addi	r4,r18,16
   87710:	e13fbe16 	blt	fp,r4,8760c <_realloc_r+0x2d4>
   87714:	b0800317 	ldw	r2,12(r22)
   87718:	b0c00217 	ldw	r3,8(r22)
   8771c:	89bfff04 	addi	r6,r17,-4
   87720:	01000904 	movi	r4,36
   87724:	18800315 	stw	r2,12(r3)
   87728:	10c00215 	stw	r3,8(r2)
   8772c:	b4400204 	addi	r17,r22,8
   87730:	21804336 	bltu	r4,r6,87840 <_realloc_r+0x508>
   87734:	008004c4 	movi	r2,19
   87738:	11803f2e 	bgeu	r2,r6,87838 <_realloc_r+0x500>
   8773c:	80800017 	ldw	r2,0(r16)
   87740:	b0800215 	stw	r2,8(r22)
   87744:	80800117 	ldw	r2,4(r16)
   87748:	b0800315 	stw	r2,12(r22)
   8774c:	008006c4 	movi	r2,27
   87750:	11803f36 	bltu	r2,r6,87850 <_realloc_r+0x518>
   87754:	b0c00404 	addi	r3,r22,16
   87758:	84000204 	addi	r16,r16,8
   8775c:	80800017 	ldw	r2,0(r16)
   87760:	18800015 	stw	r2,0(r3)
   87764:	80800117 	ldw	r2,4(r16)
   87768:	18800115 	stw	r2,4(r3)
   8776c:	80800217 	ldw	r2,8(r16)
   87770:	18800215 	stw	r2,8(r3)
   87774:	b487883a 	add	r3,r22,r18
   87778:	e485c83a 	sub	r2,fp,r18
   8777c:	b8c00215 	stw	r3,8(r23)
   87780:	10800054 	ori	r2,r2,1
   87784:	18800115 	stw	r2,4(r3)
   87788:	b0800117 	ldw	r2,4(r22)
   8778c:	a809883a 	mov	r4,r21
   87790:	1080004c 	andi	r2,r2,1
   87794:	90a4b03a 	or	r18,r18,r2
   87798:	b4800115 	stw	r18,4(r22)
   8779c:	008d8100 	call	8d810 <__malloc_unlock>
   877a0:	8805883a 	mov	r2,r17
   877a4:	003f4306 	br	874b4 <_realloc_r+0x17c>
   877a8:	80c00217 	ldw	r3,8(r16)
   877ac:	a0c00215 	stw	r3,8(r20)
   877b0:	80c00317 	ldw	r3,12(r16)
   877b4:	a0c00315 	stw	r3,12(r20)
   877b8:	30801126 	beq	r6,r2,87800 <_realloc_r+0x4c8>
   877bc:	a0800404 	addi	r2,r20,16
   877c0:	80c00404 	addi	r3,r16,16
   877c4:	003f7706 	br	875a4 <_realloc_r+0x26c>
   877c8:	a13fff17 	ldw	r4,-4(r20)
   877cc:	00bfff04 	movi	r2,-4
   877d0:	8029883a 	mov	r20,r16
   877d4:	2084703a 	and	r2,r4,r2
   877d8:	88a3883a 	add	r17,r17,r2
   877dc:	003f2806 	br	87480 <_realloc_r+0x148>
   877e0:	80800217 	ldw	r2,8(r16)
   877e4:	b0800415 	stw	r2,16(r22)
   877e8:	80800317 	ldw	r2,12(r16)
   877ec:	b0800515 	stw	r2,20(r22)
   877f0:	31000a26 	beq	r6,r4,8781c <_realloc_r+0x4e4>
   877f4:	b0c00604 	addi	r3,r22,24
   877f8:	84000404 	addi	r16,r16,16
   877fc:	003fa706 	br	8769c <_realloc_r+0x364>
   87800:	81000417 	ldw	r4,16(r16)
   87804:	a0800604 	addi	r2,r20,24
   87808:	80c00604 	addi	r3,r16,24
   8780c:	a1000415 	stw	r4,16(r20)
   87810:	81000517 	ldw	r4,20(r16)
   87814:	a1000515 	stw	r4,20(r20)
   87818:	003f6206 	br	875a4 <_realloc_r+0x26c>
   8781c:	80800417 	ldw	r2,16(r16)
   87820:	84000604 	addi	r16,r16,24
   87824:	b0c00804 	addi	r3,r22,32
   87828:	b0800615 	stw	r2,24(r22)
   8782c:	80bfff17 	ldw	r2,-4(r16)
   87830:	b0800715 	stw	r2,28(r22)
   87834:	003f9906 	br	8769c <_realloc_r+0x364>
   87838:	8807883a 	mov	r3,r17
   8783c:	003fc706 	br	8775c <_realloc_r+0x424>
   87840:	8809883a 	mov	r4,r17
   87844:	800b883a 	mov	r5,r16
   87848:	00860c00 	call	860c0 <memmove>
   8784c:	003fc906 	br	87774 <_realloc_r+0x43c>
   87850:	80800217 	ldw	r2,8(r16)
   87854:	b0800415 	stw	r2,16(r22)
   87858:	80800317 	ldw	r2,12(r16)
   8785c:	b0800515 	stw	r2,20(r22)
   87860:	31000726 	beq	r6,r4,87880 <_realloc_r+0x548>
   87864:	b0c00604 	addi	r3,r22,24
   87868:	84000404 	addi	r16,r16,16
   8786c:	003fbb06 	br	8775c <_realloc_r+0x424>
   87870:	a809883a 	mov	r4,r21
   87874:	008d8100 	call	8d810 <__malloc_unlock>
   87878:	0005883a 	mov	r2,zero
   8787c:	003f0d06 	br	874b4 <_realloc_r+0x17c>
   87880:	80800417 	ldw	r2,16(r16)
   87884:	84000604 	addi	r16,r16,24
   87888:	b0c00804 	addi	r3,r22,32
   8788c:	b0800615 	stw	r2,24(r22)
   87890:	80bfff17 	ldw	r2,-4(r16)
   87894:	b0800715 	stw	r2,28(r22)
   87898:	003fb006 	br	8775c <_realloc_r+0x424>

0008789c <lflush>:
   8789c:	20c0030b 	ldhu	r3,12(r4)
   878a0:	00800244 	movi	r2,9
   878a4:	18c0024c 	andi	r3,r3,9
   878a8:	18800226 	beq	r3,r2,878b4 <lflush+0x18>
   878ac:	0005883a 	mov	r2,zero
   878b0:	f800283a 	ret
   878b4:	00846941 	jmpi	84694 <fflush>

000878b8 <__srefill_r>:
   878b8:	defffd04 	addi	sp,sp,-12
   878bc:	dc400115 	stw	r17,4(sp)
   878c0:	dc000015 	stw	r16,0(sp)
   878c4:	dfc00215 	stw	ra,8(sp)
   878c8:	2023883a 	mov	r17,r4
   878cc:	2821883a 	mov	r16,r5
   878d0:	20000226 	beq	r4,zero,878dc <__srefill_r+0x24>
   878d4:	20800e17 	ldw	r2,56(r4)
   878d8:	10003f26 	beq	r2,zero,879d8 <__srefill_r+0x120>
   878dc:	8080030b 	ldhu	r2,12(r16)
   878e0:	1108000c 	andi	r4,r2,8192
   878e4:	1007883a 	mov	r3,r2
   878e8:	2000071e 	bne	r4,zero,87908 <__srefill_r+0x50>
   878ec:	81001917 	ldw	r4,100(r16)
   878f0:	10c80014 	ori	r3,r2,8192
   878f4:	00b7ffc4 	movi	r2,-8193
   878f8:	2088703a 	and	r4,r4,r2
   878fc:	80c0030d 	sth	r3,12(r16)
   87900:	1805883a 	mov	r2,r3
   87904:	81001915 	stw	r4,100(r16)
   87908:	80000115 	stw	zero,4(r16)
   8790c:	1900080c 	andi	r4,r3,32
   87910:	2000591e 	bne	r4,zero,87a78 <__srefill_r+0x1c0>
   87914:	1900010c 	andi	r4,r3,4
   87918:	20001e26 	beq	r4,zero,87994 <__srefill_r+0xdc>
   8791c:	81400c17 	ldw	r5,48(r16)
   87920:	28000826 	beq	r5,zero,87944 <__srefill_r+0x8c>
   87924:	80801004 	addi	r2,r16,64
   87928:	28800226 	beq	r5,r2,87934 <__srefill_r+0x7c>
   8792c:	8809883a 	mov	r4,r17
   87930:	0084ba40 	call	84ba4 <_free_r>
   87934:	80800f17 	ldw	r2,60(r16)
   87938:	80000c15 	stw	zero,48(r16)
   8793c:	80800115 	stw	r2,4(r16)
   87940:	1000371e 	bne	r2,zero,87a20 <__srefill_r+0x168>
   87944:	80800417 	ldw	r2,16(r16)
   87948:	10004d26 	beq	r2,zero,87a80 <__srefill_r+0x1c8>
   8794c:	8080030b 	ldhu	r2,12(r16)
   87950:	108000cc 	andi	r2,r2,3
   87954:	1000221e 	bne	r2,zero,879e0 <__srefill_r+0x128>
   87958:	81800417 	ldw	r6,16(r16)
   8795c:	80800817 	ldw	r2,32(r16)
   87960:	81400717 	ldw	r5,28(r16)
   87964:	81c00517 	ldw	r7,20(r16)
   87968:	81800015 	stw	r6,0(r16)
   8796c:	8809883a 	mov	r4,r17
   87970:	103ee83a 	callr	r2
   87974:	80800115 	stw	r2,4(r16)
   87978:	00800d0e 	bge	zero,r2,879b0 <__srefill_r+0xf8>
   8797c:	0005883a 	mov	r2,zero
   87980:	dfc00217 	ldw	ra,8(sp)
   87984:	dc400117 	ldw	r17,4(sp)
   87988:	dc000017 	ldw	r16,0(sp)
   8798c:	dec00304 	addi	sp,sp,12
   87990:	f800283a 	ret
   87994:	1900040c 	andi	r4,r3,16
   87998:	20003326 	beq	r4,zero,87a68 <__srefill_r+0x1b0>
   8799c:	18c0020c 	andi	r3,r3,8
   879a0:	1800271e 	bne	r3,zero,87a40 <__srefill_r+0x188>
   879a4:	10800114 	ori	r2,r2,4
   879a8:	8080030d 	sth	r2,12(r16)
   879ac:	003fe506 	br	87944 <__srefill_r+0x8c>
   879b0:	80c0030b 	ldhu	r3,12(r16)
   879b4:	1000111e 	bne	r2,zero,879fc <__srefill_r+0x144>
   879b8:	00bfffc4 	movi	r2,-1
   879bc:	18c00814 	ori	r3,r3,32
   879c0:	80c0030d 	sth	r3,12(r16)
   879c4:	dfc00217 	ldw	ra,8(sp)
   879c8:	dc400117 	ldw	r17,4(sp)
   879cc:	dc000017 	ldw	r16,0(sp)
   879d0:	dec00304 	addi	sp,sp,12
   879d4:	f800283a 	ret
   879d8:	00847700 	call	84770 <__sinit>
   879dc:	003fbf06 	br	878dc <__srefill_r+0x24>
   879e0:	00800274 	movhi	r2,9
   879e4:	10866304 	addi	r2,r2,6540
   879e8:	11000017 	ldw	r4,0(r2)
   879ec:	01400234 	movhi	r5,8
   879f0:	295e2704 	addi	r5,r5,30876
   879f4:	00853200 	call	85320 <_fwalk>
   879f8:	003fd706 	br	87958 <__srefill_r+0xa0>
   879fc:	00bfffc4 	movi	r2,-1
   87a00:	18c01014 	ori	r3,r3,64
   87a04:	80000115 	stw	zero,4(r16)
   87a08:	80c0030d 	sth	r3,12(r16)
   87a0c:	dfc00217 	ldw	ra,8(sp)
   87a10:	dc400117 	ldw	r17,4(sp)
   87a14:	dc000017 	ldw	r16,0(sp)
   87a18:	dec00304 	addi	sp,sp,12
   87a1c:	f800283a 	ret
   87a20:	80c00e17 	ldw	r3,56(r16)
   87a24:	0005883a 	mov	r2,zero
   87a28:	80c00015 	stw	r3,0(r16)
   87a2c:	dfc00217 	ldw	ra,8(sp)
   87a30:	dc400117 	ldw	r17,4(sp)
   87a34:	dc000017 	ldw	r16,0(sp)
   87a38:	dec00304 	addi	sp,sp,12
   87a3c:	f800283a 	ret
   87a40:	8809883a 	mov	r4,r17
   87a44:	800b883a 	mov	r5,r16
   87a48:	00844500 	call	84450 <_fflush_r>
   87a4c:	10000a1e 	bne	r2,zero,87a78 <__srefill_r+0x1c0>
   87a50:	8080030b 	ldhu	r2,12(r16)
   87a54:	00fffdc4 	movi	r3,-9
   87a58:	80000215 	stw	zero,8(r16)
   87a5c:	1884703a 	and	r2,r3,r2
   87a60:	80000615 	stw	zero,24(r16)
   87a64:	003fcf06 	br	879a4 <__srefill_r+0xec>
   87a68:	00c00244 	movi	r3,9
   87a6c:	88c00015 	stw	r3,0(r17)
   87a70:	10801014 	ori	r2,r2,64
   87a74:	8080030d 	sth	r2,12(r16)
   87a78:	00bfffc4 	movi	r2,-1
   87a7c:	003fc006 	br	87980 <__srefill_r+0xc8>
   87a80:	8809883a 	mov	r4,r17
   87a84:	800b883a 	mov	r5,r16
   87a88:	00855540 	call	85554 <__smakebuf_r>
   87a8c:	003faf06 	br	8794c <__srefill_r+0x94>

00087a90 <__fpclassifyd>:
   87a90:	00a00034 	movhi	r2,32768
   87a94:	10bfffc4 	addi	r2,r2,-1
   87a98:	288a703a 	and	r5,r5,r2
   87a9c:	28000726 	beq	r5,zero,87abc <__fpclassifyd+0x2c>
   87aa0:	00bffc34 	movhi	r2,65520
   87aa4:	2885883a 	add	r2,r5,r2
   87aa8:	00dff834 	movhi	r3,32736
   87aac:	18ffffc4 	addi	r3,r3,-1
   87ab0:	18800636 	bltu	r3,r2,87acc <__fpclassifyd+0x3c>
   87ab4:	00800104 	movi	r2,4
   87ab8:	f800283a 	ret
   87abc:	2005003a 	cmpeq	r2,r4,zero
   87ac0:	00c000c4 	movi	r3,3
   87ac4:	1885c83a 	sub	r2,r3,r2
   87ac8:	f800283a 	ret
   87acc:	00800434 	movhi	r2,16
   87ad0:	10bfffc4 	addi	r2,r2,-1
   87ad4:	11400236 	bltu	r2,r5,87ae0 <__fpclassifyd+0x50>
   87ad8:	008000c4 	movi	r2,3
   87adc:	f800283a 	ret
   87ae0:	009ffc34 	movhi	r2,32752
   87ae4:	28800226 	beq	r5,r2,87af0 <__fpclassifyd+0x60>
   87ae8:	0005883a 	mov	r2,zero
   87aec:	f800283a 	ret
   87af0:	2005003a 	cmpeq	r2,r4,zero
   87af4:	f800283a 	ret

00087af8 <_sbrk_r>:
   87af8:	defffd04 	addi	sp,sp,-12
   87afc:	dc400115 	stw	r17,4(sp)
   87b00:	dc000015 	stw	r16,0(sp)
   87b04:	2023883a 	mov	r17,r4
   87b08:	04000274 	movhi	r16,9
   87b0c:	840d3404 	addi	r16,r16,13520
   87b10:	2809883a 	mov	r4,r5
   87b14:	dfc00215 	stw	ra,8(sp)
   87b18:	80000015 	stw	zero,0(r16)
   87b1c:	008d9f80 	call	8d9f8 <sbrk>
   87b20:	00ffffc4 	movi	r3,-1
   87b24:	10c00526 	beq	r2,r3,87b3c <_sbrk_r+0x44>
   87b28:	dfc00217 	ldw	ra,8(sp)
   87b2c:	dc400117 	ldw	r17,4(sp)
   87b30:	dc000017 	ldw	r16,0(sp)
   87b34:	dec00304 	addi	sp,sp,12
   87b38:	f800283a 	ret
   87b3c:	80c00017 	ldw	r3,0(r16)
   87b40:	183ff926 	beq	r3,zero,87b28 <_sbrk_r+0x30>
   87b44:	88c00015 	stw	r3,0(r17)
   87b48:	dfc00217 	ldw	ra,8(sp)
   87b4c:	dc400117 	ldw	r17,4(sp)
   87b50:	dc000017 	ldw	r16,0(sp)
   87b54:	dec00304 	addi	sp,sp,12
   87b58:	f800283a 	ret

00087b5c <__sread>:
   87b5c:	defffe04 	addi	sp,sp,-8
   87b60:	dc000015 	stw	r16,0(sp)
   87b64:	2821883a 	mov	r16,r5
   87b68:	2940038f 	ldh	r5,14(r5)
   87b6c:	dfc00115 	stw	ra,4(sp)
   87b70:	00898d40 	call	898d4 <_read_r>
   87b74:	10000716 	blt	r2,zero,87b94 <__sread+0x38>
   87b78:	80c01417 	ldw	r3,80(r16)
   87b7c:	1887883a 	add	r3,r3,r2
   87b80:	80c01415 	stw	r3,80(r16)
   87b84:	dfc00117 	ldw	ra,4(sp)
   87b88:	dc000017 	ldw	r16,0(sp)
   87b8c:	dec00204 	addi	sp,sp,8
   87b90:	f800283a 	ret
   87b94:	80c0030b 	ldhu	r3,12(r16)
   87b98:	18fbffcc 	andi	r3,r3,61439
   87b9c:	80c0030d 	sth	r3,12(r16)
   87ba0:	dfc00117 	ldw	ra,4(sp)
   87ba4:	dc000017 	ldw	r16,0(sp)
   87ba8:	dec00204 	addi	sp,sp,8
   87bac:	f800283a 	ret

00087bb0 <__seofread>:
   87bb0:	0005883a 	mov	r2,zero
   87bb4:	f800283a 	ret

00087bb8 <__swrite>:
   87bb8:	2880030b 	ldhu	r2,12(r5)
   87bbc:	defffb04 	addi	sp,sp,-20
   87bc0:	dcc00315 	stw	r19,12(sp)
   87bc4:	dc800215 	stw	r18,8(sp)
   87bc8:	dc400115 	stw	r17,4(sp)
   87bcc:	dc000015 	stw	r16,0(sp)
   87bd0:	dfc00415 	stw	ra,16(sp)
   87bd4:	10c0400c 	andi	r3,r2,256
   87bd8:	2821883a 	mov	r16,r5
   87bdc:	2027883a 	mov	r19,r4
   87be0:	3025883a 	mov	r18,r6
   87be4:	3823883a 	mov	r17,r7
   87be8:	18000526 	beq	r3,zero,87c00 <__swrite+0x48>
   87bec:	2940038f 	ldh	r5,14(r5)
   87bf0:	000d883a 	mov	r6,zero
   87bf4:	01c00084 	movi	r7,2
   87bf8:	00898680 	call	89868 <_lseek_r>
   87bfc:	8080030b 	ldhu	r2,12(r16)
   87c00:	8140038f 	ldh	r5,14(r16)
   87c04:	10bbffcc 	andi	r2,r2,61439
   87c08:	9809883a 	mov	r4,r19
   87c0c:	900d883a 	mov	r6,r18
   87c10:	880f883a 	mov	r7,r17
   87c14:	8080030d 	sth	r2,12(r16)
   87c18:	dfc00417 	ldw	ra,16(sp)
   87c1c:	dcc00317 	ldw	r19,12(sp)
   87c20:	dc800217 	ldw	r18,8(sp)
   87c24:	dc400117 	ldw	r17,4(sp)
   87c28:	dc000017 	ldw	r16,0(sp)
   87c2c:	dec00504 	addi	sp,sp,20
   87c30:	00892bc1 	jmpi	892bc <_write_r>

00087c34 <__sseek>:
   87c34:	defffe04 	addi	sp,sp,-8
   87c38:	dc000015 	stw	r16,0(sp)
   87c3c:	2821883a 	mov	r16,r5
   87c40:	2940038f 	ldh	r5,14(r5)
   87c44:	dfc00115 	stw	ra,4(sp)
   87c48:	00898680 	call	89868 <_lseek_r>
   87c4c:	00ffffc4 	movi	r3,-1
   87c50:	10c00826 	beq	r2,r3,87c74 <__sseek+0x40>
   87c54:	80c0030b 	ldhu	r3,12(r16)
   87c58:	80801415 	stw	r2,80(r16)
   87c5c:	18c40014 	ori	r3,r3,4096
   87c60:	80c0030d 	sth	r3,12(r16)
   87c64:	dfc00117 	ldw	ra,4(sp)
   87c68:	dc000017 	ldw	r16,0(sp)
   87c6c:	dec00204 	addi	sp,sp,8
   87c70:	f800283a 	ret
   87c74:	80c0030b 	ldhu	r3,12(r16)
   87c78:	18fbffcc 	andi	r3,r3,61439
   87c7c:	80c0030d 	sth	r3,12(r16)
   87c80:	dfc00117 	ldw	ra,4(sp)
   87c84:	dc000017 	ldw	r16,0(sp)
   87c88:	dec00204 	addi	sp,sp,8
   87c8c:	f800283a 	ret

00087c90 <__sclose>:
   87c90:	2940038f 	ldh	r5,14(r5)
   87c94:	00893281 	jmpi	89328 <_close_r>

00087c98 <strcmp>:
   87c98:	2144b03a 	or	r2,r4,r5
   87c9c:	108000cc 	andi	r2,r2,3
   87ca0:	1000171e 	bne	r2,zero,87d00 <strcmp+0x68>
   87ca4:	20800017 	ldw	r2,0(r4)
   87ca8:	28c00017 	ldw	r3,0(r5)
   87cac:	10c0141e 	bne	r2,r3,87d00 <strcmp+0x68>
   87cb0:	027fbff4 	movhi	r9,65279
   87cb4:	4a7fbfc4 	addi	r9,r9,-257
   87cb8:	1247883a 	add	r3,r2,r9
   87cbc:	0084303a 	nor	r2,zero,r2
   87cc0:	1884703a 	and	r2,r3,r2
   87cc4:	02202074 	movhi	r8,32897
   87cc8:	42202004 	addi	r8,r8,-32640
   87ccc:	1204703a 	and	r2,r2,r8
   87cd0:	10000226 	beq	r2,zero,87cdc <strcmp+0x44>
   87cd4:	00001706 	br	87d34 <strcmp+0x9c>
   87cd8:	3000161e 	bne	r6,zero,87d34 <strcmp+0x9c>
   87cdc:	21000104 	addi	r4,r4,4
   87ce0:	20800017 	ldw	r2,0(r4)
   87ce4:	29400104 	addi	r5,r5,4
   87ce8:	28c00017 	ldw	r3,0(r5)
   87cec:	124f883a 	add	r7,r2,r9
   87cf0:	008c303a 	nor	r6,zero,r2
   87cf4:	398c703a 	and	r6,r7,r6
   87cf8:	320c703a 	and	r6,r6,r8
   87cfc:	10fff626 	beq	r2,r3,87cd8 <strcmp+0x40>
   87d00:	20800007 	ldb	r2,0(r4)
   87d04:	1000051e 	bne	r2,zero,87d1c <strcmp+0x84>
   87d08:	00000606 	br	87d24 <strcmp+0x8c>
   87d0c:	21000044 	addi	r4,r4,1
   87d10:	20800007 	ldb	r2,0(r4)
   87d14:	29400044 	addi	r5,r5,1
   87d18:	10000226 	beq	r2,zero,87d24 <strcmp+0x8c>
   87d1c:	28c00007 	ldb	r3,0(r5)
   87d20:	10fffa26 	beq	r2,r3,87d0c <strcmp+0x74>
   87d24:	20c00003 	ldbu	r3,0(r4)
   87d28:	28800003 	ldbu	r2,0(r5)
   87d2c:	1885c83a 	sub	r2,r3,r2
   87d30:	f800283a 	ret
   87d34:	0005883a 	mov	r2,zero
   87d38:	f800283a 	ret

00087d3c <__sprint_r.part.0>:
   87d3c:	28801917 	ldw	r2,100(r5)
   87d40:	defff604 	addi	sp,sp,-40
   87d44:	dd800615 	stw	r22,24(sp)
   87d48:	dcc00315 	stw	r19,12(sp)
   87d4c:	dfc00915 	stw	ra,36(sp)
   87d50:	df000815 	stw	fp,32(sp)
   87d54:	ddc00715 	stw	r23,28(sp)
   87d58:	dd400515 	stw	r21,20(sp)
   87d5c:	dd000415 	stw	r20,16(sp)
   87d60:	dc800215 	stw	r18,8(sp)
   87d64:	dc400115 	stw	r17,4(sp)
   87d68:	dc000015 	stw	r16,0(sp)
   87d6c:	1088000c 	andi	r2,r2,8192
   87d70:	2827883a 	mov	r19,r5
   87d74:	302d883a 	mov	r22,r6
   87d78:	10002d26 	beq	r2,zero,87e30 <__sprint_r.part.0+0xf4>
   87d7c:	30800217 	ldw	r2,8(r6)
   87d80:	35c00017 	ldw	r23,0(r6)
   87d84:	10002826 	beq	r2,zero,87e28 <__sprint_r.part.0+0xec>
   87d88:	202b883a 	mov	r21,r4
   87d8c:	bf000104 	addi	fp,r23,4
   87d90:	053fffc4 	movi	r20,-1
   87d94:	e4800017 	ldw	r18,0(fp)
   87d98:	bc400017 	ldw	r17,0(r23)
   87d9c:	0021883a 	mov	r16,zero
   87da0:	9024d0ba 	srli	r18,r18,2
   87da4:	04800316 	blt	zero,r18,87db4 <__sprint_r.part.0+0x78>
   87da8:	00001806 	br	87e0c <__sprint_r.part.0+0xd0>
   87dac:	8c400104 	addi	r17,r17,4
   87db0:	94001526 	beq	r18,r16,87e08 <__sprint_r.part.0+0xcc>
   87db4:	89400017 	ldw	r5,0(r17)
   87db8:	a809883a 	mov	r4,r21
   87dbc:	980d883a 	mov	r6,r19
   87dc0:	00895a00 	call	895a0 <_fputwc_r>
   87dc4:	84000044 	addi	r16,r16,1
   87dc8:	153ff81e 	bne	r2,r20,87dac <__sprint_r.part.0+0x70>
   87dcc:	a005883a 	mov	r2,r20
   87dd0:	b0000215 	stw	zero,8(r22)
   87dd4:	b0000115 	stw	zero,4(r22)
   87dd8:	dfc00917 	ldw	ra,36(sp)
   87ddc:	df000817 	ldw	fp,32(sp)
   87de0:	ddc00717 	ldw	r23,28(sp)
   87de4:	dd800617 	ldw	r22,24(sp)
   87de8:	dd400517 	ldw	r21,20(sp)
   87dec:	dd000417 	ldw	r20,16(sp)
   87df0:	dcc00317 	ldw	r19,12(sp)
   87df4:	dc800217 	ldw	r18,8(sp)
   87df8:	dc400117 	ldw	r17,4(sp)
   87dfc:	dc000017 	ldw	r16,0(sp)
   87e00:	dec00a04 	addi	sp,sp,40
   87e04:	f800283a 	ret
   87e08:	b0800217 	ldw	r2,8(r22)
   87e0c:	94a5883a 	add	r18,r18,r18
   87e10:	94a5883a 	add	r18,r18,r18
   87e14:	1485c83a 	sub	r2,r2,r18
   87e18:	b0800215 	stw	r2,8(r22)
   87e1c:	bdc00204 	addi	r23,r23,8
   87e20:	e7000204 	addi	fp,fp,8
   87e24:	103fdb1e 	bne	r2,zero,87d94 <__sprint_r.part.0+0x58>
   87e28:	0005883a 	mov	r2,zero
   87e2c:	003fe806 	br	87dd0 <__sprint_r.part.0+0x94>
   87e30:	0084e740 	call	84e74 <__sfvwrite_r>
   87e34:	003fe606 	br	87dd0 <__sprint_r.part.0+0x94>

00087e38 <__sprint_r>:
   87e38:	30c00217 	ldw	r3,8(r6)
   87e3c:	18000126 	beq	r3,zero,87e44 <__sprint_r+0xc>
   87e40:	0087d3c1 	jmpi	87d3c <__sprint_r.part.0>
   87e44:	30000115 	stw	zero,4(r6)
   87e48:	0005883a 	mov	r2,zero
   87e4c:	f800283a 	ret

00087e50 <___vfiprintf_internal_r>:
   87e50:	defec804 	addi	sp,sp,-1248
   87e54:	dfc13715 	stw	ra,1244(sp)
   87e58:	df013615 	stw	fp,1240(sp)
   87e5c:	ddc13515 	stw	r23,1236(sp)
   87e60:	dd813415 	stw	r22,1232(sp)
   87e64:	dd413315 	stw	r21,1228(sp)
   87e68:	dd013215 	stw	r20,1224(sp)
   87e6c:	dcc13115 	stw	r19,1220(sp)
   87e70:	dc813015 	stw	r18,1216(sp)
   87e74:	dc412f15 	stw	r17,1212(sp)
   87e78:	dc012e15 	stw	r16,1208(sp)
   87e7c:	d9012215 	stw	r4,1160(sp)
   87e80:	d9412015 	stw	r5,1152(sp)
   87e84:	d9c12315 	stw	r7,1164(sp)
   87e88:	3013883a 	mov	r9,r6
   87e8c:	20000226 	beq	r4,zero,87e98 <___vfiprintf_internal_r+0x48>
   87e90:	20800e17 	ldw	r2,56(r4)
   87e94:	1000f926 	beq	r2,zero,8827c <___vfiprintf_internal_r+0x42c>
   87e98:	d8c12017 	ldw	r3,1152(sp)
   87e9c:	1880030b 	ldhu	r2,12(r3)
   87ea0:	1108000c 	andi	r4,r2,8192
   87ea4:	1007883a 	mov	r3,r2
   87ea8:	2000081e 	bne	r4,zero,87ecc <___vfiprintf_internal_r+0x7c>
   87eac:	d9412017 	ldw	r5,1152(sp)
   87eb0:	10c80014 	ori	r3,r2,8192
   87eb4:	00b7ffc4 	movi	r2,-8193
   87eb8:	29001917 	ldw	r4,100(r5)
   87ebc:	28c0030d 	sth	r3,12(r5)
   87ec0:	2088703a 	and	r4,r4,r2
   87ec4:	29001915 	stw	r4,100(r5)
   87ec8:	1805883a 	mov	r2,r3
   87ecc:	1900020c 	andi	r4,r3,8
   87ed0:	2000a726 	beq	r4,zero,88170 <___vfiprintf_internal_r+0x320>
   87ed4:	d9412017 	ldw	r5,1152(sp)
   87ed8:	29000417 	ldw	r4,16(r5)
   87edc:	2000a426 	beq	r4,zero,88170 <___vfiprintf_internal_r+0x320>
   87ee0:	18c0068c 	andi	r3,r3,26
   87ee4:	01000284 	movi	r4,10
   87ee8:	1900ad26 	beq	r3,r4,881a0 <___vfiprintf_internal_r+0x350>
   87eec:	d90109c4 	addi	r4,sp,1063
   87ef0:	d9410a04 	addi	r5,sp,1064
   87ef4:	2905c83a 	sub	r2,r5,r4
   87ef8:	d9011e15 	stw	r4,1144(sp)
   87efc:	d9411f15 	stw	r5,1148(sp)
   87f00:	dec11a15 	stw	sp,1128(sp)
   87f04:	d8011c15 	stw	zero,1136(sp)
   87f08:	d8011b15 	stw	zero,1132(sp)
   87f0c:	d8012715 	stw	zero,1180(sp)
   87f10:	d8012415 	stw	zero,1168(sp)
   87f14:	d811883a 	mov	r8,sp
   87f18:	04c00274 	movhi	r19,9
   87f1c:	9cff6904 	addi	r19,r19,-604
   87f20:	04000274 	movhi	r16,9
   87f24:	843f6504 	addi	r16,r16,-620
   87f28:	d8812815 	stw	r2,1184(sp)
   87f2c:	48800007 	ldb	r2,0(r9)
   87f30:	10040126 	beq	r2,zero,88f38 <___vfiprintf_internal_r+0x10e8>
   87f34:	00c00944 	movi	r3,37
   87f38:	4829883a 	mov	r20,r9
   87f3c:	10c0021e 	bne	r2,r3,87f48 <___vfiprintf_internal_r+0xf8>
   87f40:	00001606 	br	87f9c <___vfiprintf_internal_r+0x14c>
   87f44:	10c00326 	beq	r2,r3,87f54 <___vfiprintf_internal_r+0x104>
   87f48:	a5000044 	addi	r20,r20,1
   87f4c:	a0800007 	ldb	r2,0(r20)
   87f50:	103ffc1e 	bne	r2,zero,87f44 <___vfiprintf_internal_r+0xf4>
   87f54:	a263c83a 	sub	r17,r20,r9
   87f58:	88001026 	beq	r17,zero,87f9c <___vfiprintf_internal_r+0x14c>
   87f5c:	d8c11c17 	ldw	r3,1136(sp)
   87f60:	d8811b17 	ldw	r2,1132(sp)
   87f64:	42400015 	stw	r9,0(r8)
   87f68:	88c7883a 	add	r3,r17,r3
   87f6c:	10800044 	addi	r2,r2,1
   87f70:	44400115 	stw	r17,4(r8)
   87f74:	d8c11c15 	stw	r3,1136(sp)
   87f78:	d8811b15 	stw	r2,1132(sp)
   87f7c:	010001c4 	movi	r4,7
   87f80:	2080760e 	bge	r4,r2,8815c <___vfiprintf_internal_r+0x30c>
   87f84:	1803b41e 	bne	r3,zero,88e58 <___vfiprintf_internal_r+0x1008>
   87f88:	d8c12417 	ldw	r3,1168(sp)
   87f8c:	d8011b15 	stw	zero,1132(sp)
   87f90:	d811883a 	mov	r8,sp
   87f94:	1c47883a 	add	r3,r3,r17
   87f98:	d8c12415 	stw	r3,1168(sp)
   87f9c:	a0800007 	ldb	r2,0(r20)
   87fa0:	1002dc26 	beq	r2,zero,88b14 <___vfiprintf_internal_r+0xcc4>
   87fa4:	04bfffc4 	movi	r18,-1
   87fa8:	a2400044 	addi	r9,r20,1
   87fac:	a0c00047 	ldb	r3,1(r20)
   87fb0:	d8011d85 	stb	zero,1142(sp)
   87fb4:	002d883a 	mov	r22,zero
   87fb8:	d8012115 	stw	zero,1156(sp)
   87fbc:	0023883a 	mov	r17,zero
   87fc0:	05001604 	movi	r20,88
   87fc4:	05400244 	movi	r21,9
   87fc8:	402f883a 	mov	r23,r8
   87fcc:	900d883a 	mov	r6,r18
   87fd0:	4a400044 	addi	r9,r9,1
   87fd4:	18bff804 	addi	r2,r3,-32
   87fd8:	a0828736 	bltu	r20,r2,889f8 <___vfiprintf_internal_r+0xba8>
   87fdc:	1085883a 	add	r2,r2,r2
   87fe0:	1085883a 	add	r2,r2,r2
   87fe4:	01000234 	movhi	r4,8
   87fe8:	211ffe04 	addi	r4,r4,32760
   87fec:	1105883a 	add	r2,r2,r4
   87ff0:	10800017 	ldw	r2,0(r2)
   87ff4:	1000683a 	jmp	r2
   87ff8:	00088758 	cmpnei	zero,zero,8733
   87ffc:	000889f8 	rdprs	zero,zero,8743
   88000:	000889f8 	rdprs	zero,zero,8743
   88004:	00088774 	movhi	zero,8733
   88008:	000889f8 	rdprs	zero,zero,8743
   8800c:	000889f8 	rdprs	zero,zero,8743
   88010:	000889f8 	rdprs	zero,zero,8743
   88014:	000889f8 	rdprs	zero,zero,8743
   88018:	000889f8 	rdprs	zero,zero,8743
   8801c:	000889f8 	rdprs	zero,zero,8743
   88020:	00088808 	cmpgei	zero,zero,8736
   88024:	00088830 	cmpltui	zero,zero,8736
   88028:	000889f8 	rdprs	zero,zero,8743
   8802c:	0008829c 	xori	zero,zero,8714
   88030:	0008883c 	xorhi	zero,zero,8736
   88034:	000889f8 	rdprs	zero,zero,8743
   88038:	000882a8 	cmpgeui	zero,zero,8714
   8803c:	000882b4 	movhi	zero,8714
   88040:	000882b4 	movhi	zero,8714
   88044:	000882b4 	movhi	zero,8714
   88048:	000882b4 	movhi	zero,8714
   8804c:	000882b4 	movhi	zero,8714
   88050:	000882b4 	movhi	zero,8714
   88054:	000882b4 	movhi	zero,8714
   88058:	000882b4 	movhi	zero,8714
   8805c:	000882b4 	movhi	zero,8714
   88060:	000889f8 	rdprs	zero,zero,8743
   88064:	000889f8 	rdprs	zero,zero,8743
   88068:	000889f8 	rdprs	zero,zero,8743
   8806c:	000889f8 	rdprs	zero,zero,8743
   88070:	000889f8 	rdprs	zero,zero,8743
   88074:	000889f8 	rdprs	zero,zero,8743
   88078:	000889f8 	rdprs	zero,zero,8743
   8807c:	000889f8 	rdprs	zero,zero,8743
   88080:	000889f8 	rdprs	zero,zero,8743
   88084:	000889f8 	rdprs	zero,zero,8743
   88088:	000882fc 	xorhi	zero,zero,8715
   8808c:	000889f8 	rdprs	zero,zero,8743
   88090:	000889f8 	rdprs	zero,zero,8743
   88094:	000889f8 	rdprs	zero,zero,8743
   88098:	000889f8 	rdprs	zero,zero,8743
   8809c:	000889f8 	rdprs	zero,zero,8743
   880a0:	000889f8 	rdprs	zero,zero,8743
   880a4:	000889f8 	rdprs	zero,zero,8743
   880a8:	000889f8 	rdprs	zero,zero,8743
   880ac:	000889f8 	rdprs	zero,zero,8743
   880b0:	000889f8 	rdprs	zero,zero,8743
   880b4:	00088650 	cmplti	zero,zero,8729
   880b8:	000889f8 	rdprs	zero,zero,8743
   880bc:	000889f8 	rdprs	zero,zero,8743
   880c0:	000889f8 	rdprs	zero,zero,8743
   880c4:	000889f8 	rdprs	zero,zero,8743
   880c8:	000889f8 	rdprs	zero,zero,8743
   880cc:	00088694 	movui	zero,8730
   880d0:	000889f8 	rdprs	zero,zero,8743
   880d4:	000889f8 	rdprs	zero,zero,8743
   880d8:	000886cc 	andi	zero,zero,8731
   880dc:	000889f8 	rdprs	zero,zero,8743
   880e0:	000889f8 	rdprs	zero,zero,8743
   880e4:	000889f8 	rdprs	zero,zero,8743
   880e8:	000889f8 	rdprs	zero,zero,8743
   880ec:	000889f8 	rdprs	zero,zero,8743
   880f0:	000889f8 	rdprs	zero,zero,8743
   880f4:	000889f8 	rdprs	zero,zero,8743
   880f8:	000889f8 	rdprs	zero,zero,8743
   880fc:	000889f8 	rdprs	zero,zero,8743
   88100:	000889f8 	rdprs	zero,zero,8743
   88104:	00088728 	cmpgeui	zero,zero,8732
   88108:	0008889c 	xori	zero,zero,8738
   8810c:	000889f8 	rdprs	zero,zero,8743
   88110:	000889f8 	rdprs	zero,zero,8743
   88114:	000889f8 	rdprs	zero,zero,8743
   88118:	00088890 	cmplti	zero,zero,8738
   8811c:	0008889c 	xori	zero,zero,8738
   88120:	000889f8 	rdprs	zero,zero,8743
   88124:	000889f8 	rdprs	zero,zero,8743
   88128:	00088780 	call	8878 <__alt_mem_onchip_memory2-0x77788>
   8812c:	000889f8 	rdprs	zero,zero,8743
   88130:	00088798 	cmpnei	zero,zero,8734
   88134:	000887d0 	cmplti	zero,zero,8735
   88138:	000889b0 	cmpltui	zero,zero,8742
   8813c:	000888d4 	movui	zero,8739
   88140:	000889f8 	rdprs	zero,zero,8743
   88144:	000888e0 	cmpeqi	zero,zero,8739
   88148:	000889f8 	rdprs	zero,zero,8743
   8814c:	00088938 	rdprs	zero,zero,8740
   88150:	000889f8 	rdprs	zero,zero,8743
   88154:	000889f8 	rdprs	zero,zero,8743
   88158:	00088970 	cmpltui	zero,zero,8741
   8815c:	42000204 	addi	r8,r8,8
   88160:	d8c12417 	ldw	r3,1168(sp)
   88164:	1c47883a 	add	r3,r3,r17
   88168:	d8c12415 	stw	r3,1168(sp)
   8816c:	003f8b06 	br	87f9c <___vfiprintf_internal_r+0x14c>
   88170:	d9012217 	ldw	r4,1160(sp)
   88174:	d9412017 	ldw	r5,1152(sp)
   88178:	da412d15 	stw	r9,1204(sp)
   8817c:	0082ab40 	call	82ab4 <__swsetup_r>
   88180:	da412d17 	ldw	r9,1204(sp)
   88184:	1000301e 	bne	r2,zero,88248 <___vfiprintf_internal_r+0x3f8>
   88188:	d8c12017 	ldw	r3,1152(sp)
   8818c:	01000284 	movi	r4,10
   88190:	1880030b 	ldhu	r2,12(r3)
   88194:	1007883a 	mov	r3,r2
   88198:	18c0068c 	andi	r3,r3,26
   8819c:	193f531e 	bne	r3,r4,87eec <___vfiprintf_internal_r+0x9c>
   881a0:	d9012017 	ldw	r4,1152(sp)
   881a4:	20c0038b 	ldhu	r3,14(r4)
   881a8:	193fffcc 	andi	r4,r3,65535
   881ac:	2120001c 	xori	r4,r4,32768
   881b0:	21200004 	addi	r4,r4,-32768
   881b4:	203f4d16 	blt	r4,zero,87eec <___vfiprintf_internal_r+0x9c>
   881b8:	d9412017 	ldw	r5,1152(sp)
   881bc:	d9012217 	ldw	r4,1160(sp)
   881c0:	d9c12317 	ldw	r7,1164(sp)
   881c4:	2b001917 	ldw	r12,100(r5)
   881c8:	2ac00717 	ldw	r11,28(r5)
   881cc:	2a800917 	ldw	r10,36(r5)
   881d0:	02010004 	movi	r8,1024
   881d4:	10bfff4c 	andi	r2,r2,65533
   881d8:	da0b883a 	add	r5,sp,r8
   881dc:	480d883a 	mov	r6,r9
   881e0:	d881030d 	sth	r2,1036(sp)
   881e4:	db011915 	stw	r12,1124(sp)
   881e8:	d8c1038d 	sth	r3,1038(sp)
   881ec:	dac10715 	stw	r11,1052(sp)
   881f0:	da810915 	stw	r10,1060(sp)
   881f4:	dec10015 	stw	sp,1024(sp)
   881f8:	dec10415 	stw	sp,1040(sp)
   881fc:	da010215 	stw	r8,1032(sp)
   88200:	da010515 	stw	r8,1044(sp)
   88204:	d8010615 	stw	zero,1048(sp)
   88208:	0087e500 	call	87e50 <___vfiprintf_internal_r>
   8820c:	1021883a 	mov	r16,r2
   88210:	10000416 	blt	r2,zero,88224 <___vfiprintf_internal_r+0x3d4>
   88214:	d9012217 	ldw	r4,1160(sp)
   88218:	d9410004 	addi	r5,sp,1024
   8821c:	00844500 	call	84450 <_fflush_r>
   88220:	10040b1e 	bne	r2,zero,89250 <___vfiprintf_internal_r+0x1400>
   88224:	d881030b 	ldhu	r2,1036(sp)
   88228:	1080100c 	andi	r2,r2,64
   8822c:	10000426 	beq	r2,zero,88240 <___vfiprintf_internal_r+0x3f0>
   88230:	d8c12017 	ldw	r3,1152(sp)
   88234:	1880030b 	ldhu	r2,12(r3)
   88238:	10801014 	ori	r2,r2,64
   8823c:	1880030d 	sth	r2,12(r3)
   88240:	8005883a 	mov	r2,r16
   88244:	00000106 	br	8824c <___vfiprintf_internal_r+0x3fc>
   88248:	00bfffc4 	movi	r2,-1
   8824c:	dfc13717 	ldw	ra,1244(sp)
   88250:	df013617 	ldw	fp,1240(sp)
   88254:	ddc13517 	ldw	r23,1236(sp)
   88258:	dd813417 	ldw	r22,1232(sp)
   8825c:	dd413317 	ldw	r21,1228(sp)
   88260:	dd013217 	ldw	r20,1224(sp)
   88264:	dcc13117 	ldw	r19,1220(sp)
   88268:	dc813017 	ldw	r18,1216(sp)
   8826c:	dc412f17 	ldw	r17,1212(sp)
   88270:	dc012e17 	ldw	r16,1208(sp)
   88274:	dec13804 	addi	sp,sp,1248
   88278:	f800283a 	ret
   8827c:	d9812d15 	stw	r6,1204(sp)
   88280:	00847700 	call	84770 <__sinit>
   88284:	da412d17 	ldw	r9,1204(sp)
   88288:	003f0306 	br	87e98 <___vfiprintf_internal_r+0x48>
   8828c:	d9412117 	ldw	r5,1156(sp)
   88290:	d8812315 	stw	r2,1164(sp)
   88294:	014bc83a 	sub	r5,zero,r5
   88298:	d9412115 	stw	r5,1156(sp)
   8829c:	8c400114 	ori	r17,r17,4
   882a0:	48c00007 	ldb	r3,0(r9)
   882a4:	003f4a06 	br	87fd0 <___vfiprintf_internal_r+0x180>
   882a8:	8c402014 	ori	r17,r17,128
   882ac:	48c00007 	ldb	r3,0(r9)
   882b0:	003f4706 	br	87fd0 <___vfiprintf_internal_r+0x180>
   882b4:	4825883a 	mov	r18,r9
   882b8:	d8012115 	stw	zero,1156(sp)
   882bc:	1f3ff404 	addi	fp,r3,-48
   882c0:	00000106 	br	882c8 <___vfiprintf_internal_r+0x478>
   882c4:	1025883a 	mov	r18,r2
   882c8:	d9012117 	ldw	r4,1156(sp)
   882cc:	01400284 	movi	r5,10
   882d0:	d9812b15 	stw	r6,1196(sp)
   882d4:	008aa780 	call	8aa78 <__mulsi3>
   882d8:	90c00007 	ldb	r3,0(r18)
   882dc:	1739883a 	add	fp,r2,fp
   882e0:	df012115 	stw	fp,1156(sp)
   882e4:	90800044 	addi	r2,r18,1
   882e8:	1f3ff404 	addi	fp,r3,-48
   882ec:	1013883a 	mov	r9,r2
   882f0:	d9812b17 	ldw	r6,1196(sp)
   882f4:	af3ff32e 	bgeu	r21,fp,882c4 <___vfiprintf_internal_r+0x474>
   882f8:	003f3606 	br	87fd4 <___vfiprintf_internal_r+0x184>
   882fc:	8c400414 	ori	r17,r17,16
   88300:	dd811d85 	stb	r22,1142(sp)
   88304:	8880080c 	andi	r2,r17,32
   88308:	b811883a 	mov	r8,r23
   8830c:	3025883a 	mov	r18,r6
   88310:	10016726 	beq	r2,zero,888b0 <___vfiprintf_internal_r+0xa60>
   88314:	d8c12317 	ldw	r3,1164(sp)
   88318:	18800117 	ldw	r2,4(r3)
   8831c:	1d000017 	ldw	r20,0(r3)
   88320:	18c00204 	addi	r3,r3,8
   88324:	d8c12315 	stw	r3,1164(sp)
   88328:	102b883a 	mov	r21,r2
   8832c:	10030416 	blt	r2,zero,88f40 <___vfiprintf_internal_r+0x10f0>
   88330:	dd811d83 	ldbu	r22,1142(sp)
   88334:	900f883a 	mov	r7,r18
   88338:	00800044 	movi	r2,1
   8833c:	a548b03a 	or	r4,r20,r21
   88340:	90000216 	blt	r18,zero,8834c <___vfiprintf_internal_r+0x4fc>
   88344:	00ffdfc4 	movi	r3,-129
   88348:	88e2703a 	and	r17,r17,r3
   8834c:	10803fcc 	andi	r2,r2,255
   88350:	2001db1e 	bne	r4,zero,88ac0 <___vfiprintf_internal_r+0xc70>
   88354:	9001da1e 	bne	r18,zero,88ac0 <___vfiprintf_internal_r+0xc70>
   88358:	1002ab1e 	bne	r2,zero,88e08 <___vfiprintf_internal_r+0xfb8>
   8835c:	8880004c 	andi	r2,r17,1
   88360:	1002a926 	beq	r2,zero,88e08 <___vfiprintf_internal_r+0xfb8>
   88364:	d9c12817 	ldw	r7,1184(sp)
   88368:	00800c04 	movi	r2,48
   8836c:	d88109c5 	stb	r2,1063(sp)
   88370:	ddc109c4 	addi	r23,sp,1063
   88374:	3829883a 	mov	r20,r7
   88378:	3c80010e 	bge	r7,r18,88380 <___vfiprintf_internal_r+0x530>
   8837c:	9029883a 	mov	r20,r18
   88380:	b5803fcc 	andi	r22,r22,255
   88384:	b580201c 	xori	r22,r22,128
   88388:	b5bfe004 	addi	r22,r22,-128
   8838c:	b0000126 	beq	r22,zero,88394 <___vfiprintf_internal_r+0x544>
   88390:	a5000044 	addi	r20,r20,1
   88394:	8a80008c 	andi	r10,r17,2
   88398:	50000126 	beq	r10,zero,883a0 <___vfiprintf_internal_r+0x550>
   8839c:	a5000084 	addi	r20,r20,2
   883a0:	8d40210c 	andi	r21,r17,132
   883a4:	a801aa1e 	bne	r21,zero,88a50 <___vfiprintf_internal_r+0xc00>
   883a8:	d8c12117 	ldw	r3,1156(sp)
   883ac:	1d2dc83a 	sub	r22,r3,r20
   883b0:	0581a70e 	bge	zero,r22,88a50 <___vfiprintf_internal_r+0xc00>
   883b4:	07000404 	movi	fp,16
   883b8:	d8c11c17 	ldw	r3,1136(sp)
   883bc:	e583780e 	bge	fp,r22,891a0 <___vfiprintf_internal_r+0x1350>
   883c0:	01400274 	movhi	r5,9
   883c4:	297f6904 	addi	r5,r5,-604
   883c8:	dc412615 	stw	r17,1176(sp)
   883cc:	d9011b17 	ldw	r4,1132(sp)
   883d0:	b023883a 	mov	r17,r22
   883d4:	d9412515 	stw	r5,1172(sp)
   883d8:	030001c4 	movi	r12,7
   883dc:	d9c12915 	stw	r7,1188(sp)
   883e0:	da812a15 	stw	r10,1192(sp)
   883e4:	482d883a 	mov	r22,r9
   883e8:	00000506 	br	88400 <___vfiprintf_internal_r+0x5b0>
   883ec:	21400084 	addi	r5,r4,2
   883f0:	42000204 	addi	r8,r8,8
   883f4:	1009883a 	mov	r4,r2
   883f8:	8c7ffc04 	addi	r17,r17,-16
   883fc:	e4400d0e 	bge	fp,r17,88434 <___vfiprintf_internal_r+0x5e4>
   88400:	18c00404 	addi	r3,r3,16
   88404:	20800044 	addi	r2,r4,1
   88408:	44c00015 	stw	r19,0(r8)
   8840c:	47000115 	stw	fp,4(r8)
   88410:	d8c11c15 	stw	r3,1136(sp)
   88414:	d8811b15 	stw	r2,1132(sp)
   88418:	60bff40e 	bge	r12,r2,883ec <___vfiprintf_internal_r+0x59c>
   8841c:	1801801e 	bne	r3,zero,88a20 <___vfiprintf_internal_r+0xbd0>
   88420:	8c7ffc04 	addi	r17,r17,-16
   88424:	0009883a 	mov	r4,zero
   88428:	01400044 	movi	r5,1
   8842c:	d811883a 	mov	r8,sp
   88430:	e47ff316 	blt	fp,r17,88400 <___vfiprintf_internal_r+0x5b0>
   88434:	b013883a 	mov	r9,r22
   88438:	d9c12917 	ldw	r7,1188(sp)
   8843c:	882d883a 	mov	r22,r17
   88440:	da812a17 	ldw	r10,1192(sp)
   88444:	dc412617 	ldw	r17,1176(sp)
   88448:	d8812517 	ldw	r2,1172(sp)
   8844c:	b0c7883a 	add	r3,r22,r3
   88450:	45800115 	stw	r22,4(r8)
   88454:	40800015 	stw	r2,0(r8)
   88458:	d8c11c15 	stw	r3,1136(sp)
   8845c:	d9411b15 	stw	r5,1132(sp)
   88460:	008001c4 	movi	r2,7
   88464:	11426a16 	blt	r2,r5,88e10 <___vfiprintf_internal_r+0xfc0>
   88468:	d9011d87 	ldb	r4,1142(sp)
   8846c:	42000204 	addi	r8,r8,8
   88470:	28800044 	addi	r2,r5,1
   88474:	20017b1e 	bne	r4,zero,88a64 <___vfiprintf_internal_r+0xc14>
   88478:	50000c26 	beq	r10,zero,884ac <___vfiprintf_internal_r+0x65c>
   8847c:	d9011d04 	addi	r4,sp,1140
   88480:	18c00084 	addi	r3,r3,2
   88484:	41000015 	stw	r4,0(r8)
   88488:	01000084 	movi	r4,2
   8848c:	41000115 	stw	r4,4(r8)
   88490:	d8c11c15 	stw	r3,1136(sp)
   88494:	d8811b15 	stw	r2,1132(sp)
   88498:	010001c4 	movi	r4,7
   8849c:	20821716 	blt	r4,r2,88cfc <___vfiprintf_internal_r+0xeac>
   884a0:	100b883a 	mov	r5,r2
   884a4:	42000204 	addi	r8,r8,8
   884a8:	10800044 	addi	r2,r2,1
   884ac:	01002004 	movi	r4,128
   884b0:	a901d126 	beq	r21,r4,88bf8 <___vfiprintf_internal_r+0xda8>
   884b4:	91e5c83a 	sub	r18,r18,r7
   884b8:	0480290e 	bge	zero,r18,88560 <___vfiprintf_internal_r+0x710>
   884bc:	05800404 	movi	r22,16
   884c0:	05400274 	movhi	r21,9
   884c4:	ad7f6504 	addi	r21,r21,-620
   884c8:	b4801c0e 	bge	r22,r18,8853c <___vfiprintf_internal_r+0x6ec>
   884cc:	dc412515 	stw	r17,1172(sp)
   884d0:	070001c4 	movi	fp,7
   884d4:	9023883a 	mov	r17,r18
   884d8:	d9c12615 	stw	r7,1176(sp)
   884dc:	4825883a 	mov	r18,r9
   884e0:	00000506 	br	884f8 <___vfiprintf_internal_r+0x6a8>
   884e4:	28800084 	addi	r2,r5,2
   884e8:	42000204 	addi	r8,r8,8
   884ec:	200b883a 	mov	r5,r4
   884f0:	8c7ffc04 	addi	r17,r17,-16
   884f4:	b4400d0e 	bge	r22,r17,8852c <___vfiprintf_internal_r+0x6dc>
   884f8:	18c00404 	addi	r3,r3,16
   884fc:	29000044 	addi	r4,r5,1
   88500:	44000015 	stw	r16,0(r8)
   88504:	45800115 	stw	r22,4(r8)
   88508:	d8c11c15 	stw	r3,1136(sp)
   8850c:	d9011b15 	stw	r4,1132(sp)
   88510:	e13ff40e 	bge	fp,r4,884e4 <___vfiprintf_internal_r+0x694>
   88514:	1801601e 	bne	r3,zero,88a98 <___vfiprintf_internal_r+0xc48>
   88518:	8c7ffc04 	addi	r17,r17,-16
   8851c:	000b883a 	mov	r5,zero
   88520:	00800044 	movi	r2,1
   88524:	d811883a 	mov	r8,sp
   88528:	b47ff316 	blt	r22,r17,884f8 <___vfiprintf_internal_r+0x6a8>
   8852c:	9013883a 	mov	r9,r18
   88530:	d9c12617 	ldw	r7,1176(sp)
   88534:	8825883a 	mov	r18,r17
   88538:	dc412517 	ldw	r17,1172(sp)
   8853c:	1c87883a 	add	r3,r3,r18
   88540:	45400015 	stw	r21,0(r8)
   88544:	44800115 	stw	r18,4(r8)
   88548:	d8c11c15 	stw	r3,1136(sp)
   8854c:	d8811b15 	stw	r2,1132(sp)
   88550:	010001c4 	movi	r4,7
   88554:	20819e16 	blt	r4,r2,88bd0 <___vfiprintf_internal_r+0xd80>
   88558:	42000204 	addi	r8,r8,8
   8855c:	10800044 	addi	r2,r2,1
   88560:	38c7883a 	add	r3,r7,r3
   88564:	45c00015 	stw	r23,0(r8)
   88568:	41c00115 	stw	r7,4(r8)
   8856c:	d8c11c15 	stw	r3,1136(sp)
   88570:	d8811b15 	stw	r2,1132(sp)
   88574:	010001c4 	movi	r4,7
   88578:	20819d0e 	bge	r4,r2,88bf0 <___vfiprintf_internal_r+0xda0>
   8857c:	1802291e 	bne	r3,zero,88e24 <___vfiprintf_internal_r+0xfd4>
   88580:	d8011b15 	stw	zero,1132(sp)
   88584:	d811883a 	mov	r8,sp
   88588:	8c40010c 	andi	r17,r17,4
   8858c:	88017526 	beq	r17,zero,88b64 <___vfiprintf_internal_r+0xd14>
   88590:	d9412117 	ldw	r5,1156(sp)
   88594:	2d23c83a 	sub	r17,r5,r20
   88598:	0441720e 	bge	zero,r17,88b64 <___vfiprintf_internal_r+0xd14>
   8859c:	04800404 	movi	r18,16
   885a0:	9443170e 	bge	r18,r17,89200 <___vfiprintf_internal_r+0x13b0>
   885a4:	01400274 	movhi	r5,9
   885a8:	297f6904 	addi	r5,r5,-604
   885ac:	d9011b17 	ldw	r4,1132(sp)
   885b0:	d9412515 	stw	r5,1172(sp)
   885b4:	058001c4 	movi	r22,7
   885b8:	dd412217 	ldw	r21,1160(sp)
   885bc:	ddc12017 	ldw	r23,1152(sp)
   885c0:	4839883a 	mov	fp,r9
   885c4:	00000506 	br	885dc <___vfiprintf_internal_r+0x78c>
   885c8:	21400084 	addi	r5,r4,2
   885cc:	42000204 	addi	r8,r8,8
   885d0:	1009883a 	mov	r4,r2
   885d4:	8c7ffc04 	addi	r17,r17,-16
   885d8:	94400d0e 	bge	r18,r17,88610 <___vfiprintf_internal_r+0x7c0>
   885dc:	18c00404 	addi	r3,r3,16
   885e0:	20800044 	addi	r2,r4,1
   885e4:	44c00015 	stw	r19,0(r8)
   885e8:	44800115 	stw	r18,4(r8)
   885ec:	d8c11c15 	stw	r3,1136(sp)
   885f0:	d8811b15 	stw	r2,1132(sp)
   885f4:	b0bff40e 	bge	r22,r2,885c8 <___vfiprintf_internal_r+0x778>
   885f8:	18016b1e 	bne	r3,zero,88ba8 <___vfiprintf_internal_r+0xd58>
   885fc:	8c7ffc04 	addi	r17,r17,-16
   88600:	0009883a 	mov	r4,zero
   88604:	01400044 	movi	r5,1
   88608:	d811883a 	mov	r8,sp
   8860c:	947ff316 	blt	r18,r17,885dc <___vfiprintf_internal_r+0x78c>
   88610:	e013883a 	mov	r9,fp
   88614:	d8812517 	ldw	r2,1172(sp)
   88618:	1c47883a 	add	r3,r3,r17
   8861c:	44400115 	stw	r17,4(r8)
   88620:	40800015 	stw	r2,0(r8)
   88624:	d8c11c15 	stw	r3,1136(sp)
   88628:	d9411b15 	stw	r5,1132(sp)
   8862c:	008001c4 	movi	r2,7
   88630:	11414c0e 	bge	r2,r5,88b64 <___vfiprintf_internal_r+0xd14>
   88634:	1801431e 	bne	r3,zero,88b44 <___vfiprintf_internal_r+0xcf4>
   88638:	d8c12117 	ldw	r3,1156(sp)
   8863c:	a0c28e16 	blt	r20,r3,89078 <___vfiprintf_internal_r+0x1228>
   88640:	d9012417 	ldw	r4,1168(sp)
   88644:	2509883a 	add	r4,r4,r20
   88648:	d9012415 	stw	r4,1168(sp)
   8864c:	00015306 	br	88b9c <___vfiprintf_internal_r+0xd4c>
   88650:	8c400414 	ori	r17,r17,16
   88654:	8880080c 	andi	r2,r17,32
   88658:	b811883a 	mov	r8,r23
   8865c:	3025883a 	mov	r18,r6
   88660:	10005f26 	beq	r2,zero,887e0 <___vfiprintf_internal_r+0x990>
   88664:	d8812317 	ldw	r2,1164(sp)
   88668:	d8c12317 	ldw	r3,1164(sp)
   8866c:	15000017 	ldw	r20,0(r2)
   88670:	15400117 	ldw	r21,4(r2)
   88674:	18c00204 	addi	r3,r3,8
   88678:	0005883a 	mov	r2,zero
   8867c:	d8c12315 	stw	r3,1164(sp)
   88680:	a548b03a 	or	r4,r20,r21
   88684:	d8011d85 	stb	zero,1142(sp)
   88688:	900f883a 	mov	r7,r18
   8868c:	002d883a 	mov	r22,zero
   88690:	003f2b06 	br	88340 <___vfiprintf_internal_r+0x4f0>
   88694:	8c400414 	ori	r17,r17,16
   88698:	8880080c 	andi	r2,r17,32
   8869c:	b811883a 	mov	r8,r23
   886a0:	3025883a 	mov	r18,r6
   886a4:	1000a826 	beq	r2,zero,88948 <___vfiprintf_internal_r+0xaf8>
   886a8:	d8812317 	ldw	r2,1164(sp)
   886ac:	d8c12317 	ldw	r3,1164(sp)
   886b0:	15000017 	ldw	r20,0(r2)
   886b4:	15400117 	ldw	r21,4(r2)
   886b8:	18c00204 	addi	r3,r3,8
   886bc:	00800044 	movi	r2,1
   886c0:	d8c12315 	stw	r3,1164(sp)
   886c4:	a548b03a 	or	r4,r20,r21
   886c8:	003fee06 	br	88684 <___vfiprintf_internal_r+0x834>
   886cc:	01400274 	movhi	r5,9
   886d0:	297f0004 	addi	r5,r5,-1024
   886d4:	dd811d85 	stb	r22,1142(sp)
   886d8:	d9412715 	stw	r5,1180(sp)
   886dc:	8880080c 	andi	r2,r17,32
   886e0:	b811883a 	mov	r8,r23
   886e4:	3025883a 	mov	r18,r6
   886e8:	1000a926 	beq	r2,zero,88990 <___vfiprintf_internal_r+0xb40>
   886ec:	d9412317 	ldw	r5,1164(sp)
   886f0:	2d000017 	ldw	r20,0(r5)
   886f4:	2d400117 	ldw	r21,4(r5)
   886f8:	29400204 	addi	r5,r5,8
   886fc:	d9412315 	stw	r5,1164(sp)
   88700:	8880004c 	andi	r2,r17,1
   88704:	1001d126 	beq	r2,zero,88e4c <___vfiprintf_internal_r+0xffc>
   88708:	a548b03a 	or	r4,r20,r21
   8870c:	20021626 	beq	r4,zero,88f68 <___vfiprintf_internal_r+0x1118>
   88710:	00800c04 	movi	r2,48
   88714:	d8811d05 	stb	r2,1140(sp)
   88718:	d8c11d45 	stb	r3,1141(sp)
   8871c:	8c400094 	ori	r17,r17,2
   88720:	00800084 	movi	r2,2
   88724:	003fd706 	br	88684 <___vfiprintf_internal_r+0x834>
   88728:	d9412317 	ldw	r5,1164(sp)
   8872c:	05000044 	movi	r20,1
   88730:	b811883a 	mov	r8,r23
   88734:	28800017 	ldw	r2,0(r5)
   88738:	29400104 	addi	r5,r5,4
   8873c:	d8011d85 	stb	zero,1142(sp)
   88740:	d8810005 	stb	r2,1024(sp)
   88744:	d9412315 	stw	r5,1164(sp)
   88748:	a00f883a 	mov	r7,r20
   8874c:	ddc10004 	addi	r23,sp,1024
   88750:	0025883a 	mov	r18,zero
   88754:	003f0f06 	br	88394 <___vfiprintf_internal_r+0x544>
   88758:	b0803fcc 	andi	r2,r22,255
   8875c:	1080201c 	xori	r2,r2,128
   88760:	10bfe004 	addi	r2,r2,-128
   88764:	10021f1e 	bne	r2,zero,88fe4 <___vfiprintf_internal_r+0x1194>
   88768:	05800804 	movi	r22,32
   8876c:	48c00007 	ldb	r3,0(r9)
   88770:	003e1706 	br	87fd0 <___vfiprintf_internal_r+0x180>
   88774:	8c400054 	ori	r17,r17,1
   88778:	48c00007 	ldb	r3,0(r9)
   8877c:	003e1406 	br	87fd0 <___vfiprintf_internal_r+0x180>
   88780:	48c00007 	ldb	r3,0(r9)
   88784:	01001b04 	movi	r4,108
   88788:	4805883a 	mov	r2,r9
   8878c:	19026526 	beq	r3,r4,89124 <___vfiprintf_internal_r+0x12d4>
   88790:	8c400414 	ori	r17,r17,16
   88794:	003e0e06 	br	87fd0 <___vfiprintf_internal_r+0x180>
   88798:	dd811d85 	stb	r22,1142(sp)
   8879c:	8880080c 	andi	r2,r17,32
   887a0:	b811883a 	mov	r8,r23
   887a4:	10020426 	beq	r2,zero,88fb8 <___vfiprintf_internal_r+0x1168>
   887a8:	d8c12317 	ldw	r3,1164(sp)
   887ac:	d9012417 	ldw	r4,1168(sp)
   887b0:	d9412317 	ldw	r5,1164(sp)
   887b4:	18800017 	ldw	r2,0(r3)
   887b8:	2007d7fa 	srai	r3,r4,31
   887bc:	29400104 	addi	r5,r5,4
   887c0:	d9412315 	stw	r5,1164(sp)
   887c4:	11000015 	stw	r4,0(r2)
   887c8:	10c00115 	stw	r3,4(r2)
   887cc:	003dd706 	br	87f2c <___vfiprintf_internal_r+0xdc>
   887d0:	8880080c 	andi	r2,r17,32
   887d4:	b811883a 	mov	r8,r23
   887d8:	3025883a 	mov	r18,r6
   887dc:	103fa11e 	bne	r2,zero,88664 <___vfiprintf_internal_r+0x814>
   887e0:	8880040c 	andi	r2,r17,16
   887e4:	1001ea26 	beq	r2,zero,88f90 <___vfiprintf_internal_r+0x1140>
   887e8:	d9012317 	ldw	r4,1164(sp)
   887ec:	002b883a 	mov	r21,zero
   887f0:	0005883a 	mov	r2,zero
   887f4:	25000017 	ldw	r20,0(r4)
   887f8:	21000104 	addi	r4,r4,4
   887fc:	d9012315 	stw	r4,1164(sp)
   88800:	a009883a 	mov	r4,r20
   88804:	003f9f06 	br	88684 <___vfiprintf_internal_r+0x834>
   88808:	d8812317 	ldw	r2,1164(sp)
   8880c:	d8c12317 	ldw	r3,1164(sp)
   88810:	10800017 	ldw	r2,0(r2)
   88814:	d8812115 	stw	r2,1156(sp)
   88818:	d9012117 	ldw	r4,1156(sp)
   8881c:	18800104 	addi	r2,r3,4
   88820:	203e9a16 	blt	r4,zero,8828c <___vfiprintf_internal_r+0x43c>
   88824:	d8812315 	stw	r2,1164(sp)
   88828:	48c00007 	ldb	r3,0(r9)
   8882c:	003de806 	br	87fd0 <___vfiprintf_internal_r+0x180>
   88830:	05800ac4 	movi	r22,43
   88834:	48c00007 	ldb	r3,0(r9)
   88838:	003de506 	br	87fd0 <___vfiprintf_internal_r+0x180>
   8883c:	48c00007 	ldb	r3,0(r9)
   88840:	01000a84 	movi	r4,42
   88844:	48800044 	addi	r2,r9,1
   88848:	19028326 	beq	r3,r4,89258 <___vfiprintf_internal_r+0x1408>
   8884c:	1f3ff404 	addi	fp,r3,-48
   88850:	af027a36 	bltu	r21,fp,8923c <___vfiprintf_internal_r+0x13ec>
   88854:	1025883a 	mov	r18,r2
   88858:	0009883a 	mov	r4,zero
   8885c:	00000106 	br	88864 <___vfiprintf_internal_r+0xa14>
   88860:	4825883a 	mov	r18,r9
   88864:	01400284 	movi	r5,10
   88868:	008aa780 	call	8aa78 <__mulsi3>
   8886c:	90c00007 	ldb	r3,0(r18)
   88870:	e089883a 	add	r4,fp,r2
   88874:	92400044 	addi	r9,r18,1
   88878:	1f3ff404 	addi	fp,r3,-48
   8887c:	af3ff82e 	bgeu	r21,fp,88860 <___vfiprintf_internal_r+0xa10>
   88880:	2025883a 	mov	r18,r4
   88884:	20022416 	blt	r4,zero,89118 <___vfiprintf_internal_r+0x12c8>
   88888:	900d883a 	mov	r6,r18
   8888c:	003dd106 	br	87fd4 <___vfiprintf_internal_r+0x184>
   88890:	8c401014 	ori	r17,r17,64
   88894:	48c00007 	ldb	r3,0(r9)
   88898:	003dcd06 	br	87fd0 <___vfiprintf_internal_r+0x180>
   8889c:	dd811d85 	stb	r22,1142(sp)
   888a0:	8880080c 	andi	r2,r17,32
   888a4:	b811883a 	mov	r8,r23
   888a8:	3025883a 	mov	r18,r6
   888ac:	103e991e 	bne	r2,zero,88314 <___vfiprintf_internal_r+0x4c4>
   888b0:	8880040c 	andi	r2,r17,16
   888b4:	1001d726 	beq	r2,zero,89014 <___vfiprintf_internal_r+0x11c4>
   888b8:	d9012317 	ldw	r4,1164(sp)
   888bc:	25000017 	ldw	r20,0(r4)
   888c0:	21000104 	addi	r4,r4,4
   888c4:	d9012315 	stw	r4,1164(sp)
   888c8:	a02bd7fa 	srai	r21,r20,31
   888cc:	a805883a 	mov	r2,r21
   888d0:	003e9606 	br	8832c <___vfiprintf_internal_r+0x4dc>
   888d4:	8c400814 	ori	r17,r17,32
   888d8:	48c00007 	ldb	r3,0(r9)
   888dc:	003dbc06 	br	87fd0 <___vfiprintf_internal_r+0x180>
   888e0:	d9412317 	ldw	r5,1164(sp)
   888e4:	b811883a 	mov	r8,r23
   888e8:	d8011d85 	stb	zero,1142(sp)
   888ec:	2dc00017 	ldw	r23,0(r5)
   888f0:	3025883a 	mov	r18,r6
   888f4:	2d400104 	addi	r21,r5,4
   888f8:	b8022f26 	beq	r23,zero,891b8 <___vfiprintf_internal_r+0x1368>
   888fc:	b809883a 	mov	r4,r23
   88900:	30020f16 	blt	r6,zero,89140 <___vfiprintf_internal_r+0x12f0>
   88904:	000b883a 	mov	r5,zero
   88908:	da012b15 	stw	r8,1196(sp)
   8890c:	da412d15 	stw	r9,1204(sp)
   88910:	0085ecc0 	call	85ecc <memchr>
   88914:	da012b17 	ldw	r8,1196(sp)
   88918:	da412d17 	ldw	r9,1204(sp)
   8891c:	10024226 	beq	r2,zero,89228 <___vfiprintf_internal_r+0x13d8>
   88920:	15cfc83a 	sub	r7,r2,r23
   88924:	91c1d616 	blt	r18,r7,89080 <___vfiprintf_internal_r+0x1230>
   88928:	dd811d83 	ldbu	r22,1142(sp)
   8892c:	dd412315 	stw	r21,1164(sp)
   88930:	0025883a 	mov	r18,zero
   88934:	003e8f06 	br	88374 <___vfiprintf_internal_r+0x524>
   88938:	8880080c 	andi	r2,r17,32
   8893c:	b811883a 	mov	r8,r23
   88940:	3025883a 	mov	r18,r6
   88944:	103f581e 	bne	r2,zero,886a8 <___vfiprintf_internal_r+0x858>
   88948:	8880040c 	andi	r2,r17,16
   8894c:	1001a726 	beq	r2,zero,88fec <___vfiprintf_internal_r+0x119c>
   88950:	d9012317 	ldw	r4,1164(sp)
   88954:	002b883a 	mov	r21,zero
   88958:	00800044 	movi	r2,1
   8895c:	25000017 	ldw	r20,0(r4)
   88960:	21000104 	addi	r4,r4,4
   88964:	d9012315 	stw	r4,1164(sp)
   88968:	a009883a 	mov	r4,r20
   8896c:	003f4506 	br	88684 <___vfiprintf_internal_r+0x834>
   88970:	01000274 	movhi	r4,9
   88974:	213f0504 	addi	r4,r4,-1004
   88978:	dd811d85 	stb	r22,1142(sp)
   8897c:	d9012715 	stw	r4,1180(sp)
   88980:	8880080c 	andi	r2,r17,32
   88984:	b811883a 	mov	r8,r23
   88988:	3025883a 	mov	r18,r6
   8898c:	103f571e 	bne	r2,zero,886ec <___vfiprintf_internal_r+0x89c>
   88990:	8880040c 	andi	r2,r17,16
   88994:	10017626 	beq	r2,zero,88f70 <___vfiprintf_internal_r+0x1120>
   88998:	d8812317 	ldw	r2,1164(sp)
   8899c:	002b883a 	mov	r21,zero
   889a0:	15000017 	ldw	r20,0(r2)
   889a4:	10800104 	addi	r2,r2,4
   889a8:	d8812315 	stw	r2,1164(sp)
   889ac:	003f5406 	br	88700 <___vfiprintf_internal_r+0x8b0>
   889b0:	d8c12317 	ldw	r3,1164(sp)
   889b4:	00800c04 	movi	r2,48
   889b8:	01000274 	movhi	r4,9
   889bc:	213f0504 	addi	r4,r4,-1004
   889c0:	1d000017 	ldw	r20,0(r3)
   889c4:	d8811d05 	stb	r2,1140(sp)
   889c8:	18c00104 	addi	r3,r3,4
   889cc:	00801e04 	movi	r2,120
   889d0:	d8811d45 	stb	r2,1141(sp)
   889d4:	d9012715 	stw	r4,1180(sp)
   889d8:	b811883a 	mov	r8,r23
   889dc:	3025883a 	mov	r18,r6
   889e0:	002b883a 	mov	r21,zero
   889e4:	8c400094 	ori	r17,r17,2
   889e8:	d8c12315 	stw	r3,1164(sp)
   889ec:	00800084 	movi	r2,2
   889f0:	a009883a 	mov	r4,r20
   889f4:	003f2306 	br	88684 <___vfiprintf_internal_r+0x834>
   889f8:	dd811d85 	stb	r22,1142(sp)
   889fc:	b811883a 	mov	r8,r23
   88a00:	18004426 	beq	r3,zero,88b14 <___vfiprintf_internal_r+0xcc4>
   88a04:	05000044 	movi	r20,1
   88a08:	d8c10005 	stb	r3,1024(sp)
   88a0c:	d8011d85 	stb	zero,1142(sp)
   88a10:	a00f883a 	mov	r7,r20
   88a14:	ddc10004 	addi	r23,sp,1024
   88a18:	0025883a 	mov	r18,zero
   88a1c:	003e5d06 	br	88394 <___vfiprintf_internal_r+0x544>
   88a20:	d9012217 	ldw	r4,1160(sp)
   88a24:	d9412017 	ldw	r5,1152(sp)
   88a28:	d9811a04 	addi	r6,sp,1128
   88a2c:	db012b15 	stw	r12,1196(sp)
   88a30:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88a34:	db012b17 	ldw	r12,1196(sp)
   88a38:	10003c1e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88a3c:	d9011b17 	ldw	r4,1132(sp)
   88a40:	d8c11c17 	ldw	r3,1136(sp)
   88a44:	d811883a 	mov	r8,sp
   88a48:	21400044 	addi	r5,r4,1
   88a4c:	003e6a06 	br	883f8 <___vfiprintf_internal_r+0x5a8>
   88a50:	d9411b17 	ldw	r5,1132(sp)
   88a54:	d8c11c17 	ldw	r3,1136(sp)
   88a58:	28800044 	addi	r2,r5,1
   88a5c:	d9011d87 	ldb	r4,1142(sp)
   88a60:	203e8526 	beq	r4,zero,88478 <___vfiprintf_internal_r+0x628>
   88a64:	01000044 	movi	r4,1
   88a68:	d9411d84 	addi	r5,sp,1142
   88a6c:	1907883a 	add	r3,r3,r4
   88a70:	41400015 	stw	r5,0(r8)
   88a74:	41000115 	stw	r4,4(r8)
   88a78:	d8c11c15 	stw	r3,1136(sp)
   88a7c:	d8811b15 	stw	r2,1132(sp)
   88a80:	014001c4 	movi	r5,7
   88a84:	28809816 	blt	r5,r2,88ce8 <___vfiprintf_internal_r+0xe98>
   88a88:	100b883a 	mov	r5,r2
   88a8c:	42000204 	addi	r8,r8,8
   88a90:	1105883a 	add	r2,r2,r4
   88a94:	003e7806 	br	88478 <___vfiprintf_internal_r+0x628>
   88a98:	d9012217 	ldw	r4,1160(sp)
   88a9c:	d9412017 	ldw	r5,1152(sp)
   88aa0:	d9811a04 	addi	r6,sp,1128
   88aa4:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88aa8:	1000201e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88aac:	d9411b17 	ldw	r5,1132(sp)
   88ab0:	d8c11c17 	ldw	r3,1136(sp)
   88ab4:	d811883a 	mov	r8,sp
   88ab8:	28800044 	addi	r2,r5,1
   88abc:	003e8c06 	br	884f0 <___vfiprintf_internal_r+0x6a0>
   88ac0:	00c00044 	movi	r3,1
   88ac4:	10c0ab26 	beq	r2,r3,88d74 <___vfiprintf_internal_r+0xf24>
   88ac8:	00c00084 	movi	r3,2
   88acc:	10c0901e 	bne	r2,r3,88d10 <___vfiprintf_internal_r+0xec0>
   88ad0:	d9412717 	ldw	r5,1180(sp)
   88ad4:	d88109c4 	addi	r2,sp,1063
   88ad8:	a0c003cc 	andi	r3,r20,15
   88adc:	a808973a 	slli	r4,r21,28
   88ae0:	28c7883a 	add	r3,r5,r3
   88ae4:	a028d13a 	srli	r20,r20,4
   88ae8:	18c00003 	ldbu	r3,0(r3)
   88aec:	a82ad13a 	srli	r21,r21,4
   88af0:	2528b03a 	or	r20,r4,r20
   88af4:	10c00005 	stb	r3,0(r2)
   88af8:	a546b03a 	or	r3,r20,r21
   88afc:	102f883a 	mov	r23,r2
   88b00:	10bfffc4 	addi	r2,r2,-1
   88b04:	183ff41e 	bne	r3,zero,88ad8 <___vfiprintf_internal_r+0xc88>
   88b08:	d8811f17 	ldw	r2,1148(sp)
   88b0c:	15cfc83a 	sub	r7,r2,r23
   88b10:	003e1806 	br	88374 <___vfiprintf_internal_r+0x524>
   88b14:	d8811c17 	ldw	r2,1136(sp)
   88b18:	10000426 	beq	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88b1c:	d9012217 	ldw	r4,1160(sp)
   88b20:	d9412017 	ldw	r5,1152(sp)
   88b24:	d9811a04 	addi	r6,sp,1128
   88b28:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88b2c:	d8c12017 	ldw	r3,1152(sp)
   88b30:	1880030b 	ldhu	r2,12(r3)
   88b34:	1080100c 	andi	r2,r2,64
   88b38:	103dc31e 	bne	r2,zero,88248 <___vfiprintf_internal_r+0x3f8>
   88b3c:	d8812417 	ldw	r2,1168(sp)
   88b40:	003dc206 	br	8824c <___vfiprintf_internal_r+0x3fc>
   88b44:	d9012217 	ldw	r4,1160(sp)
   88b48:	d9412017 	ldw	r5,1152(sp)
   88b4c:	d9811a04 	addi	r6,sp,1128
   88b50:	da412d15 	stw	r9,1204(sp)
   88b54:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88b58:	da412d17 	ldw	r9,1204(sp)
   88b5c:	103ff31e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88b60:	d8c11c17 	ldw	r3,1136(sp)
   88b64:	d9412117 	ldw	r5,1156(sp)
   88b68:	a140010e 	bge	r20,r5,88b70 <___vfiprintf_internal_r+0xd20>
   88b6c:	2829883a 	mov	r20,r5
   88b70:	d8812417 	ldw	r2,1168(sp)
   88b74:	1505883a 	add	r2,r2,r20
   88b78:	d8812415 	stw	r2,1168(sp)
   88b7c:	18000726 	beq	r3,zero,88b9c <___vfiprintf_internal_r+0xd4c>
   88b80:	d9012217 	ldw	r4,1160(sp)
   88b84:	d9412017 	ldw	r5,1152(sp)
   88b88:	d9811a04 	addi	r6,sp,1128
   88b8c:	da412d15 	stw	r9,1204(sp)
   88b90:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88b94:	da412d17 	ldw	r9,1204(sp)
   88b98:	103fe41e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88b9c:	d8011b15 	stw	zero,1132(sp)
   88ba0:	d811883a 	mov	r8,sp
   88ba4:	003ce106 	br	87f2c <___vfiprintf_internal_r+0xdc>
   88ba8:	a809883a 	mov	r4,r21
   88bac:	b80b883a 	mov	r5,r23
   88bb0:	d9811a04 	addi	r6,sp,1128
   88bb4:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88bb8:	103fdc1e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88bbc:	d9011b17 	ldw	r4,1132(sp)
   88bc0:	d8c11c17 	ldw	r3,1136(sp)
   88bc4:	d811883a 	mov	r8,sp
   88bc8:	21400044 	addi	r5,r4,1
   88bcc:	003e8106 	br	885d4 <___vfiprintf_internal_r+0x784>
   88bd0:	1800cb1e 	bne	r3,zero,88f00 <___vfiprintf_internal_r+0x10b0>
   88bd4:	00800044 	movi	r2,1
   88bd8:	ddc00015 	stw	r23,0(sp)
   88bdc:	d9c00115 	stw	r7,4(sp)
   88be0:	d9c11c15 	stw	r7,1136(sp)
   88be4:	d8811b15 	stw	r2,1132(sp)
   88be8:	3807883a 	mov	r3,r7
   88bec:	d811883a 	mov	r8,sp
   88bf0:	42000204 	addi	r8,r8,8
   88bf4:	003e6406 	br	88588 <___vfiprintf_internal_r+0x738>
   88bf8:	d9012117 	ldw	r4,1156(sp)
   88bfc:	252dc83a 	sub	r22,r4,r20
   88c00:	05be2c0e 	bge	zero,r22,884b4 <___vfiprintf_internal_r+0x664>
   88c04:	07000404 	movi	fp,16
   88c08:	e581830e 	bge	fp,r22,89218 <___vfiprintf_internal_r+0x13c8>
   88c0c:	05400274 	movhi	r21,9
   88c10:	ad7f6504 	addi	r21,r21,-620
   88c14:	dc412515 	stw	r17,1172(sp)
   88c18:	028001c4 	movi	r10,7
   88c1c:	b023883a 	mov	r17,r22
   88c20:	d9c12615 	stw	r7,1176(sp)
   88c24:	a82d883a 	mov	r22,r21
   88c28:	482b883a 	mov	r21,r9
   88c2c:	00000506 	br	88c44 <___vfiprintf_internal_r+0xdf4>
   88c30:	29000084 	addi	r4,r5,2
   88c34:	42000204 	addi	r8,r8,8
   88c38:	100b883a 	mov	r5,r2
   88c3c:	8c7ffc04 	addi	r17,r17,-16
   88c40:	e4400d0e 	bge	fp,r17,88c78 <___vfiprintf_internal_r+0xe28>
   88c44:	18c00404 	addi	r3,r3,16
   88c48:	28800044 	addi	r2,r5,1
   88c4c:	44000015 	stw	r16,0(r8)
   88c50:	47000115 	stw	fp,4(r8)
   88c54:	d8c11c15 	stw	r3,1136(sp)
   88c58:	d8811b15 	stw	r2,1132(sp)
   88c5c:	50bff40e 	bge	r10,r2,88c30 <___vfiprintf_internal_r+0xde0>
   88c60:	1800151e 	bne	r3,zero,88cb8 <___vfiprintf_internal_r+0xe68>
   88c64:	8c7ffc04 	addi	r17,r17,-16
   88c68:	000b883a 	mov	r5,zero
   88c6c:	01000044 	movi	r4,1
   88c70:	d811883a 	mov	r8,sp
   88c74:	e47ff316 	blt	fp,r17,88c44 <___vfiprintf_internal_r+0xdf4>
   88c78:	a813883a 	mov	r9,r21
   88c7c:	d9c12617 	ldw	r7,1176(sp)
   88c80:	b02b883a 	mov	r21,r22
   88c84:	882d883a 	mov	r22,r17
   88c88:	dc412517 	ldw	r17,1172(sp)
   88c8c:	1d87883a 	add	r3,r3,r22
   88c90:	45400015 	stw	r21,0(r8)
   88c94:	45800115 	stw	r22,4(r8)
   88c98:	d8c11c15 	stw	r3,1136(sp)
   88c9c:	d9011b15 	stw	r4,1132(sp)
   88ca0:	008001c4 	movi	r2,7
   88ca4:	11009116 	blt	r2,r4,88eec <___vfiprintf_internal_r+0x109c>
   88ca8:	42000204 	addi	r8,r8,8
   88cac:	20800044 	addi	r2,r4,1
   88cb0:	200b883a 	mov	r5,r4
   88cb4:	003dff06 	br	884b4 <___vfiprintf_internal_r+0x664>
   88cb8:	d9012217 	ldw	r4,1160(sp)
   88cbc:	d9412017 	ldw	r5,1152(sp)
   88cc0:	d9811a04 	addi	r6,sp,1128
   88cc4:	da812c15 	stw	r10,1200(sp)
   88cc8:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88ccc:	da812c17 	ldw	r10,1200(sp)
   88cd0:	103f961e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88cd4:	d9411b17 	ldw	r5,1132(sp)
   88cd8:	d8c11c17 	ldw	r3,1136(sp)
   88cdc:	d811883a 	mov	r8,sp
   88ce0:	29000044 	addi	r4,r5,1
   88ce4:	003fd506 	br	88c3c <___vfiprintf_internal_r+0xdec>
   88ce8:	1800701e 	bne	r3,zero,88eac <___vfiprintf_internal_r+0x105c>
   88cec:	000b883a 	mov	r5,zero
   88cf0:	2005883a 	mov	r2,r4
   88cf4:	d811883a 	mov	r8,sp
   88cf8:	003ddf06 	br	88478 <___vfiprintf_internal_r+0x628>
   88cfc:	18005d1e 	bne	r3,zero,88e74 <___vfiprintf_internal_r+0x1024>
   88d00:	000b883a 	mov	r5,zero
   88d04:	00800044 	movi	r2,1
   88d08:	d811883a 	mov	r8,sp
   88d0c:	003de706 	br	884ac <___vfiprintf_internal_r+0x65c>
   88d10:	d8c109c4 	addi	r3,sp,1063
   88d14:	a008d0fa 	srli	r4,r20,3
   88d18:	a80a977a 	slli	r5,r21,29
   88d1c:	a82ad0fa 	srli	r21,r21,3
   88d20:	a50001cc 	andi	r20,r20,7
   88d24:	a0800c04 	addi	r2,r20,48
   88d28:	2928b03a 	or	r20,r5,r4
   88d2c:	18800005 	stb	r2,0(r3)
   88d30:	a548b03a 	or	r4,r20,r21
   88d34:	182f883a 	mov	r23,r3
   88d38:	18ffffc4 	addi	r3,r3,-1
   88d3c:	203ff51e 	bne	r4,zero,88d14 <___vfiprintf_internal_r+0xec4>
   88d40:	8900004c 	andi	r4,r17,1
   88d44:	b80b883a 	mov	r5,r23
   88d48:	203f6f26 	beq	r4,zero,88b08 <___vfiprintf_internal_r+0xcb8>
   88d4c:	10803fcc 	andi	r2,r2,255
   88d50:	1080201c 	xori	r2,r2,128
   88d54:	10bfe004 	addi	r2,r2,-128
   88d58:	01000c04 	movi	r4,48
   88d5c:	1100f526 	beq	r2,r4,89134 <___vfiprintf_internal_r+0x12e4>
   88d60:	293fffc5 	stb	r4,-1(r5)
   88d64:	d9011f17 	ldw	r4,1148(sp)
   88d68:	182f883a 	mov	r23,r3
   88d6c:	20cfc83a 	sub	r7,r4,r3
   88d70:	003d8006 	br	88374 <___vfiprintf_internal_r+0x524>
   88d74:	a800021e 	bne	r21,zero,88d80 <___vfiprintf_internal_r+0xf30>
   88d78:	00800244 	movi	r2,9
   88d7c:	15001d2e 	bgeu	r2,r20,88df4 <___vfiprintf_internal_r+0xfa4>
   88d80:	dc412515 	stw	r17,1172(sp)
   88d84:	d88109c4 	addi	r2,sp,1063
   88d88:	a823883a 	mov	r17,r21
   88d8c:	4039883a 	mov	fp,r8
   88d90:	482b883a 	mov	r21,r9
   88d94:	a009883a 	mov	r4,r20
   88d98:	880b883a 	mov	r5,r17
   88d9c:	01800284 	movi	r6,10
   88da0:	000f883a 	mov	r7,zero
   88da4:	102f883a 	mov	r23,r2
   88da8:	008a3300 	call	8a330 <__umoddi3>
   88dac:	10800c04 	addi	r2,r2,48
   88db0:	a009883a 	mov	r4,r20
   88db4:	880b883a 	mov	r5,r17
   88db8:	b8800005 	stb	r2,0(r23)
   88dbc:	01800284 	movi	r6,10
   88dc0:	000f883a 	mov	r7,zero
   88dc4:	0089cdc0 	call	89cdc <__udivdi3>
   88dc8:	1823883a 	mov	r17,r3
   88dcc:	10c6b03a 	or	r3,r2,r3
   88dd0:	1029883a 	mov	r20,r2
   88dd4:	b8bfffc4 	addi	r2,r23,-1
   88dd8:	183fee1e 	bne	r3,zero,88d94 <___vfiprintf_internal_r+0xf44>
   88ddc:	d9411f17 	ldw	r5,1148(sp)
   88de0:	e011883a 	mov	r8,fp
   88de4:	dc412517 	ldw	r17,1172(sp)
   88de8:	a813883a 	mov	r9,r21
   88dec:	2dcfc83a 	sub	r7,r5,r23
   88df0:	003d6006 	br	88374 <___vfiprintf_internal_r+0x524>
   88df4:	a5000c04 	addi	r20,r20,48
   88df8:	dd0109c5 	stb	r20,1063(sp)
   88dfc:	d9c12817 	ldw	r7,1184(sp)
   88e00:	ddc109c4 	addi	r23,sp,1063
   88e04:	003d5b06 	br	88374 <___vfiprintf_internal_r+0x524>
   88e08:	ddc10a04 	addi	r23,sp,1064
   88e0c:	003d5906 	br	88374 <___vfiprintf_internal_r+0x524>
   88e10:	1800891e 	bne	r3,zero,89038 <___vfiprintf_internal_r+0x11e8>
   88e14:	000b883a 	mov	r5,zero
   88e18:	00800044 	movi	r2,1
   88e1c:	d811883a 	mov	r8,sp
   88e20:	003f0e06 	br	88a5c <___vfiprintf_internal_r+0xc0c>
   88e24:	d9012217 	ldw	r4,1160(sp)
   88e28:	d9412017 	ldw	r5,1152(sp)
   88e2c:	d9811a04 	addi	r6,sp,1128
   88e30:	da412d15 	stw	r9,1204(sp)
   88e34:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88e38:	da412d17 	ldw	r9,1204(sp)
   88e3c:	103f3b1e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88e40:	d8c11c17 	ldw	r3,1136(sp)
   88e44:	d811883a 	mov	r8,sp
   88e48:	003dcf06 	br	88588 <___vfiprintf_internal_r+0x738>
   88e4c:	00800084 	movi	r2,2
   88e50:	a548b03a 	or	r4,r20,r21
   88e54:	003e0b06 	br	88684 <___vfiprintf_internal_r+0x834>
   88e58:	d9012217 	ldw	r4,1160(sp)
   88e5c:	d9412017 	ldw	r5,1152(sp)
   88e60:	d9811a04 	addi	r6,sp,1128
   88e64:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88e68:	103f301e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88e6c:	d811883a 	mov	r8,sp
   88e70:	003cbb06 	br	88160 <___vfiprintf_internal_r+0x310>
   88e74:	d9012217 	ldw	r4,1160(sp)
   88e78:	d9412017 	ldw	r5,1152(sp)
   88e7c:	d9811a04 	addi	r6,sp,1128
   88e80:	d9c12b15 	stw	r7,1196(sp)
   88e84:	da412d15 	stw	r9,1204(sp)
   88e88:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88e8c:	d9c12b17 	ldw	r7,1196(sp)
   88e90:	da412d17 	ldw	r9,1204(sp)
   88e94:	103f251e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88e98:	d9411b17 	ldw	r5,1132(sp)
   88e9c:	d8c11c17 	ldw	r3,1136(sp)
   88ea0:	d811883a 	mov	r8,sp
   88ea4:	28800044 	addi	r2,r5,1
   88ea8:	003d8006 	br	884ac <___vfiprintf_internal_r+0x65c>
   88eac:	d9012217 	ldw	r4,1160(sp)
   88eb0:	d9412017 	ldw	r5,1152(sp)
   88eb4:	d9811a04 	addi	r6,sp,1128
   88eb8:	d9c12b15 	stw	r7,1196(sp)
   88ebc:	da412d15 	stw	r9,1204(sp)
   88ec0:	da812c15 	stw	r10,1200(sp)
   88ec4:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88ec8:	d9c12b17 	ldw	r7,1196(sp)
   88ecc:	da412d17 	ldw	r9,1204(sp)
   88ed0:	da812c17 	ldw	r10,1200(sp)
   88ed4:	103f151e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88ed8:	d9411b17 	ldw	r5,1132(sp)
   88edc:	d8c11c17 	ldw	r3,1136(sp)
   88ee0:	d811883a 	mov	r8,sp
   88ee4:	28800044 	addi	r2,r5,1
   88ee8:	003d6306 	br	88478 <___vfiprintf_internal_r+0x628>
   88eec:	18009e1e 	bne	r3,zero,89168 <___vfiprintf_internal_r+0x1318>
   88ef0:	000b883a 	mov	r5,zero
   88ef4:	00800044 	movi	r2,1
   88ef8:	d811883a 	mov	r8,sp
   88efc:	003d6d06 	br	884b4 <___vfiprintf_internal_r+0x664>
   88f00:	d9012217 	ldw	r4,1160(sp)
   88f04:	d9412017 	ldw	r5,1152(sp)
   88f08:	d9811a04 	addi	r6,sp,1128
   88f0c:	d9c12b15 	stw	r7,1196(sp)
   88f10:	da412d15 	stw	r9,1204(sp)
   88f14:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   88f18:	d9c12b17 	ldw	r7,1196(sp)
   88f1c:	da412d17 	ldw	r9,1204(sp)
   88f20:	103f021e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   88f24:	d8811b17 	ldw	r2,1132(sp)
   88f28:	d8c11c17 	ldw	r3,1136(sp)
   88f2c:	d811883a 	mov	r8,sp
   88f30:	10800044 	addi	r2,r2,1
   88f34:	003d8a06 	br	88560 <___vfiprintf_internal_r+0x710>
   88f38:	4829883a 	mov	r20,r9
   88f3c:	003c1706 	br	87f9c <___vfiprintf_internal_r+0x14c>
   88f40:	0529c83a 	sub	r20,zero,r20
   88f44:	a004c03a 	cmpne	r2,r20,zero
   88f48:	056bc83a 	sub	r21,zero,r21
   88f4c:	a8abc83a 	sub	r21,r21,r2
   88f50:	05800b44 	movi	r22,45
   88f54:	dd811d85 	stb	r22,1142(sp)
   88f58:	900f883a 	mov	r7,r18
   88f5c:	00800044 	movi	r2,1
   88f60:	a548b03a 	or	r4,r20,r21
   88f64:	003cf606 	br	88340 <___vfiprintf_internal_r+0x4f0>
   88f68:	00800084 	movi	r2,2
   88f6c:	003dc506 	br	88684 <___vfiprintf_internal_r+0x834>
   88f70:	8880100c 	andi	r2,r17,64
   88f74:	10005a26 	beq	r2,zero,890e0 <___vfiprintf_internal_r+0x1290>
   88f78:	d9012317 	ldw	r4,1164(sp)
   88f7c:	002b883a 	mov	r21,zero
   88f80:	2500000b 	ldhu	r20,0(r4)
   88f84:	21000104 	addi	r4,r4,4
   88f88:	d9012315 	stw	r4,1164(sp)
   88f8c:	003ddc06 	br	88700 <___vfiprintf_internal_r+0x8b0>
   88f90:	8880100c 	andi	r2,r17,64
   88f94:	10005826 	beq	r2,zero,890f8 <___vfiprintf_internal_r+0x12a8>
   88f98:	d9412317 	ldw	r5,1164(sp)
   88f9c:	002b883a 	mov	r21,zero
   88fa0:	0005883a 	mov	r2,zero
   88fa4:	2d00000b 	ldhu	r20,0(r5)
   88fa8:	29400104 	addi	r5,r5,4
   88fac:	d9412315 	stw	r5,1164(sp)
   88fb0:	a009883a 	mov	r4,r20
   88fb4:	003db306 	br	88684 <___vfiprintf_internal_r+0x834>
   88fb8:	8880040c 	andi	r2,r17,16
   88fbc:	1000411e 	bne	r2,zero,890c4 <___vfiprintf_internal_r+0x1274>
   88fc0:	8c40100c 	andi	r17,r17,64
   88fc4:	88008726 	beq	r17,zero,891e4 <___vfiprintf_internal_r+0x1394>
   88fc8:	d9412317 	ldw	r5,1164(sp)
   88fcc:	d8c12417 	ldw	r3,1168(sp)
   88fd0:	28800017 	ldw	r2,0(r5)
   88fd4:	29400104 	addi	r5,r5,4
   88fd8:	d9412315 	stw	r5,1164(sp)
   88fdc:	10c0000d 	sth	r3,0(r2)
   88fe0:	003bd206 	br	87f2c <___vfiprintf_internal_r+0xdc>
   88fe4:	48c00007 	ldb	r3,0(r9)
   88fe8:	003bf906 	br	87fd0 <___vfiprintf_internal_r+0x180>
   88fec:	8880100c 	andi	r2,r17,64
   88ff0:	10002c26 	beq	r2,zero,890a4 <___vfiprintf_internal_r+0x1254>
   88ff4:	d9412317 	ldw	r5,1164(sp)
   88ff8:	002b883a 	mov	r21,zero
   88ffc:	00800044 	movi	r2,1
   89000:	2d00000b 	ldhu	r20,0(r5)
   89004:	29400104 	addi	r5,r5,4
   89008:	d9412315 	stw	r5,1164(sp)
   8900c:	a009883a 	mov	r4,r20
   89010:	003d9c06 	br	88684 <___vfiprintf_internal_r+0x834>
   89014:	8880100c 	andi	r2,r17,64
   89018:	10001b26 	beq	r2,zero,89088 <___vfiprintf_internal_r+0x1238>
   8901c:	d9412317 	ldw	r5,1164(sp)
   89020:	2d00000f 	ldh	r20,0(r5)
   89024:	29400104 	addi	r5,r5,4
   89028:	d9412315 	stw	r5,1164(sp)
   8902c:	a02bd7fa 	srai	r21,r20,31
   89030:	a805883a 	mov	r2,r21
   89034:	003cbd06 	br	8832c <___vfiprintf_internal_r+0x4dc>
   89038:	d9012217 	ldw	r4,1160(sp)
   8903c:	d9412017 	ldw	r5,1152(sp)
   89040:	d9811a04 	addi	r6,sp,1128
   89044:	d9c12b15 	stw	r7,1196(sp)
   89048:	da412d15 	stw	r9,1204(sp)
   8904c:	da812c15 	stw	r10,1200(sp)
   89050:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   89054:	d9c12b17 	ldw	r7,1196(sp)
   89058:	da412d17 	ldw	r9,1204(sp)
   8905c:	da812c17 	ldw	r10,1200(sp)
   89060:	103eb21e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   89064:	d9411b17 	ldw	r5,1132(sp)
   89068:	d8c11c17 	ldw	r3,1136(sp)
   8906c:	d811883a 	mov	r8,sp
   89070:	28800044 	addi	r2,r5,1
   89074:	003e7906 	br	88a5c <___vfiprintf_internal_r+0xc0c>
   89078:	1829883a 	mov	r20,r3
   8907c:	003d7006 	br	88640 <___vfiprintf_internal_r+0x7f0>
   89080:	900f883a 	mov	r7,r18
   89084:	003e2806 	br	88928 <___vfiprintf_internal_r+0xad8>
   89088:	d8812317 	ldw	r2,1164(sp)
   8908c:	15000017 	ldw	r20,0(r2)
   89090:	10800104 	addi	r2,r2,4
   89094:	d8812315 	stw	r2,1164(sp)
   89098:	a02bd7fa 	srai	r21,r20,31
   8909c:	a805883a 	mov	r2,r21
   890a0:	003ca206 	br	8832c <___vfiprintf_internal_r+0x4dc>
   890a4:	d8812317 	ldw	r2,1164(sp)
   890a8:	002b883a 	mov	r21,zero
   890ac:	15000017 	ldw	r20,0(r2)
   890b0:	10800104 	addi	r2,r2,4
   890b4:	d8812315 	stw	r2,1164(sp)
   890b8:	a009883a 	mov	r4,r20
   890bc:	00800044 	movi	r2,1
   890c0:	003d7006 	br	88684 <___vfiprintf_internal_r+0x834>
   890c4:	d8c12317 	ldw	r3,1164(sp)
   890c8:	d9012417 	ldw	r4,1168(sp)
   890cc:	18800017 	ldw	r2,0(r3)
   890d0:	18c00104 	addi	r3,r3,4
   890d4:	d8c12315 	stw	r3,1164(sp)
   890d8:	11000015 	stw	r4,0(r2)
   890dc:	003b9306 	br	87f2c <___vfiprintf_internal_r+0xdc>
   890e0:	d9412317 	ldw	r5,1164(sp)
   890e4:	002b883a 	mov	r21,zero
   890e8:	2d000017 	ldw	r20,0(r5)
   890ec:	29400104 	addi	r5,r5,4
   890f0:	d9412315 	stw	r5,1164(sp)
   890f4:	003d8206 	br	88700 <___vfiprintf_internal_r+0x8b0>
   890f8:	d8812317 	ldw	r2,1164(sp)
   890fc:	002b883a 	mov	r21,zero
   89100:	15000017 	ldw	r20,0(r2)
   89104:	10800104 	addi	r2,r2,4
   89108:	d8812315 	stw	r2,1164(sp)
   8910c:	a009883a 	mov	r4,r20
   89110:	0005883a 	mov	r2,zero
   89114:	003d5b06 	br	88684 <___vfiprintf_internal_r+0x834>
   89118:	04bfffc4 	movi	r18,-1
   8911c:	900d883a 	mov	r6,r18
   89120:	003bac06 	br	87fd4 <___vfiprintf_internal_r+0x184>
   89124:	4a400044 	addi	r9,r9,1
   89128:	8c400814 	ori	r17,r17,32
   8912c:	10c00047 	ldb	r3,1(r2)
   89130:	003ba706 	br	87fd0 <___vfiprintf_internal_r+0x180>
   89134:	d8c11f17 	ldw	r3,1148(sp)
   89138:	1dcfc83a 	sub	r7,r3,r23
   8913c:	003c8d06 	br	88374 <___vfiprintf_internal_r+0x524>
   89140:	da012b15 	stw	r8,1196(sp)
   89144:	da412d15 	stw	r9,1204(sp)
   89148:	00808b00 	call	808b0 <strlen>
   8914c:	100f883a 	mov	r7,r2
   89150:	dd811d83 	ldbu	r22,1142(sp)
   89154:	dd412315 	stw	r21,1164(sp)
   89158:	0025883a 	mov	r18,zero
   8915c:	da012b17 	ldw	r8,1196(sp)
   89160:	da412d17 	ldw	r9,1204(sp)
   89164:	003c8306 	br	88374 <___vfiprintf_internal_r+0x524>
   89168:	d9012217 	ldw	r4,1160(sp)
   8916c:	d9412017 	ldw	r5,1152(sp)
   89170:	d9811a04 	addi	r6,sp,1128
   89174:	d9c12b15 	stw	r7,1196(sp)
   89178:	da412d15 	stw	r9,1204(sp)
   8917c:	0087d3c0 	call	87d3c <__sprint_r.part.0>
   89180:	d9c12b17 	ldw	r7,1196(sp)
   89184:	da412d17 	ldw	r9,1204(sp)
   89188:	103e681e 	bne	r2,zero,88b2c <___vfiprintf_internal_r+0xcdc>
   8918c:	d9411b17 	ldw	r5,1132(sp)
   89190:	d8c11c17 	ldw	r3,1136(sp)
   89194:	d811883a 	mov	r8,sp
   89198:	28800044 	addi	r2,r5,1
   8919c:	003cc506 	br	884b4 <___vfiprintf_internal_r+0x664>
   891a0:	d9411b17 	ldw	r5,1132(sp)
   891a4:	01000274 	movhi	r4,9
   891a8:	213f6904 	addi	r4,r4,-604
   891ac:	d9012515 	stw	r4,1172(sp)
   891b0:	29400044 	addi	r5,r5,1
   891b4:	003ca406 	br	88448 <___vfiprintf_internal_r+0x5f8>
   891b8:	00800184 	movi	r2,6
   891bc:	300f883a 	mov	r7,r6
   891c0:	1180012e 	bgeu	r2,r6,891c8 <___vfiprintf_internal_r+0x1378>
   891c4:	100f883a 	mov	r7,r2
   891c8:	3829883a 	mov	r20,r7
   891cc:	38001e16 	blt	r7,zero,89248 <___vfiprintf_internal_r+0x13f8>
   891d0:	dd412315 	stw	r21,1164(sp)
   891d4:	05c00274 	movhi	r23,9
   891d8:	bdff0a04 	addi	r23,r23,-984
   891dc:	0025883a 	mov	r18,zero
   891e0:	003c6c06 	br	88394 <___vfiprintf_internal_r+0x544>
   891e4:	d9012317 	ldw	r4,1164(sp)
   891e8:	d9412417 	ldw	r5,1168(sp)
   891ec:	20800017 	ldw	r2,0(r4)
   891f0:	21000104 	addi	r4,r4,4
   891f4:	d9012315 	stw	r4,1164(sp)
   891f8:	11400015 	stw	r5,0(r2)
   891fc:	003b4b06 	br	87f2c <___vfiprintf_internal_r+0xdc>
   89200:	d9411b17 	ldw	r5,1132(sp)
   89204:	00800274 	movhi	r2,9
   89208:	10bf6904 	addi	r2,r2,-604
   8920c:	d8812515 	stw	r2,1172(sp)
   89210:	29400044 	addi	r5,r5,1
   89214:	003cff06 	br	88614 <___vfiprintf_internal_r+0x7c4>
   89218:	1009883a 	mov	r4,r2
   8921c:	05400274 	movhi	r21,9
   89220:	ad7f6504 	addi	r21,r21,-620
   89224:	003e9906 	br	88c8c <___vfiprintf_internal_r+0xe3c>
   89228:	900f883a 	mov	r7,r18
   8922c:	dd811d83 	ldbu	r22,1142(sp)
   89230:	dd412315 	stw	r21,1164(sp)
   89234:	0025883a 	mov	r18,zero
   89238:	003c4e06 	br	88374 <___vfiprintf_internal_r+0x524>
   8923c:	1013883a 	mov	r9,r2
   89240:	000d883a 	mov	r6,zero
   89244:	003b6306 	br	87fd4 <___vfiprintf_internal_r+0x184>
   89248:	0029883a 	mov	r20,zero
   8924c:	003fe006 	br	891d0 <___vfiprintf_internal_r+0x1380>
   89250:	043fffc4 	movi	r16,-1
   89254:	003bf306 	br	88224 <___vfiprintf_internal_r+0x3d4>
   89258:	d9412317 	ldw	r5,1164(sp)
   8925c:	48c00043 	ldbu	r3,1(r9)
   89260:	1013883a 	mov	r9,r2
   89264:	29800017 	ldw	r6,0(r5)
   89268:	29000104 	addi	r4,r5,4
   8926c:	d9012315 	stw	r4,1164(sp)
   89270:	30000416 	blt	r6,zero,89284 <___vfiprintf_internal_r+0x1434>
   89274:	18c03fcc 	andi	r3,r3,255
   89278:	18c0201c 	xori	r3,r3,128
   8927c:	18ffe004 	addi	r3,r3,-128
   89280:	003b5306 	br	87fd0 <___vfiprintf_internal_r+0x180>
   89284:	18c03fcc 	andi	r3,r3,255
   89288:	18c0201c 	xori	r3,r3,128
   8928c:	01bfffc4 	movi	r6,-1
   89290:	18ffe004 	addi	r3,r3,-128
   89294:	003b4e06 	br	87fd0 <___vfiprintf_internal_r+0x180>

00089298 <__vfiprintf_internal>:
   89298:	00800274 	movhi	r2,9
   8929c:	10866404 	addi	r2,r2,6544
   892a0:	2007883a 	mov	r3,r4
   892a4:	11000017 	ldw	r4,0(r2)
   892a8:	2805883a 	mov	r2,r5
   892ac:	300f883a 	mov	r7,r6
   892b0:	180b883a 	mov	r5,r3
   892b4:	100d883a 	mov	r6,r2
   892b8:	0087e501 	jmpi	87e50 <___vfiprintf_internal_r>

000892bc <_write_r>:
   892bc:	defffd04 	addi	sp,sp,-12
   892c0:	dc400115 	stw	r17,4(sp)
   892c4:	dc000015 	stw	r16,0(sp)
   892c8:	2023883a 	mov	r17,r4
   892cc:	04000274 	movhi	r16,9
   892d0:	840d3404 	addi	r16,r16,13520
   892d4:	2809883a 	mov	r4,r5
   892d8:	300b883a 	mov	r5,r6
   892dc:	380d883a 	mov	r6,r7
   892e0:	dfc00215 	stw	ra,8(sp)
   892e4:	80000015 	stw	zero,0(r16)
   892e8:	008daf80 	call	8daf8 <write>
   892ec:	00ffffc4 	movi	r3,-1
   892f0:	10c00526 	beq	r2,r3,89308 <_write_r+0x4c>
   892f4:	dfc00217 	ldw	ra,8(sp)
   892f8:	dc400117 	ldw	r17,4(sp)
   892fc:	dc000017 	ldw	r16,0(sp)
   89300:	dec00304 	addi	sp,sp,12
   89304:	f800283a 	ret
   89308:	80c00017 	ldw	r3,0(r16)
   8930c:	183ff926 	beq	r3,zero,892f4 <_write_r+0x38>
   89310:	88c00015 	stw	r3,0(r17)
   89314:	dfc00217 	ldw	ra,8(sp)
   89318:	dc400117 	ldw	r17,4(sp)
   8931c:	dc000017 	ldw	r16,0(sp)
   89320:	dec00304 	addi	sp,sp,12
   89324:	f800283a 	ret

00089328 <_close_r>:
   89328:	defffd04 	addi	sp,sp,-12
   8932c:	dc400115 	stw	r17,4(sp)
   89330:	dc000015 	stw	r16,0(sp)
   89334:	2023883a 	mov	r17,r4
   89338:	04000274 	movhi	r16,9
   8933c:	840d3404 	addi	r16,r16,13520
   89340:	2809883a 	mov	r4,r5
   89344:	dfc00215 	stw	ra,8(sp)
   89348:	80000015 	stw	zero,0(r16)
   8934c:	008d2740 	call	8d274 <close>
   89350:	00ffffc4 	movi	r3,-1
   89354:	10c00526 	beq	r2,r3,8936c <_close_r+0x44>
   89358:	dfc00217 	ldw	ra,8(sp)
   8935c:	dc400117 	ldw	r17,4(sp)
   89360:	dc000017 	ldw	r16,0(sp)
   89364:	dec00304 	addi	sp,sp,12
   89368:	f800283a 	ret
   8936c:	80c00017 	ldw	r3,0(r16)
   89370:	183ff926 	beq	r3,zero,89358 <_close_r+0x30>
   89374:	88c00015 	stw	r3,0(r17)
   89378:	dfc00217 	ldw	ra,8(sp)
   8937c:	dc400117 	ldw	r17,4(sp)
   89380:	dc000017 	ldw	r16,0(sp)
   89384:	dec00304 	addi	sp,sp,12
   89388:	f800283a 	ret

0008938c <_calloc_r>:
   8938c:	defffe04 	addi	sp,sp,-8
   89390:	dc000015 	stw	r16,0(sp)
   89394:	2021883a 	mov	r16,r4
   89398:	2809883a 	mov	r4,r5
   8939c:	300b883a 	mov	r5,r6
   893a0:	dfc00115 	stw	ra,4(sp)
   893a4:	008aa780 	call	8aa78 <__mulsi3>
   893a8:	8009883a 	mov	r4,r16
   893ac:	100b883a 	mov	r5,r2
   893b0:	00857080 	call	85708 <_malloc_r>
   893b4:	1021883a 	mov	r16,r2
   893b8:	10002826 	beq	r2,zero,8945c <_calloc_r+0xd0>
   893bc:	11bfff17 	ldw	r6,-4(r2)
   893c0:	00ffff04 	movi	r3,-4
   893c4:	00800904 	movi	r2,36
   893c8:	30cc703a 	and	r6,r6,r3
   893cc:	30cd883a 	add	r6,r6,r3
   893d0:	11801436 	bltu	r2,r6,89424 <_calloc_r+0x98>
   893d4:	00c004c4 	movi	r3,19
   893d8:	19800936 	bltu	r3,r6,89400 <_calloc_r+0x74>
   893dc:	8005883a 	mov	r2,r16
   893e0:	10000015 	stw	zero,0(r2)
   893e4:	10000115 	stw	zero,4(r2)
   893e8:	10000215 	stw	zero,8(r2)
   893ec:	8005883a 	mov	r2,r16
   893f0:	dfc00117 	ldw	ra,4(sp)
   893f4:	dc000017 	ldw	r16,0(sp)
   893f8:	dec00204 	addi	sp,sp,8
   893fc:	f800283a 	ret
   89400:	80000015 	stw	zero,0(r16)
   89404:	80000115 	stw	zero,4(r16)
   89408:	00c006c4 	movi	r3,27
   8940c:	19800d2e 	bgeu	r3,r6,89444 <_calloc_r+0xb8>
   89410:	80000215 	stw	zero,8(r16)
   89414:	80000315 	stw	zero,12(r16)
   89418:	30800c26 	beq	r6,r2,8944c <_calloc_r+0xc0>
   8941c:	80800404 	addi	r2,r16,16
   89420:	003fef06 	br	893e0 <_calloc_r+0x54>
   89424:	8009883a 	mov	r4,r16
   89428:	000b883a 	mov	r5,zero
   8942c:	00861fc0 	call	861fc <memset>
   89430:	8005883a 	mov	r2,r16
   89434:	dfc00117 	ldw	ra,4(sp)
   89438:	dc000017 	ldw	r16,0(sp)
   8943c:	dec00204 	addi	sp,sp,8
   89440:	f800283a 	ret
   89444:	80800204 	addi	r2,r16,8
   89448:	003fe506 	br	893e0 <_calloc_r+0x54>
   8944c:	80000415 	stw	zero,16(r16)
   89450:	80800604 	addi	r2,r16,24
   89454:	80000515 	stw	zero,20(r16)
   89458:	003fe106 	br	893e0 <_calloc_r+0x54>
   8945c:	0005883a 	mov	r2,zero
   89460:	003fe306 	br	893f0 <_calloc_r+0x64>

00089464 <_fclose_r>:
   89464:	defffc04 	addi	sp,sp,-16
   89468:	dc000015 	stw	r16,0(sp)
   8946c:	dfc00315 	stw	ra,12(sp)
   89470:	dc800215 	stw	r18,8(sp)
   89474:	dc400115 	stw	r17,4(sp)
   89478:	2821883a 	mov	r16,r5
   8947c:	28003126 	beq	r5,zero,89544 <_fclose_r+0xe0>
   89480:	2023883a 	mov	r17,r4
   89484:	0084a280 	call	84a28 <__sfp_lock_acquire>
   89488:	88000226 	beq	r17,zero,89494 <_fclose_r+0x30>
   8948c:	88800e17 	ldw	r2,56(r17)
   89490:	10003326 	beq	r2,zero,89560 <_fclose_r+0xfc>
   89494:	8080030f 	ldh	r2,12(r16)
   89498:	10002226 	beq	r2,zero,89524 <_fclose_r+0xc0>
   8949c:	8809883a 	mov	r4,r17
   894a0:	800b883a 	mov	r5,r16
   894a4:	00844500 	call	84450 <_fflush_r>
   894a8:	80c00b17 	ldw	r3,44(r16)
   894ac:	1025883a 	mov	r18,r2
   894b0:	18000426 	beq	r3,zero,894c4 <_fclose_r+0x60>
   894b4:	81400717 	ldw	r5,28(r16)
   894b8:	8809883a 	mov	r4,r17
   894bc:	183ee83a 	callr	r3
   894c0:	10003016 	blt	r2,zero,89584 <_fclose_r+0x120>
   894c4:	8080030b 	ldhu	r2,12(r16)
   894c8:	1080200c 	andi	r2,r2,128
   894cc:	1000291e 	bne	r2,zero,89574 <_fclose_r+0x110>
   894d0:	81400c17 	ldw	r5,48(r16)
   894d4:	28000526 	beq	r5,zero,894ec <_fclose_r+0x88>
   894d8:	80801004 	addi	r2,r16,64
   894dc:	28800226 	beq	r5,r2,894e8 <_fclose_r+0x84>
   894e0:	8809883a 	mov	r4,r17
   894e4:	0084ba40 	call	84ba4 <_free_r>
   894e8:	80000c15 	stw	zero,48(r16)
   894ec:	81401117 	ldw	r5,68(r16)
   894f0:	28000326 	beq	r5,zero,89500 <_fclose_r+0x9c>
   894f4:	8809883a 	mov	r4,r17
   894f8:	0084ba40 	call	84ba4 <_free_r>
   894fc:	80001115 	stw	zero,68(r16)
   89500:	8000030d 	sth	zero,12(r16)
   89504:	0084a2c0 	call	84a2c <__sfp_lock_release>
   89508:	9005883a 	mov	r2,r18
   8950c:	dfc00317 	ldw	ra,12(sp)
   89510:	dc800217 	ldw	r18,8(sp)
   89514:	dc400117 	ldw	r17,4(sp)
   89518:	dc000017 	ldw	r16,0(sp)
   8951c:	dec00404 	addi	sp,sp,16
   89520:	f800283a 	ret
   89524:	0084a2c0 	call	84a2c <__sfp_lock_release>
   89528:	0005883a 	mov	r2,zero
   8952c:	dfc00317 	ldw	ra,12(sp)
   89530:	dc800217 	ldw	r18,8(sp)
   89534:	dc400117 	ldw	r17,4(sp)
   89538:	dc000017 	ldw	r16,0(sp)
   8953c:	dec00404 	addi	sp,sp,16
   89540:	f800283a 	ret
   89544:	0005883a 	mov	r2,zero
   89548:	dfc00317 	ldw	ra,12(sp)
   8954c:	dc800217 	ldw	r18,8(sp)
   89550:	dc400117 	ldw	r17,4(sp)
   89554:	dc000017 	ldw	r16,0(sp)
   89558:	dec00404 	addi	sp,sp,16
   8955c:	f800283a 	ret
   89560:	8809883a 	mov	r4,r17
   89564:	00847700 	call	84770 <__sinit>
   89568:	8080030f 	ldh	r2,12(r16)
   8956c:	103fcb1e 	bne	r2,zero,8949c <_fclose_r+0x38>
   89570:	003fec06 	br	89524 <_fclose_r+0xc0>
   89574:	81400417 	ldw	r5,16(r16)
   89578:	8809883a 	mov	r4,r17
   8957c:	0084ba40 	call	84ba4 <_free_r>
   89580:	003fd306 	br	894d0 <_fclose_r+0x6c>
   89584:	04bfffc4 	movi	r18,-1
   89588:	003fce06 	br	894c4 <_fclose_r+0x60>

0008958c <fclose>:
   8958c:	00800274 	movhi	r2,9
   89590:	10866404 	addi	r2,r2,6544
   89594:	200b883a 	mov	r5,r4
   89598:	11000017 	ldw	r4,0(r2)
   8959c:	00894641 	jmpi	89464 <_fclose_r>

000895a0 <_fputwc_r>:
   895a0:	3080030b 	ldhu	r2,12(r6)
   895a4:	defff804 	addi	sp,sp,-32
   895a8:	dcc00415 	stw	r19,16(sp)
   895ac:	dc800315 	stw	r18,12(sp)
   895b0:	dc000115 	stw	r16,4(sp)
   895b4:	dfc00715 	stw	ra,28(sp)
   895b8:	dd400615 	stw	r21,24(sp)
   895bc:	dd000515 	stw	r20,20(sp)
   895c0:	dc400215 	stw	r17,8(sp)
   895c4:	10c8000c 	andi	r3,r2,8192
   895c8:	3021883a 	mov	r16,r6
   895cc:	2027883a 	mov	r19,r4
   895d0:	2825883a 	mov	r18,r5
   895d4:	1800051e 	bne	r3,zero,895ec <_fputwc_r+0x4c>
   895d8:	30c01917 	ldw	r3,100(r6)
   895dc:	10880014 	ori	r2,r2,8192
   895e0:	3080030d 	sth	r2,12(r6)
   895e4:	18880014 	ori	r2,r3,8192
   895e8:	30801915 	stw	r2,100(r6)
   895ec:	00854fc0 	call	854fc <__locale_mb_cur_max>
   895f0:	00c00044 	movi	r3,1
   895f4:	10c03e26 	beq	r2,r3,896f0 <_fputwc_r+0x150>
   895f8:	9809883a 	mov	r4,r19
   895fc:	d80b883a 	mov	r5,sp
   89600:	900d883a 	mov	r6,r18
   89604:	81c01704 	addi	r7,r16,92
   89608:	0089adc0 	call	89adc <_wcrtomb_r>
   8960c:	1029883a 	mov	r20,r2
   89610:	00bfffc4 	movi	r2,-1
   89614:	a0802026 	beq	r20,r2,89698 <_fputwc_r+0xf8>
   89618:	d9400003 	ldbu	r5,0(sp)
   8961c:	a0001c26 	beq	r20,zero,89690 <_fputwc_r+0xf0>
   89620:	0023883a 	mov	r17,zero
   89624:	05400284 	movi	r21,10
   89628:	00000906 	br	89650 <_fputwc_r+0xb0>
   8962c:	80c00017 	ldw	r3,0(r16)
   89630:	19400005 	stb	r5,0(r3)
   89634:	80c00017 	ldw	r3,0(r16)
   89638:	18c00044 	addi	r3,r3,1
   8963c:	80c00015 	stw	r3,0(r16)
   89640:	8c400044 	addi	r17,r17,1
   89644:	dc47883a 	add	r3,sp,r17
   89648:	8d00112e 	bgeu	r17,r20,89690 <_fputwc_r+0xf0>
   8964c:	19400003 	ldbu	r5,0(r3)
   89650:	80c00217 	ldw	r3,8(r16)
   89654:	18ffffc4 	addi	r3,r3,-1
   89658:	80c00215 	stw	r3,8(r16)
   8965c:	183ff30e 	bge	r3,zero,8962c <_fputwc_r+0x8c>
   89660:	80800617 	ldw	r2,24(r16)
   89664:	18801916 	blt	r3,r2,896cc <_fputwc_r+0x12c>
   89668:	80800017 	ldw	r2,0(r16)
   8966c:	11400005 	stb	r5,0(r2)
   89670:	80800017 	ldw	r2,0(r16)
   89674:	10c00003 	ldbu	r3,0(r2)
   89678:	10800044 	addi	r2,r2,1
   8967c:	1d402326 	beq	r3,r21,8970c <_fputwc_r+0x16c>
   89680:	8c400044 	addi	r17,r17,1
   89684:	80800015 	stw	r2,0(r16)
   89688:	dc47883a 	add	r3,sp,r17
   8968c:	8d3fef36 	bltu	r17,r20,8964c <_fputwc_r+0xac>
   89690:	9005883a 	mov	r2,r18
   89694:	00000406 	br	896a8 <_fputwc_r+0x108>
   89698:	80c0030b 	ldhu	r3,12(r16)
   8969c:	a005883a 	mov	r2,r20
   896a0:	18c01014 	ori	r3,r3,64
   896a4:	80c0030d 	sth	r3,12(r16)
   896a8:	dfc00717 	ldw	ra,28(sp)
   896ac:	dd400617 	ldw	r21,24(sp)
   896b0:	dd000517 	ldw	r20,20(sp)
   896b4:	dcc00417 	ldw	r19,16(sp)
   896b8:	dc800317 	ldw	r18,12(sp)
   896bc:	dc400217 	ldw	r17,8(sp)
   896c0:	dc000117 	ldw	r16,4(sp)
   896c4:	dec00804 	addi	sp,sp,32
   896c8:	f800283a 	ret
   896cc:	9809883a 	mov	r4,r19
   896d0:	29403fcc 	andi	r5,r5,255
   896d4:	800d883a 	mov	r6,r16
   896d8:	00899400 	call	89940 <__swbuf_r>
   896dc:	10bfffe0 	cmpeqi	r2,r2,-1
   896e0:	10803fcc 	andi	r2,r2,255
   896e4:	103fd626 	beq	r2,zero,89640 <_fputwc_r+0xa0>
   896e8:	00bfffc4 	movi	r2,-1
   896ec:	003fee06 	br	896a8 <_fputwc_r+0x108>
   896f0:	90ffffc4 	addi	r3,r18,-1
   896f4:	01003f84 	movi	r4,254
   896f8:	20ffbf36 	bltu	r4,r3,895f8 <_fputwc_r+0x58>
   896fc:	900b883a 	mov	r5,r18
   89700:	dc800005 	stb	r18,0(sp)
   89704:	1029883a 	mov	r20,r2
   89708:	003fc506 	br	89620 <_fputwc_r+0x80>
   8970c:	9809883a 	mov	r4,r19
   89710:	a80b883a 	mov	r5,r21
   89714:	800d883a 	mov	r6,r16
   89718:	00899400 	call	89940 <__swbuf_r>
   8971c:	10bfffe0 	cmpeqi	r2,r2,-1
   89720:	003fef06 	br	896e0 <_fputwc_r+0x140>

00089724 <fputwc>:
   89724:	defffc04 	addi	sp,sp,-16
   89728:	dc000115 	stw	r16,4(sp)
   8972c:	04000274 	movhi	r16,9
   89730:	84066404 	addi	r16,r16,6544
   89734:	80800017 	ldw	r2,0(r16)
   89738:	dc400215 	stw	r17,8(sp)
   8973c:	dfc00315 	stw	ra,12(sp)
   89740:	2023883a 	mov	r17,r4
   89744:	280d883a 	mov	r6,r5
   89748:	10000d26 	beq	r2,zero,89780 <fputwc+0x5c>
   8974c:	10c00e17 	ldw	r3,56(r2)
   89750:	1009883a 	mov	r4,r2
   89754:	1800041e 	bne	r3,zero,89768 <fputwc+0x44>
   89758:	d9400015 	stw	r5,0(sp)
   8975c:	00847700 	call	84770 <__sinit>
   89760:	81000017 	ldw	r4,0(r16)
   89764:	d9800017 	ldw	r6,0(sp)
   89768:	880b883a 	mov	r5,r17
   8976c:	dfc00317 	ldw	ra,12(sp)
   89770:	dc400217 	ldw	r17,8(sp)
   89774:	dc000117 	ldw	r16,4(sp)
   89778:	dec00404 	addi	sp,sp,16
   8977c:	00895a01 	jmpi	895a0 <_fputwc_r>
   89780:	0009883a 	mov	r4,zero
   89784:	880b883a 	mov	r5,r17
   89788:	dfc00317 	ldw	ra,12(sp)
   8978c:	dc400217 	ldw	r17,8(sp)
   89790:	dc000117 	ldw	r16,4(sp)
   89794:	dec00404 	addi	sp,sp,16
   89798:	00895a01 	jmpi	895a0 <_fputwc_r>

0008979c <_fstat_r>:
   8979c:	defffd04 	addi	sp,sp,-12
   897a0:	dc400115 	stw	r17,4(sp)
   897a4:	dc000015 	stw	r16,0(sp)
   897a8:	2023883a 	mov	r17,r4
   897ac:	04000274 	movhi	r16,9
   897b0:	840d3404 	addi	r16,r16,13520
   897b4:	2809883a 	mov	r4,r5
   897b8:	300b883a 	mov	r5,r6
   897bc:	dfc00215 	stw	ra,8(sp)
   897c0:	80000015 	stw	zero,0(r16)
   897c4:	008d3c00 	call	8d3c0 <fstat>
   897c8:	00ffffc4 	movi	r3,-1
   897cc:	10c00526 	beq	r2,r3,897e4 <_fstat_r+0x48>
   897d0:	dfc00217 	ldw	ra,8(sp)
   897d4:	dc400117 	ldw	r17,4(sp)
   897d8:	dc000017 	ldw	r16,0(sp)
   897dc:	dec00304 	addi	sp,sp,12
   897e0:	f800283a 	ret
   897e4:	80c00017 	ldw	r3,0(r16)
   897e8:	183ff926 	beq	r3,zero,897d0 <_fstat_r+0x34>
   897ec:	88c00015 	stw	r3,0(r17)
   897f0:	dfc00217 	ldw	ra,8(sp)
   897f4:	dc400117 	ldw	r17,4(sp)
   897f8:	dc000017 	ldw	r16,0(sp)
   897fc:	dec00304 	addi	sp,sp,12
   89800:	f800283a 	ret

00089804 <_isatty_r>:
   89804:	defffd04 	addi	sp,sp,-12
   89808:	dc400115 	stw	r17,4(sp)
   8980c:	dc000015 	stw	r16,0(sp)
   89810:	2023883a 	mov	r17,r4
   89814:	04000274 	movhi	r16,9
   89818:	840d3404 	addi	r16,r16,13520
   8981c:	2809883a 	mov	r4,r5
   89820:	dfc00215 	stw	ra,8(sp)
   89824:	80000015 	stw	zero,0(r16)
   89828:	008d4c40 	call	8d4c4 <isatty>
   8982c:	00ffffc4 	movi	r3,-1
   89830:	10c00526 	beq	r2,r3,89848 <_isatty_r+0x44>
   89834:	dfc00217 	ldw	ra,8(sp)
   89838:	dc400117 	ldw	r17,4(sp)
   8983c:	dc000017 	ldw	r16,0(sp)
   89840:	dec00304 	addi	sp,sp,12
   89844:	f800283a 	ret
   89848:	80c00017 	ldw	r3,0(r16)
   8984c:	183ff926 	beq	r3,zero,89834 <_isatty_r+0x30>
   89850:	88c00015 	stw	r3,0(r17)
   89854:	dfc00217 	ldw	ra,8(sp)
   89858:	dc400117 	ldw	r17,4(sp)
   8985c:	dc000017 	ldw	r16,0(sp)
   89860:	dec00304 	addi	sp,sp,12
   89864:	f800283a 	ret

00089868 <_lseek_r>:
   89868:	defffd04 	addi	sp,sp,-12
   8986c:	dc400115 	stw	r17,4(sp)
   89870:	dc000015 	stw	r16,0(sp)
   89874:	2023883a 	mov	r17,r4
   89878:	04000274 	movhi	r16,9
   8987c:	840d3404 	addi	r16,r16,13520
   89880:	2809883a 	mov	r4,r5
   89884:	300b883a 	mov	r5,r6
   89888:	380d883a 	mov	r6,r7
   8988c:	dfc00215 	stw	ra,8(sp)
   89890:	80000015 	stw	zero,0(r16)
   89894:	008d6a00 	call	8d6a0 <lseek>
   89898:	00ffffc4 	movi	r3,-1
   8989c:	10c00526 	beq	r2,r3,898b4 <_lseek_r+0x4c>
   898a0:	dfc00217 	ldw	ra,8(sp)
   898a4:	dc400117 	ldw	r17,4(sp)
   898a8:	dc000017 	ldw	r16,0(sp)
   898ac:	dec00304 	addi	sp,sp,12
   898b0:	f800283a 	ret
   898b4:	80c00017 	ldw	r3,0(r16)
   898b8:	183ff926 	beq	r3,zero,898a0 <_lseek_r+0x38>
   898bc:	88c00015 	stw	r3,0(r17)
   898c0:	dfc00217 	ldw	ra,8(sp)
   898c4:	dc400117 	ldw	r17,4(sp)
   898c8:	dc000017 	ldw	r16,0(sp)
   898cc:	dec00304 	addi	sp,sp,12
   898d0:	f800283a 	ret

000898d4 <_read_r>:
   898d4:	defffd04 	addi	sp,sp,-12
   898d8:	dc400115 	stw	r17,4(sp)
   898dc:	dc000015 	stw	r16,0(sp)
   898e0:	2023883a 	mov	r17,r4
   898e4:	04000274 	movhi	r16,9
   898e8:	840d3404 	addi	r16,r16,13520
   898ec:	2809883a 	mov	r4,r5
   898f0:	300b883a 	mov	r5,r6
   898f4:	380d883a 	mov	r6,r7
   898f8:	dfc00215 	stw	ra,8(sp)
   898fc:	80000015 	stw	zero,0(r16)
   89900:	008d8800 	call	8d880 <read>
   89904:	00ffffc4 	movi	r3,-1
   89908:	10c00526 	beq	r2,r3,89920 <_read_r+0x4c>
   8990c:	dfc00217 	ldw	ra,8(sp)
   89910:	dc400117 	ldw	r17,4(sp)
   89914:	dc000017 	ldw	r16,0(sp)
   89918:	dec00304 	addi	sp,sp,12
   8991c:	f800283a 	ret
   89920:	80c00017 	ldw	r3,0(r16)
   89924:	183ff926 	beq	r3,zero,8990c <_read_r+0x38>
   89928:	88c00015 	stw	r3,0(r17)
   8992c:	dfc00217 	ldw	ra,8(sp)
   89930:	dc400117 	ldw	r17,4(sp)
   89934:	dc000017 	ldw	r16,0(sp)
   89938:	dec00304 	addi	sp,sp,12
   8993c:	f800283a 	ret

00089940 <__swbuf_r>:
   89940:	defffc04 	addi	sp,sp,-16
   89944:	dc800215 	stw	r18,8(sp)
   89948:	dc400115 	stw	r17,4(sp)
   8994c:	dc000015 	stw	r16,0(sp)
   89950:	dfc00315 	stw	ra,12(sp)
   89954:	2023883a 	mov	r17,r4
   89958:	2825883a 	mov	r18,r5
   8995c:	3021883a 	mov	r16,r6
   89960:	20000226 	beq	r4,zero,8996c <__swbuf_r+0x2c>
   89964:	20800e17 	ldw	r2,56(r4)
   89968:	10004d26 	beq	r2,zero,89aa0 <__swbuf_r+0x160>
   8996c:	80800617 	ldw	r2,24(r16)
   89970:	80c0030b 	ldhu	r3,12(r16)
   89974:	80800215 	stw	r2,8(r16)
   89978:	1880020c 	andi	r2,r3,8
   8997c:	10004126 	beq	r2,zero,89a84 <__swbuf_r+0x144>
   89980:	80800417 	ldw	r2,16(r16)
   89984:	10003f26 	beq	r2,zero,89a84 <__swbuf_r+0x144>
   89988:	1908000c 	andi	r4,r3,8192
   8998c:	94803fcc 	andi	r18,r18,255
   89990:	20001726 	beq	r4,zero,899f0 <__swbuf_r+0xb0>
   89994:	80c00017 	ldw	r3,0(r16)
   89998:	81000517 	ldw	r4,20(r16)
   8999c:	1885c83a 	sub	r2,r3,r2
   899a0:	11001d0e 	bge	r2,r4,89a18 <__swbuf_r+0xd8>
   899a4:	81000217 	ldw	r4,8(r16)
   899a8:	19400044 	addi	r5,r3,1
   899ac:	81400015 	stw	r5,0(r16)
   899b0:	213fffc4 	addi	r4,r4,-1
   899b4:	81000215 	stw	r4,8(r16)
   899b8:	1c800005 	stb	r18,0(r3)
   899bc:	80c00517 	ldw	r3,20(r16)
   899c0:	10800044 	addi	r2,r2,1
   899c4:	18802226 	beq	r3,r2,89a50 <__swbuf_r+0x110>
   899c8:	8080030b 	ldhu	r2,12(r16)
   899cc:	1080004c 	andi	r2,r2,1
   899d0:	1000251e 	bne	r2,zero,89a68 <__swbuf_r+0x128>
   899d4:	9005883a 	mov	r2,r18
   899d8:	dfc00317 	ldw	ra,12(sp)
   899dc:	dc800217 	ldw	r18,8(sp)
   899e0:	dc400117 	ldw	r17,4(sp)
   899e4:	dc000017 	ldw	r16,0(sp)
   899e8:	dec00404 	addi	sp,sp,16
   899ec:	f800283a 	ret
   899f0:	81401917 	ldw	r5,100(r16)
   899f4:	18c80014 	ori	r3,r3,8192
   899f8:	0137ffc4 	movi	r4,-8193
   899fc:	2908703a 	and	r4,r5,r4
   89a00:	80c0030d 	sth	r3,12(r16)
   89a04:	80c00017 	ldw	r3,0(r16)
   89a08:	81001915 	stw	r4,100(r16)
   89a0c:	81000517 	ldw	r4,20(r16)
   89a10:	1885c83a 	sub	r2,r3,r2
   89a14:	113fe316 	blt	r2,r4,899a4 <__swbuf_r+0x64>
   89a18:	8809883a 	mov	r4,r17
   89a1c:	800b883a 	mov	r5,r16
   89a20:	00844500 	call	84450 <_fflush_r>
   89a24:	10000e1e 	bne	r2,zero,89a60 <__swbuf_r+0x120>
   89a28:	80c00017 	ldw	r3,0(r16)
   89a2c:	81000217 	ldw	r4,8(r16)
   89a30:	00800044 	movi	r2,1
   89a34:	19400044 	addi	r5,r3,1
   89a38:	213fffc4 	addi	r4,r4,-1
   89a3c:	81400015 	stw	r5,0(r16)
   89a40:	81000215 	stw	r4,8(r16)
   89a44:	1c800005 	stb	r18,0(r3)
   89a48:	80c00517 	ldw	r3,20(r16)
   89a4c:	18bfde1e 	bne	r3,r2,899c8 <__swbuf_r+0x88>
   89a50:	8809883a 	mov	r4,r17
   89a54:	800b883a 	mov	r5,r16
   89a58:	00844500 	call	84450 <_fflush_r>
   89a5c:	103fdd26 	beq	r2,zero,899d4 <__swbuf_r+0x94>
   89a60:	00bfffc4 	movi	r2,-1
   89a64:	003fdc06 	br	899d8 <__swbuf_r+0x98>
   89a68:	00800284 	movi	r2,10
   89a6c:	90bfd91e 	bne	r18,r2,899d4 <__swbuf_r+0x94>
   89a70:	8809883a 	mov	r4,r17
   89a74:	800b883a 	mov	r5,r16
   89a78:	00844500 	call	84450 <_fflush_r>
   89a7c:	103fd526 	beq	r2,zero,899d4 <__swbuf_r+0x94>
   89a80:	003ff706 	br	89a60 <__swbuf_r+0x120>
   89a84:	8809883a 	mov	r4,r17
   89a88:	800b883a 	mov	r5,r16
   89a8c:	0082ab40 	call	82ab4 <__swsetup_r>
   89a90:	80c0030b 	ldhu	r3,12(r16)
   89a94:	1000041e 	bne	r2,zero,89aa8 <__swbuf_r+0x168>
   89a98:	80800417 	ldw	r2,16(r16)
   89a9c:	003fba06 	br	89988 <__swbuf_r+0x48>
   89aa0:	00847700 	call	84770 <__sinit>
   89aa4:	003fb106 	br	8996c <__swbuf_r+0x2c>
   89aa8:	18c01014 	ori	r3,r3,64
   89aac:	80c0030d 	sth	r3,12(r16)
   89ab0:	00c00244 	movi	r3,9
   89ab4:	00bfffc4 	movi	r2,-1
   89ab8:	88c00015 	stw	r3,0(r17)
   89abc:	003fc606 	br	899d8 <__swbuf_r+0x98>

00089ac0 <__swbuf>:
   89ac0:	00c00274 	movhi	r3,9
   89ac4:	18c66404 	addi	r3,r3,6544
   89ac8:	2005883a 	mov	r2,r4
   89acc:	19000017 	ldw	r4,0(r3)
   89ad0:	280d883a 	mov	r6,r5
   89ad4:	100b883a 	mov	r5,r2
   89ad8:	00899401 	jmpi	89940 <__swbuf_r>

00089adc <_wcrtomb_r>:
   89adc:	defff604 	addi	sp,sp,-40
   89ae0:	dc800815 	stw	r18,32(sp)
   89ae4:	dc400715 	stw	r17,28(sp)
   89ae8:	dc000615 	stw	r16,24(sp)
   89aec:	00800274 	movhi	r2,9
   89af0:	10866804 	addi	r2,r2,6560
   89af4:	dfc00915 	stw	ra,36(sp)
   89af8:	2021883a 	mov	r16,r4
   89afc:	3823883a 	mov	r17,r7
   89b00:	14800017 	ldw	r18,0(r2)
   89b04:	28001426 	beq	r5,zero,89b58 <_wcrtomb_r+0x7c>
   89b08:	d9400415 	stw	r5,16(sp)
   89b0c:	d9800515 	stw	r6,20(sp)
   89b10:	00854f00 	call	854f0 <__locale_charset>
   89b14:	d9400417 	ldw	r5,16(sp)
   89b18:	d9800517 	ldw	r6,20(sp)
   89b1c:	8009883a 	mov	r4,r16
   89b20:	dc400015 	stw	r17,0(sp)
   89b24:	100f883a 	mov	r7,r2
   89b28:	903ee83a 	callr	r18
   89b2c:	00ffffc4 	movi	r3,-1
   89b30:	10c0031e 	bne	r2,r3,89b40 <_wcrtomb_r+0x64>
   89b34:	88000015 	stw	zero,0(r17)
   89b38:	00c02284 	movi	r3,138
   89b3c:	80c00015 	stw	r3,0(r16)
   89b40:	dfc00917 	ldw	ra,36(sp)
   89b44:	dc800817 	ldw	r18,32(sp)
   89b48:	dc400717 	ldw	r17,28(sp)
   89b4c:	dc000617 	ldw	r16,24(sp)
   89b50:	dec00a04 	addi	sp,sp,40
   89b54:	f800283a 	ret
   89b58:	00854f00 	call	854f0 <__locale_charset>
   89b5c:	8009883a 	mov	r4,r16
   89b60:	dc400015 	stw	r17,0(sp)
   89b64:	d9400104 	addi	r5,sp,4
   89b68:	000d883a 	mov	r6,zero
   89b6c:	100f883a 	mov	r7,r2
   89b70:	903ee83a 	callr	r18
   89b74:	003fed06 	br	89b2c <_wcrtomb_r+0x50>

00089b78 <wcrtomb>:
   89b78:	defff504 	addi	sp,sp,-44
   89b7c:	dc400515 	stw	r17,20(sp)
   89b80:	dc000415 	stw	r16,16(sp)
   89b84:	dfc00a15 	stw	ra,40(sp)
   89b88:	dd400915 	stw	r21,36(sp)
   89b8c:	dd000815 	stw	r20,32(sp)
   89b90:	dcc00715 	stw	r19,28(sp)
   89b94:	dc800615 	stw	r18,24(sp)
   89b98:	2021883a 	mov	r16,r4
   89b9c:	3023883a 	mov	r17,r6
   89ba0:	20001d26 	beq	r4,zero,89c18 <wcrtomb+0xa0>
   89ba4:	04800274 	movhi	r18,9
   89ba8:	94866404 	addi	r18,r18,6544
   89bac:	95400017 	ldw	r21,0(r18)
   89bb0:	00800274 	movhi	r2,9
   89bb4:	10866804 	addi	r2,r2,6560
   89bb8:	15000017 	ldw	r20,0(r2)
   89bbc:	2827883a 	mov	r19,r5
   89bc0:	00854f00 	call	854f0 <__locale_charset>
   89bc4:	a809883a 	mov	r4,r21
   89bc8:	dc400015 	stw	r17,0(sp)
   89bcc:	800b883a 	mov	r5,r16
   89bd0:	980d883a 	mov	r6,r19
   89bd4:	100f883a 	mov	r7,r2
   89bd8:	a03ee83a 	callr	r20
   89bdc:	00ffffc4 	movi	r3,-1
   89be0:	10c0041e 	bne	r2,r3,89bf4 <wcrtomb+0x7c>
   89be4:	90c00017 	ldw	r3,0(r18)
   89be8:	01002284 	movi	r4,138
   89bec:	88000015 	stw	zero,0(r17)
   89bf0:	19000015 	stw	r4,0(r3)
   89bf4:	dfc00a17 	ldw	ra,40(sp)
   89bf8:	dd400917 	ldw	r21,36(sp)
   89bfc:	dd000817 	ldw	r20,32(sp)
   89c00:	dcc00717 	ldw	r19,28(sp)
   89c04:	dc800617 	ldw	r18,24(sp)
   89c08:	dc400517 	ldw	r17,20(sp)
   89c0c:	dc000417 	ldw	r16,16(sp)
   89c10:	dec00b04 	addi	sp,sp,44
   89c14:	f800283a 	ret
   89c18:	04800274 	movhi	r18,9
   89c1c:	94866404 	addi	r18,r18,6544
   89c20:	94c00017 	ldw	r19,0(r18)
   89c24:	00800274 	movhi	r2,9
   89c28:	10866804 	addi	r2,r2,6560
   89c2c:	14000017 	ldw	r16,0(r2)
   89c30:	00854f00 	call	854f0 <__locale_charset>
   89c34:	9809883a 	mov	r4,r19
   89c38:	dc400015 	stw	r17,0(sp)
   89c3c:	d9400104 	addi	r5,sp,4
   89c40:	000d883a 	mov	r6,zero
   89c44:	100f883a 	mov	r7,r2
   89c48:	803ee83a 	callr	r16
   89c4c:	003fe306 	br	89bdc <wcrtomb+0x64>

00089c50 <__ascii_wctomb>:
   89c50:	28000526 	beq	r5,zero,89c68 <__ascii_wctomb+0x18>
   89c54:	00803fc4 	movi	r2,255
   89c58:	11800536 	bltu	r2,r6,89c70 <__ascii_wctomb+0x20>
   89c5c:	29800005 	stb	r6,0(r5)
   89c60:	00800044 	movi	r2,1
   89c64:	f800283a 	ret
   89c68:	0005883a 	mov	r2,zero
   89c6c:	f800283a 	ret
   89c70:	00802284 	movi	r2,138
   89c74:	20800015 	stw	r2,0(r4)
   89c78:	00bfffc4 	movi	r2,-1
   89c7c:	f800283a 	ret

00089c80 <_wctomb_r>:
   89c80:	defff904 	addi	sp,sp,-28
   89c84:	00800274 	movhi	r2,9
   89c88:	10866804 	addi	r2,r2,6560
   89c8c:	dfc00615 	stw	ra,24(sp)
   89c90:	dc400515 	stw	r17,20(sp)
   89c94:	dc000415 	stw	r16,16(sp)
   89c98:	3823883a 	mov	r17,r7
   89c9c:	14000017 	ldw	r16,0(r2)
   89ca0:	d9000115 	stw	r4,4(sp)
   89ca4:	d9400215 	stw	r5,8(sp)
   89ca8:	d9800315 	stw	r6,12(sp)
   89cac:	00854f00 	call	854f0 <__locale_charset>
   89cb0:	d9000117 	ldw	r4,4(sp)
   89cb4:	d9400217 	ldw	r5,8(sp)
   89cb8:	d9800317 	ldw	r6,12(sp)
   89cbc:	dc400015 	stw	r17,0(sp)
   89cc0:	100f883a 	mov	r7,r2
   89cc4:	803ee83a 	callr	r16
   89cc8:	dfc00617 	ldw	ra,24(sp)
   89ccc:	dc400517 	ldw	r17,20(sp)
   89cd0:	dc000417 	ldw	r16,16(sp)
   89cd4:	dec00704 	addi	sp,sp,28
   89cd8:	f800283a 	ret

00089cdc <__udivdi3>:
   89cdc:	defff504 	addi	sp,sp,-44
   89ce0:	dc800315 	stw	r18,12(sp)
   89ce4:	dc400215 	stw	r17,8(sp)
   89ce8:	dfc00a15 	stw	ra,40(sp)
   89cec:	df000915 	stw	fp,36(sp)
   89cf0:	ddc00815 	stw	r23,32(sp)
   89cf4:	dd800715 	stw	r22,28(sp)
   89cf8:	dd400615 	stw	r21,24(sp)
   89cfc:	dd000515 	stw	r20,20(sp)
   89d00:	dcc00415 	stw	r19,16(sp)
   89d04:	dc000115 	stw	r16,4(sp)
   89d08:	2025883a 	mov	r18,r4
   89d0c:	2823883a 	mov	r17,r5
   89d10:	3800481e 	bne	r7,zero,89e34 <__udivdi3+0x158>
   89d14:	3021883a 	mov	r16,r6
   89d18:	2027883a 	mov	r19,r4
   89d1c:	29805a2e 	bgeu	r5,r6,89e88 <__udivdi3+0x1ac>
   89d20:	00bfffd4 	movui	r2,65535
   89d24:	2829883a 	mov	r20,r5
   89d28:	1180b436 	bltu	r2,r6,89ffc <__udivdi3+0x320>
   89d2c:	00803fc4 	movi	r2,255
   89d30:	11816736 	bltu	r2,r6,8a2d0 <__udivdi3+0x5f4>
   89d34:	0005883a 	mov	r2,zero
   89d38:	0007883a 	mov	r3,zero
   89d3c:	3084d83a 	srl	r2,r6,r2
   89d40:	01000274 	movhi	r4,9
   89d44:	213f6d04 	addi	r4,r4,-588
   89d48:	2085883a 	add	r2,r4,r2
   89d4c:	10800003 	ldbu	r2,0(r2)
   89d50:	10c7883a 	add	r3,r2,r3
   89d54:	00800804 	movi	r2,32
   89d58:	10c5c83a 	sub	r2,r2,r3
   89d5c:	10000526 	beq	r2,zero,89d74 <__udivdi3+0x98>
   89d60:	88a2983a 	sll	r17,r17,r2
   89d64:	90c6d83a 	srl	r3,r18,r3
   89d68:	30a0983a 	sll	r16,r6,r2
   89d6c:	90a6983a 	sll	r19,r18,r2
   89d70:	88e8b03a 	or	r20,r17,r3
   89d74:	8022d43a 	srli	r17,r16,16
   89d78:	a009883a 	mov	r4,r20
   89d7c:	857fffcc 	andi	r21,r16,65535
   89d80:	880b883a 	mov	r5,r17
   89d84:	008aa700 	call	8aa70 <__umodsi3>
   89d88:	a009883a 	mov	r4,r20
   89d8c:	880b883a 	mov	r5,r17
   89d90:	102d883a 	mov	r22,r2
   89d94:	008aa680 	call	8aa68 <__udivsi3>
   89d98:	1009883a 	mov	r4,r2
   89d9c:	a80b883a 	mov	r5,r21
   89da0:	1025883a 	mov	r18,r2
   89da4:	008aa780 	call	8aa78 <__mulsi3>
   89da8:	1009883a 	mov	r4,r2
   89dac:	b006943a 	slli	r3,r22,16
   89db0:	9804d43a 	srli	r2,r19,16
   89db4:	1886b03a 	or	r3,r3,r2
   89db8:	1900052e 	bgeu	r3,r4,89dd0 <__udivdi3+0xf4>
   89dbc:	1c07883a 	add	r3,r3,r16
   89dc0:	90bfffc4 	addi	r2,r18,-1
   89dc4:	1c000136 	bltu	r3,r16,89dcc <__udivdi3+0xf0>
   89dc8:	19015636 	bltu	r3,r4,8a324 <__udivdi3+0x648>
   89dcc:	1025883a 	mov	r18,r2
   89dd0:	1929c83a 	sub	r20,r3,r4
   89dd4:	880b883a 	mov	r5,r17
   89dd8:	a009883a 	mov	r4,r20
   89ddc:	008aa700 	call	8aa70 <__umodsi3>
   89de0:	102d883a 	mov	r22,r2
   89de4:	880b883a 	mov	r5,r17
   89de8:	a009883a 	mov	r4,r20
   89dec:	b02c943a 	slli	r22,r22,16
   89df0:	008aa680 	call	8aa68 <__udivsi3>
   89df4:	1009883a 	mov	r4,r2
   89df8:	a80b883a 	mov	r5,r21
   89dfc:	9cffffcc 	andi	r19,r19,65535
   89e00:	1023883a 	mov	r17,r2
   89e04:	b4e6b03a 	or	r19,r22,r19
   89e08:	008aa780 	call	8aa78 <__mulsi3>
   89e0c:	9880052e 	bgeu	r19,r2,89e24 <__udivdi3+0x148>
   89e10:	9c27883a 	add	r19,r19,r16
   89e14:	88ffffc4 	addi	r3,r17,-1
   89e18:	9c011436 	bltu	r19,r16,8a26c <__udivdi3+0x590>
   89e1c:	9881132e 	bgeu	r19,r2,8a26c <__udivdi3+0x590>
   89e20:	8c7fff84 	addi	r17,r17,-2
   89e24:	9024943a 	slli	r18,r18,16
   89e28:	0007883a 	mov	r3,zero
   89e2c:	8c84b03a 	or	r2,r17,r18
   89e30:	00006106 	br	89fb8 <__udivdi3+0x2dc>
   89e34:	29c05e36 	bltu	r5,r7,89fb0 <__udivdi3+0x2d4>
   89e38:	00bfffd4 	movui	r2,65535
   89e3c:	11c06a2e 	bgeu	r2,r7,89fe8 <__udivdi3+0x30c>
   89e40:	00804034 	movhi	r2,256
   89e44:	10bfffc4 	addi	r2,r2,-1
   89e48:	11c11236 	bltu	r2,r7,8a294 <__udivdi3+0x5b8>
   89e4c:	00c00404 	movi	r3,16
   89e50:	180b883a 	mov	r5,r3
   89e54:	38c6d83a 	srl	r3,r7,r3
   89e58:	01000274 	movhi	r4,9
   89e5c:	213f6d04 	addi	r4,r4,-588
   89e60:	04000804 	movi	r16,32
   89e64:	20c7883a 	add	r3,r4,r3
   89e68:	18800003 	ldbu	r2,0(r3)
   89e6c:	1145883a 	add	r2,r2,r5
   89e70:	80a1c83a 	sub	r16,r16,r2
   89e74:	80006c1e 	bne	r16,zero,8a028 <__udivdi3+0x34c>
   89e78:	3c411836 	bltu	r7,r17,8a2dc <__udivdi3+0x600>
   89e7c:	9185403a 	cmpgeu	r2,r18,r6
   89e80:	0007883a 	mov	r3,zero
   89e84:	00004c06 	br	89fb8 <__udivdi3+0x2dc>
   89e88:	3000041e 	bne	r6,zero,89e9c <__udivdi3+0x1c0>
   89e8c:	01000044 	movi	r4,1
   89e90:	000b883a 	mov	r5,zero
   89e94:	008aa680 	call	8aa68 <__udivsi3>
   89e98:	1021883a 	mov	r16,r2
   89e9c:	00bfffd4 	movui	r2,65535
   89ea0:	14005c2e 	bgeu	r2,r16,8a014 <__udivdi3+0x338>
   89ea4:	00804034 	movhi	r2,256
   89ea8:	10bfffc4 	addi	r2,r2,-1
   89eac:	14010236 	bltu	r2,r16,8a2b8 <__udivdi3+0x5dc>
   89eb0:	00800404 	movi	r2,16
   89eb4:	1007883a 	mov	r3,r2
   89eb8:	8084d83a 	srl	r2,r16,r2
   89ebc:	01000274 	movhi	r4,9
   89ec0:	213f6d04 	addi	r4,r4,-588
   89ec4:	2085883a 	add	r2,r4,r2
   89ec8:	10800003 	ldbu	r2,0(r2)
   89ecc:	10c7883a 	add	r3,r2,r3
   89ed0:	00800804 	movi	r2,32
   89ed4:	10c5c83a 	sub	r2,r2,r3
   89ed8:	1000aa1e 	bne	r2,zero,8a184 <__udivdi3+0x4a8>
   89edc:	8028d43a 	srli	r20,r16,16
   89ee0:	8c23c83a 	sub	r17,r17,r16
   89ee4:	857fffcc 	andi	r21,r16,65535
   89ee8:	00c00044 	movi	r3,1
   89eec:	8809883a 	mov	r4,r17
   89ef0:	a00b883a 	mov	r5,r20
   89ef4:	d8c00015 	stw	r3,0(sp)
   89ef8:	008aa700 	call	8aa70 <__umodsi3>
   89efc:	8809883a 	mov	r4,r17
   89f00:	a00b883a 	mov	r5,r20
   89f04:	102d883a 	mov	r22,r2
   89f08:	008aa680 	call	8aa68 <__udivsi3>
   89f0c:	1009883a 	mov	r4,r2
   89f10:	a80b883a 	mov	r5,r21
   89f14:	1025883a 	mov	r18,r2
   89f18:	008aa780 	call	8aa78 <__mulsi3>
   89f1c:	1009883a 	mov	r4,r2
   89f20:	b00e943a 	slli	r7,r22,16
   89f24:	9804d43a 	srli	r2,r19,16
   89f28:	d8c00017 	ldw	r3,0(sp)
   89f2c:	388eb03a 	or	r7,r7,r2
   89f30:	3900052e 	bgeu	r7,r4,89f48 <__udivdi3+0x26c>
   89f34:	3c0f883a 	add	r7,r7,r16
   89f38:	90bfffc4 	addi	r2,r18,-1
   89f3c:	3c000136 	bltu	r7,r16,89f44 <__udivdi3+0x268>
   89f40:	3900f536 	bltu	r7,r4,8a318 <__udivdi3+0x63c>
   89f44:	1025883a 	mov	r18,r2
   89f48:	3923c83a 	sub	r17,r7,r4
   89f4c:	8809883a 	mov	r4,r17
   89f50:	a00b883a 	mov	r5,r20
   89f54:	d8c00015 	stw	r3,0(sp)
   89f58:	008aa700 	call	8aa70 <__umodsi3>
   89f5c:	102d883a 	mov	r22,r2
   89f60:	8809883a 	mov	r4,r17
   89f64:	a00b883a 	mov	r5,r20
   89f68:	b02c943a 	slli	r22,r22,16
   89f6c:	008aa680 	call	8aa68 <__udivsi3>
   89f70:	1009883a 	mov	r4,r2
   89f74:	a80b883a 	mov	r5,r21
   89f78:	9cffffcc 	andi	r19,r19,65535
   89f7c:	1023883a 	mov	r17,r2
   89f80:	b4e6b03a 	or	r19,r22,r19
   89f84:	008aa780 	call	8aa78 <__mulsi3>
   89f88:	d8c00017 	ldw	r3,0(sp)
   89f8c:	9880052e 	bgeu	r19,r2,89fa4 <__udivdi3+0x2c8>
   89f90:	9c27883a 	add	r19,r19,r16
   89f94:	893fffc4 	addi	r4,r17,-1
   89f98:	9c00b236 	bltu	r19,r16,8a264 <__udivdi3+0x588>
   89f9c:	9880b12e 	bgeu	r19,r2,8a264 <__udivdi3+0x588>
   89fa0:	8c7fff84 	addi	r17,r17,-2
   89fa4:	9024943a 	slli	r18,r18,16
   89fa8:	8c84b03a 	or	r2,r17,r18
   89fac:	00000206 	br	89fb8 <__udivdi3+0x2dc>
   89fb0:	0007883a 	mov	r3,zero
   89fb4:	0005883a 	mov	r2,zero
   89fb8:	dfc00a17 	ldw	ra,40(sp)
   89fbc:	df000917 	ldw	fp,36(sp)
   89fc0:	ddc00817 	ldw	r23,32(sp)
   89fc4:	dd800717 	ldw	r22,28(sp)
   89fc8:	dd400617 	ldw	r21,24(sp)
   89fcc:	dd000517 	ldw	r20,20(sp)
   89fd0:	dcc00417 	ldw	r19,16(sp)
   89fd4:	dc800317 	ldw	r18,12(sp)
   89fd8:	dc400217 	ldw	r17,8(sp)
   89fdc:	dc000117 	ldw	r16,4(sp)
   89fe0:	dec00b04 	addi	sp,sp,44
   89fe4:	f800283a 	ret
   89fe8:	00803fc4 	movi	r2,255
   89fec:	11c0ac36 	bltu	r2,r7,8a2a0 <__udivdi3+0x5c4>
   89ff0:	0007883a 	mov	r3,zero
   89ff4:	000b883a 	mov	r5,zero
   89ff8:	003f9606 	br	89e54 <__udivdi3+0x178>
   89ffc:	00804034 	movhi	r2,256
   8a000:	10bfffc4 	addi	r2,r2,-1
   8a004:	1180a936 	bltu	r2,r6,8a2ac <__udivdi3+0x5d0>
   8a008:	00800404 	movi	r2,16
   8a00c:	1007883a 	mov	r3,r2
   8a010:	003f4a06 	br	89d3c <__udivdi3+0x60>
   8a014:	00803fc4 	movi	r2,255
   8a018:	1400aa36 	bltu	r2,r16,8a2c4 <__udivdi3+0x5e8>
   8a01c:	0005883a 	mov	r2,zero
   8a020:	0007883a 	mov	r3,zero
   8a024:	003fa406 	br	89eb8 <__udivdi3+0x1dc>
   8a028:	3c0e983a 	sll	r7,r7,r16
   8a02c:	3086d83a 	srl	r3,r6,r2
   8a030:	88aed83a 	srl	r23,r17,r2
   8a034:	9084d83a 	srl	r2,r18,r2
   8a038:	38e6b03a 	or	r19,r7,r3
   8a03c:	9828d43a 	srli	r20,r19,16
   8a040:	8c22983a 	sll	r17,r17,r16
   8a044:	b809883a 	mov	r4,r23
   8a048:	a00b883a 	mov	r5,r20
   8a04c:	342a983a 	sll	r21,r6,r16
   8a050:	88a2b03a 	or	r17,r17,r2
   8a054:	008aa700 	call	8aa70 <__umodsi3>
   8a058:	b809883a 	mov	r4,r23
   8a05c:	a00b883a 	mov	r5,r20
   8a060:	1039883a 	mov	fp,r2
   8a064:	9dbfffcc 	andi	r22,r19,65535
   8a068:	008aa680 	call	8aa68 <__udivsi3>
   8a06c:	1009883a 	mov	r4,r2
   8a070:	b00b883a 	mov	r5,r22
   8a074:	102f883a 	mov	r23,r2
   8a078:	008aa780 	call	8aa78 <__mulsi3>
   8a07c:	1009883a 	mov	r4,r2
   8a080:	e00e943a 	slli	r7,fp,16
   8a084:	8804d43a 	srli	r2,r17,16
   8a088:	388eb03a 	or	r7,r7,r2
   8a08c:	3900042e 	bgeu	r7,r4,8a0a0 <__udivdi3+0x3c4>
   8a090:	3ccf883a 	add	r7,r7,r19
   8a094:	b8bfffc4 	addi	r2,r23,-1
   8a098:	3cc0972e 	bgeu	r7,r19,8a2f8 <__udivdi3+0x61c>
   8a09c:	102f883a 	mov	r23,r2
   8a0a0:	3939c83a 	sub	fp,r7,r4
   8a0a4:	a00b883a 	mov	r5,r20
   8a0a8:	e009883a 	mov	r4,fp
   8a0ac:	008aa700 	call	8aa70 <__umodsi3>
   8a0b0:	a00b883a 	mov	r5,r20
   8a0b4:	e009883a 	mov	r4,fp
   8a0b8:	d8800015 	stw	r2,0(sp)
   8a0bc:	008aa680 	call	8aa68 <__udivsi3>
   8a0c0:	1009883a 	mov	r4,r2
   8a0c4:	b00b883a 	mov	r5,r22
   8a0c8:	1029883a 	mov	r20,r2
   8a0cc:	008aa780 	call	8aa78 <__mulsi3>
   8a0d0:	d8c00017 	ldw	r3,0(sp)
   8a0d4:	8c7fffcc 	andi	r17,r17,65535
   8a0d8:	1806943a 	slli	r3,r3,16
   8a0dc:	1c46b03a 	or	r3,r3,r17
   8a0e0:	1880042e 	bgeu	r3,r2,8a0f4 <__udivdi3+0x418>
   8a0e4:	1cc7883a 	add	r3,r3,r19
   8a0e8:	a13fffc4 	addi	r4,r20,-1
   8a0ec:	1cc07e2e 	bgeu	r3,r19,8a2e8 <__udivdi3+0x60c>
   8a0f0:	2029883a 	mov	r20,r4
   8a0f4:	b82e943a 	slli	r23,r23,16
   8a0f8:	a822d43a 	srli	r17,r21,16
   8a0fc:	ad7fffcc 	andi	r21,r21,65535
   8a100:	a5e8b03a 	or	r20,r20,r23
   8a104:	a5bfffcc 	andi	r22,r20,65535
   8a108:	b009883a 	mov	r4,r22
   8a10c:	a80b883a 	mov	r5,r21
   8a110:	18afc83a 	sub	r23,r3,r2
   8a114:	a026d43a 	srli	r19,r20,16
   8a118:	008aa780 	call	8aa78 <__mulsi3>
   8a11c:	b009883a 	mov	r4,r22
   8a120:	880b883a 	mov	r5,r17
   8a124:	1039883a 	mov	fp,r2
   8a128:	008aa780 	call	8aa78 <__mulsi3>
   8a12c:	a80b883a 	mov	r5,r21
   8a130:	9809883a 	mov	r4,r19
   8a134:	102d883a 	mov	r22,r2
   8a138:	008aa780 	call	8aa78 <__mulsi3>
   8a13c:	9809883a 	mov	r4,r19
   8a140:	880b883a 	mov	r5,r17
   8a144:	102b883a 	mov	r21,r2
   8a148:	008aa780 	call	8aa78 <__mulsi3>
   8a14c:	100b883a 	mov	r5,r2
   8a150:	e004d43a 	srli	r2,fp,16
   8a154:	ad89883a 	add	r4,r21,r22
   8a158:	2089883a 	add	r4,r4,r2
   8a15c:	2540022e 	bgeu	r4,r21,8a168 <__udivdi3+0x48c>
   8a160:	00800074 	movhi	r2,1
   8a164:	288b883a 	add	r5,r5,r2
   8a168:	2004d43a 	srli	r2,r4,16
   8a16c:	288b883a 	add	r5,r5,r2
   8a170:	b9404536 	bltu	r23,r5,8a288 <__udivdi3+0x5ac>
   8a174:	b9403f26 	beq	r23,r5,8a274 <__udivdi3+0x598>
   8a178:	a005883a 	mov	r2,r20
   8a17c:	0007883a 	mov	r3,zero
   8a180:	003f8d06 	br	89fb8 <__udivdi3+0x2dc>
   8a184:	80a0983a 	sll	r16,r16,r2
   8a188:	88eed83a 	srl	r23,r17,r3
   8a18c:	90c6d83a 	srl	r3,r18,r3
   8a190:	8028d43a 	srli	r20,r16,16
   8a194:	88a2983a 	sll	r17,r17,r2
   8a198:	b809883a 	mov	r4,r23
   8a19c:	a00b883a 	mov	r5,r20
   8a1a0:	88ecb03a 	or	r22,r17,r3
   8a1a4:	90a6983a 	sll	r19,r18,r2
   8a1a8:	008aa700 	call	8aa70 <__umodsi3>
   8a1ac:	b809883a 	mov	r4,r23
   8a1b0:	a00b883a 	mov	r5,r20
   8a1b4:	1023883a 	mov	r17,r2
   8a1b8:	857fffcc 	andi	r21,r16,65535
   8a1bc:	008aa680 	call	8aa68 <__udivsi3>
   8a1c0:	1009883a 	mov	r4,r2
   8a1c4:	a80b883a 	mov	r5,r21
   8a1c8:	102f883a 	mov	r23,r2
   8a1cc:	008aa780 	call	8aa78 <__mulsi3>
   8a1d0:	1009883a 	mov	r4,r2
   8a1d4:	880c943a 	slli	r6,r17,16
   8a1d8:	b004d43a 	srli	r2,r22,16
   8a1dc:	308cb03a 	or	r6,r6,r2
   8a1e0:	3100062e 	bgeu	r6,r4,8a1fc <__udivdi3+0x520>
   8a1e4:	340d883a 	add	r6,r6,r16
   8a1e8:	b8bfffc4 	addi	r2,r23,-1
   8a1ec:	34004836 	bltu	r6,r16,8a310 <__udivdi3+0x634>
   8a1f0:	3100472e 	bgeu	r6,r4,8a310 <__udivdi3+0x634>
   8a1f4:	bdffff84 	addi	r23,r23,-2
   8a1f8:	340d883a 	add	r6,r6,r16
   8a1fc:	3125c83a 	sub	r18,r6,r4
   8a200:	9009883a 	mov	r4,r18
   8a204:	a00b883a 	mov	r5,r20
   8a208:	008aa700 	call	8aa70 <__umodsi3>
   8a20c:	1023883a 	mov	r17,r2
   8a210:	9009883a 	mov	r4,r18
   8a214:	a00b883a 	mov	r5,r20
   8a218:	8822943a 	slli	r17,r17,16
   8a21c:	008aa680 	call	8aa68 <__udivsi3>
   8a220:	1009883a 	mov	r4,r2
   8a224:	a80b883a 	mov	r5,r21
   8a228:	b5bfffcc 	andi	r22,r22,65535
   8a22c:	1025883a 	mov	r18,r2
   8a230:	8da2b03a 	or	r17,r17,r22
   8a234:	008aa780 	call	8aa78 <__mulsi3>
   8a238:	8880062e 	bgeu	r17,r2,8a254 <__udivdi3+0x578>
   8a23c:	8c23883a 	add	r17,r17,r16
   8a240:	90ffffc4 	addi	r3,r18,-1
   8a244:	8c003036 	bltu	r17,r16,8a308 <__udivdi3+0x62c>
   8a248:	88802f2e 	bgeu	r17,r2,8a308 <__udivdi3+0x62c>
   8a24c:	94bfff84 	addi	r18,r18,-2
   8a250:	8c23883a 	add	r17,r17,r16
   8a254:	b806943a 	slli	r3,r23,16
   8a258:	88a3c83a 	sub	r17,r17,r2
   8a25c:	90c6b03a 	or	r3,r18,r3
   8a260:	003f2206 	br	89eec <__udivdi3+0x210>
   8a264:	2023883a 	mov	r17,r4
   8a268:	003f4e06 	br	89fa4 <__udivdi3+0x2c8>
   8a26c:	1823883a 	mov	r17,r3
   8a270:	003eec06 	br	89e24 <__udivdi3+0x148>
   8a274:	2008943a 	slli	r4,r4,16
   8a278:	9420983a 	sll	r16,r18,r16
   8a27c:	e73fffcc 	andi	fp,fp,65535
   8a280:	2709883a 	add	r4,r4,fp
   8a284:	813fbc2e 	bgeu	r16,r4,8a178 <__udivdi3+0x49c>
   8a288:	a0bfffc4 	addi	r2,r20,-1
   8a28c:	0007883a 	mov	r3,zero
   8a290:	003f4906 	br	89fb8 <__udivdi3+0x2dc>
   8a294:	00c00604 	movi	r3,24
   8a298:	180b883a 	mov	r5,r3
   8a29c:	003eed06 	br	89e54 <__udivdi3+0x178>
   8a2a0:	00c00204 	movi	r3,8
   8a2a4:	180b883a 	mov	r5,r3
   8a2a8:	003eea06 	br	89e54 <__udivdi3+0x178>
   8a2ac:	00800604 	movi	r2,24
   8a2b0:	1007883a 	mov	r3,r2
   8a2b4:	003ea106 	br	89d3c <__udivdi3+0x60>
   8a2b8:	00800604 	movi	r2,24
   8a2bc:	1007883a 	mov	r3,r2
   8a2c0:	003efd06 	br	89eb8 <__udivdi3+0x1dc>
   8a2c4:	00800204 	movi	r2,8
   8a2c8:	1007883a 	mov	r3,r2
   8a2cc:	003efa06 	br	89eb8 <__udivdi3+0x1dc>
   8a2d0:	00800204 	movi	r2,8
   8a2d4:	1007883a 	mov	r3,r2
   8a2d8:	003e9806 	br	89d3c <__udivdi3+0x60>
   8a2dc:	0007883a 	mov	r3,zero
   8a2e0:	00800044 	movi	r2,1
   8a2e4:	003f3406 	br	89fb8 <__udivdi3+0x2dc>
   8a2e8:	18bf812e 	bgeu	r3,r2,8a0f0 <__udivdi3+0x414>
   8a2ec:	a53fff84 	addi	r20,r20,-2
   8a2f0:	1cc7883a 	add	r3,r3,r19
   8a2f4:	003f7f06 	br	8a0f4 <__udivdi3+0x418>
   8a2f8:	393f682e 	bgeu	r7,r4,8a09c <__udivdi3+0x3c0>
   8a2fc:	bdffff84 	addi	r23,r23,-2
   8a300:	3ccf883a 	add	r7,r7,r19
   8a304:	003f6606 	br	8a0a0 <__udivdi3+0x3c4>
   8a308:	1825883a 	mov	r18,r3
   8a30c:	003fd106 	br	8a254 <__udivdi3+0x578>
   8a310:	102f883a 	mov	r23,r2
   8a314:	003fb906 	br	8a1fc <__udivdi3+0x520>
   8a318:	94bfff84 	addi	r18,r18,-2
   8a31c:	3c0f883a 	add	r7,r7,r16
   8a320:	003f0906 	br	89f48 <__udivdi3+0x26c>
   8a324:	94bfff84 	addi	r18,r18,-2
   8a328:	1c07883a 	add	r3,r3,r16
   8a32c:	003ea806 	br	89dd0 <__udivdi3+0xf4>

0008a330 <__umoddi3>:
   8a330:	defff304 	addi	sp,sp,-52
   8a334:	dd000715 	stw	r20,28(sp)
   8a338:	dc800515 	stw	r18,20(sp)
   8a33c:	dc400415 	stw	r17,16(sp)
   8a340:	dfc00c15 	stw	ra,48(sp)
   8a344:	df000b15 	stw	fp,44(sp)
   8a348:	ddc00a15 	stw	r23,40(sp)
   8a34c:	dd800915 	stw	r22,36(sp)
   8a350:	dd400815 	stw	r21,32(sp)
   8a354:	dcc00615 	stw	r19,24(sp)
   8a358:	dc000315 	stw	r16,12(sp)
   8a35c:	2025883a 	mov	r18,r4
   8a360:	2823883a 	mov	r17,r5
   8a364:	2829883a 	mov	r20,r5
   8a368:	38003d1e 	bne	r7,zero,8a460 <__umoddi3+0x130>
   8a36c:	3021883a 	mov	r16,r6
   8a370:	2027883a 	mov	r19,r4
   8a374:	2980532e 	bgeu	r5,r6,8a4c4 <__umoddi3+0x194>
   8a378:	00bfffd4 	movui	r2,65535
   8a37c:	1180a636 	bltu	r2,r6,8a618 <__umoddi3+0x2e8>
   8a380:	00803fc4 	movi	r2,255
   8a384:	11816336 	bltu	r2,r6,8a914 <__umoddi3+0x5e4>
   8a388:	0005883a 	mov	r2,zero
   8a38c:	0009883a 	mov	r4,zero
   8a390:	3084d83a 	srl	r2,r6,r2
   8a394:	00c00274 	movhi	r3,9
   8a398:	18ff6d04 	addi	r3,r3,-588
   8a39c:	1885883a 	add	r2,r3,r2
   8a3a0:	10800003 	ldbu	r2,0(r2)
   8a3a4:	1109883a 	add	r4,r2,r4
   8a3a8:	00800804 	movi	r2,32
   8a3ac:	1105c83a 	sub	r2,r2,r4
   8a3b0:	10011026 	beq	r2,zero,8a7f4 <__umoddi3+0x4c4>
   8a3b4:	9108d83a 	srl	r4,r18,r4
   8a3b8:	88a2983a 	sll	r17,r17,r2
   8a3bc:	30a0983a 	sll	r16,r6,r2
   8a3c0:	90a6983a 	sll	r19,r18,r2
   8a3c4:	8928b03a 	or	r20,r17,r4
   8a3c8:	1025883a 	mov	r18,r2
   8a3cc:	8022d43a 	srli	r17,r16,16
   8a3d0:	a009883a 	mov	r4,r20
   8a3d4:	857fffcc 	andi	r21,r16,65535
   8a3d8:	880b883a 	mov	r5,r17
   8a3dc:	008aa700 	call	8aa70 <__umodsi3>
   8a3e0:	a009883a 	mov	r4,r20
   8a3e4:	880b883a 	mov	r5,r17
   8a3e8:	102d883a 	mov	r22,r2
   8a3ec:	008aa680 	call	8aa68 <__udivsi3>
   8a3f0:	1009883a 	mov	r4,r2
   8a3f4:	a80b883a 	mov	r5,r21
   8a3f8:	008aa780 	call	8aa78 <__mulsi3>
   8a3fc:	1009883a 	mov	r4,r2
   8a400:	b006943a 	slli	r3,r22,16
   8a404:	9804d43a 	srli	r2,r19,16
   8a408:	1886b03a 	or	r3,r3,r2
   8a40c:	1900042e 	bgeu	r3,r4,8a420 <__umoddi3+0xf0>
   8a410:	1c07883a 	add	r3,r3,r16
   8a414:	1c000236 	bltu	r3,r16,8a420 <__umoddi3+0xf0>
   8a418:	1900012e 	bgeu	r3,r4,8a420 <__umoddi3+0xf0>
   8a41c:	1c07883a 	add	r3,r3,r16
   8a420:	1929c83a 	sub	r20,r3,r4
   8a424:	a009883a 	mov	r4,r20
   8a428:	880b883a 	mov	r5,r17
   8a42c:	008aa700 	call	8aa70 <__umodsi3>
   8a430:	102d883a 	mov	r22,r2
   8a434:	a009883a 	mov	r4,r20
   8a438:	880b883a 	mov	r5,r17
   8a43c:	b02c943a 	slli	r22,r22,16
   8a440:	008aa680 	call	8aa68 <__udivsi3>
   8a444:	1009883a 	mov	r4,r2
   8a448:	a80b883a 	mov	r5,r21
   8a44c:	9cffffcc 	andi	r19,r19,65535
   8a450:	008aa780 	call	8aa78 <__mulsi3>
   8a454:	b4e6b03a 	or	r19,r22,r19
   8a458:	9880582e 	bgeu	r19,r2,8a5bc <__umoddi3+0x28c>
   8a45c:	00005306 	br	8a5ac <__umoddi3+0x27c>
   8a460:	29c05a36 	bltu	r5,r7,8a5cc <__umoddi3+0x29c>
   8a464:	00bfffd4 	movui	r2,65535
   8a468:	11c0662e 	bgeu	r2,r7,8a604 <__umoddi3+0x2d4>
   8a46c:	00804034 	movhi	r2,256
   8a470:	10bfffc4 	addi	r2,r2,-1
   8a474:	11c11b36 	bltu	r2,r7,8a8e4 <__umoddi3+0x5b4>
   8a478:	00c00404 	movi	r3,16
   8a47c:	1827883a 	mov	r19,r3
   8a480:	38c6d83a 	srl	r3,r7,r3
   8a484:	01000274 	movhi	r4,9
   8a488:	213f6d04 	addi	r4,r4,-588
   8a48c:	04000804 	movi	r16,32
   8a490:	20c7883a 	add	r3,r4,r3
   8a494:	18800003 	ldbu	r2,0(r3)
   8a498:	14e7883a 	add	r19,r2,r19
   8a49c:	84e1c83a 	sub	r16,r16,r19
   8a4a0:	8000681e 	bne	r16,zero,8a644 <__umoddi3+0x314>
   8a4a4:	3c400136 	bltu	r7,r17,8a4ac <__umoddi3+0x17c>
   8a4a8:	91812736 	bltu	r18,r6,8a948 <__umoddi3+0x618>
   8a4ac:	9185c83a 	sub	r2,r18,r6
   8a4b0:	89e3c83a 	sub	r17,r17,r7
   8a4b4:	90a5803a 	cmpltu	r18,r18,r2
   8a4b8:	8ca9c83a 	sub	r20,r17,r18
   8a4bc:	a007883a 	mov	r3,r20
   8a4c0:	00004406 	br	8a5d4 <__umoddi3+0x2a4>
   8a4c4:	3000041e 	bne	r6,zero,8a4d8 <__umoddi3+0x1a8>
   8a4c8:	01000044 	movi	r4,1
   8a4cc:	000b883a 	mov	r5,zero
   8a4d0:	008aa680 	call	8aa68 <__udivsi3>
   8a4d4:	1021883a 	mov	r16,r2
   8a4d8:	00bfffd4 	movui	r2,65535
   8a4dc:	1400542e 	bgeu	r2,r16,8a630 <__umoddi3+0x300>
   8a4e0:	00804034 	movhi	r2,256
   8a4e4:	10bfffc4 	addi	r2,r2,-1
   8a4e8:	14010736 	bltu	r2,r16,8a908 <__umoddi3+0x5d8>
   8a4ec:	00800404 	movi	r2,16
   8a4f0:	1007883a 	mov	r3,r2
   8a4f4:	8084d83a 	srl	r2,r16,r2
   8a4f8:	01000274 	movhi	r4,9
   8a4fc:	213f6d04 	addi	r4,r4,-588
   8a500:	05400804 	movi	r21,32
   8a504:	2085883a 	add	r2,r4,r2
   8a508:	10800003 	ldbu	r2,0(r2)
   8a50c:	10c7883a 	add	r3,r2,r3
   8a510:	a8ebc83a 	sub	r21,r21,r3
   8a514:	a800b91e 	bne	r21,zero,8a7fc <__umoddi3+0x4cc>
   8a518:	8028d43a 	srli	r20,r16,16
   8a51c:	8c23c83a 	sub	r17,r17,r16
   8a520:	85bfffcc 	andi	r22,r16,65535
   8a524:	0025883a 	mov	r18,zero
   8a528:	8809883a 	mov	r4,r17
   8a52c:	a00b883a 	mov	r5,r20
   8a530:	008aa700 	call	8aa70 <__umodsi3>
   8a534:	8809883a 	mov	r4,r17
   8a538:	a00b883a 	mov	r5,r20
   8a53c:	102b883a 	mov	r21,r2
   8a540:	008aa680 	call	8aa68 <__udivsi3>
   8a544:	1009883a 	mov	r4,r2
   8a548:	b00b883a 	mov	r5,r22
   8a54c:	008aa780 	call	8aa78 <__mulsi3>
   8a550:	1009883a 	mov	r4,r2
   8a554:	a806943a 	slli	r3,r21,16
   8a558:	9804d43a 	srli	r2,r19,16
   8a55c:	1886b03a 	or	r3,r3,r2
   8a560:	1900032e 	bgeu	r3,r4,8a570 <__umoddi3+0x240>
   8a564:	1c07883a 	add	r3,r3,r16
   8a568:	1c000136 	bltu	r3,r16,8a570 <__umoddi3+0x240>
   8a56c:	1900f436 	bltu	r3,r4,8a940 <__umoddi3+0x610>
   8a570:	1923c83a 	sub	r17,r3,r4
   8a574:	8809883a 	mov	r4,r17
   8a578:	a00b883a 	mov	r5,r20
   8a57c:	008aa700 	call	8aa70 <__umodsi3>
   8a580:	102b883a 	mov	r21,r2
   8a584:	8809883a 	mov	r4,r17
   8a588:	a00b883a 	mov	r5,r20
   8a58c:	a82a943a 	slli	r21,r21,16
   8a590:	008aa680 	call	8aa68 <__udivsi3>
   8a594:	1009883a 	mov	r4,r2
   8a598:	b00b883a 	mov	r5,r22
   8a59c:	9cffffcc 	andi	r19,r19,65535
   8a5a0:	008aa780 	call	8aa78 <__mulsi3>
   8a5a4:	ace6b03a 	or	r19,r21,r19
   8a5a8:	9880042e 	bgeu	r19,r2,8a5bc <__umoddi3+0x28c>
   8a5ac:	9c27883a 	add	r19,r19,r16
   8a5b0:	9c000236 	bltu	r19,r16,8a5bc <__umoddi3+0x28c>
   8a5b4:	9880012e 	bgeu	r19,r2,8a5bc <__umoddi3+0x28c>
   8a5b8:	9c27883a 	add	r19,r19,r16
   8a5bc:	9885c83a 	sub	r2,r19,r2
   8a5c0:	1484d83a 	srl	r2,r2,r18
   8a5c4:	0007883a 	mov	r3,zero
   8a5c8:	00000206 	br	8a5d4 <__umoddi3+0x2a4>
   8a5cc:	2005883a 	mov	r2,r4
   8a5d0:	2807883a 	mov	r3,r5
   8a5d4:	dfc00c17 	ldw	ra,48(sp)
   8a5d8:	df000b17 	ldw	fp,44(sp)
   8a5dc:	ddc00a17 	ldw	r23,40(sp)
   8a5e0:	dd800917 	ldw	r22,36(sp)
   8a5e4:	dd400817 	ldw	r21,32(sp)
   8a5e8:	dd000717 	ldw	r20,28(sp)
   8a5ec:	dcc00617 	ldw	r19,24(sp)
   8a5f0:	dc800517 	ldw	r18,20(sp)
   8a5f4:	dc400417 	ldw	r17,16(sp)
   8a5f8:	dc000317 	ldw	r16,12(sp)
   8a5fc:	dec00d04 	addi	sp,sp,52
   8a600:	f800283a 	ret
   8a604:	00803fc4 	movi	r2,255
   8a608:	11c0b336 	bltu	r2,r7,8a8d8 <__umoddi3+0x5a8>
   8a60c:	0007883a 	mov	r3,zero
   8a610:	0027883a 	mov	r19,zero
   8a614:	003f9a06 	br	8a480 <__umoddi3+0x150>
   8a618:	00804034 	movhi	r2,256
   8a61c:	10bfffc4 	addi	r2,r2,-1
   8a620:	1180b336 	bltu	r2,r6,8a8f0 <__umoddi3+0x5c0>
   8a624:	00800404 	movi	r2,16
   8a628:	1009883a 	mov	r4,r2
   8a62c:	003f5806 	br	8a390 <__umoddi3+0x60>
   8a630:	00803fc4 	movi	r2,255
   8a634:	1400b136 	bltu	r2,r16,8a8fc <__umoddi3+0x5cc>
   8a638:	0005883a 	mov	r2,zero
   8a63c:	0007883a 	mov	r3,zero
   8a640:	003fac06 	br	8a4f4 <__umoddi3+0x1c4>
   8a644:	34c4d83a 	srl	r2,r6,r19
   8a648:	3c0e983a 	sll	r7,r7,r16
   8a64c:	8cf8d83a 	srl	fp,r17,r19
   8a650:	8c22983a 	sll	r17,r17,r16
   8a654:	38a8b03a 	or	r20,r7,r2
   8a658:	a02ad43a 	srli	r21,r20,16
   8a65c:	94c4d83a 	srl	r2,r18,r19
   8a660:	e009883a 	mov	r4,fp
   8a664:	a80b883a 	mov	r5,r21
   8a668:	342c983a 	sll	r22,r6,r16
   8a66c:	88a2b03a 	or	r17,r17,r2
   8a670:	008aa700 	call	8aa70 <__umodsi3>
   8a674:	e009883a 	mov	r4,fp
   8a678:	a80b883a 	mov	r5,r21
   8a67c:	a5ffffcc 	andi	r23,r20,65535
   8a680:	d8800215 	stw	r2,8(sp)
   8a684:	008aa680 	call	8aa68 <__udivsi3>
   8a688:	1009883a 	mov	r4,r2
   8a68c:	b80b883a 	mov	r5,r23
   8a690:	1039883a 	mov	fp,r2
   8a694:	008aa780 	call	8aa78 <__mulsi3>
   8a698:	d8c00217 	ldw	r3,8(sp)
   8a69c:	1009883a 	mov	r4,r2
   8a6a0:	8804d43a 	srli	r2,r17,16
   8a6a4:	1806943a 	slli	r3,r3,16
   8a6a8:	9424983a 	sll	r18,r18,r16
   8a6ac:	1886b03a 	or	r3,r3,r2
   8a6b0:	1900042e 	bgeu	r3,r4,8a6c4 <__umoddi3+0x394>
   8a6b4:	1d07883a 	add	r3,r3,r20
   8a6b8:	e0bfffc4 	addi	r2,fp,-1
   8a6bc:	1d009c2e 	bgeu	r3,r20,8a930 <__umoddi3+0x600>
   8a6c0:	1039883a 	mov	fp,r2
   8a6c4:	1907c83a 	sub	r3,r3,r4
   8a6c8:	1809883a 	mov	r4,r3
   8a6cc:	a80b883a 	mov	r5,r21
   8a6d0:	d8c00215 	stw	r3,8(sp)
   8a6d4:	008aa700 	call	8aa70 <__umodsi3>
   8a6d8:	d8c00217 	ldw	r3,8(sp)
   8a6dc:	a80b883a 	mov	r5,r21
   8a6e0:	d8800015 	stw	r2,0(sp)
   8a6e4:	1809883a 	mov	r4,r3
   8a6e8:	008aa680 	call	8aa68 <__udivsi3>
   8a6ec:	1009883a 	mov	r4,r2
   8a6f0:	b80b883a 	mov	r5,r23
   8a6f4:	102b883a 	mov	r21,r2
   8a6f8:	008aa780 	call	8aa78 <__mulsi3>
   8a6fc:	d9c00017 	ldw	r7,0(sp)
   8a700:	8c7fffcc 	andi	r17,r17,65535
   8a704:	380e943a 	slli	r7,r7,16
   8a708:	3c4eb03a 	or	r7,r7,r17
   8a70c:	3880042e 	bgeu	r7,r2,8a720 <__umoddi3+0x3f0>
   8a710:	3d0f883a 	add	r7,r7,r20
   8a714:	a8ffffc4 	addi	r3,r21,-1
   8a718:	3d00812e 	bgeu	r7,r20,8a920 <__umoddi3+0x5f0>
   8a71c:	182b883a 	mov	r21,r3
   8a720:	e038943a 	slli	fp,fp,16
   8a724:	b010d43a 	srli	r8,r22,16
   8a728:	b1bfffcc 	andi	r6,r22,65535
   8a72c:	af2ab03a 	or	r21,r21,fp
   8a730:	a82ed43a 	srli	r23,r21,16
   8a734:	ad7fffcc 	andi	r21,r21,65535
   8a738:	300b883a 	mov	r5,r6
   8a73c:	a809883a 	mov	r4,r21
   8a740:	38a3c83a 	sub	r17,r7,r2
   8a744:	d9800115 	stw	r6,4(sp)
   8a748:	da000015 	stw	r8,0(sp)
   8a74c:	008aa780 	call	8aa78 <__mulsi3>
   8a750:	da000017 	ldw	r8,0(sp)
   8a754:	a809883a 	mov	r4,r21
   8a758:	1039883a 	mov	fp,r2
   8a75c:	400b883a 	mov	r5,r8
   8a760:	da000215 	stw	r8,8(sp)
   8a764:	008aa780 	call	8aa78 <__mulsi3>
   8a768:	d9800117 	ldw	r6,4(sp)
   8a76c:	b809883a 	mov	r4,r23
   8a770:	d8800015 	stw	r2,0(sp)
   8a774:	300b883a 	mov	r5,r6
   8a778:	008aa780 	call	8aa78 <__mulsi3>
   8a77c:	d8c00217 	ldw	r3,8(sp)
   8a780:	b809883a 	mov	r4,r23
   8a784:	102b883a 	mov	r21,r2
   8a788:	180b883a 	mov	r5,r3
   8a78c:	008aa780 	call	8aa78 <__mulsi3>
   8a790:	d9c00017 	ldw	r7,0(sp)
   8a794:	1007883a 	mov	r3,r2
   8a798:	e004d43a 	srli	r2,fp,16
   8a79c:	a9c9883a 	add	r4,r21,r7
   8a7a0:	2089883a 	add	r4,r4,r2
   8a7a4:	2540022e 	bgeu	r4,r21,8a7b0 <__umoddi3+0x480>
   8a7a8:	00800074 	movhi	r2,1
   8a7ac:	1887883a 	add	r3,r3,r2
   8a7b0:	2004d43a 	srli	r2,r4,16
   8a7b4:	2008943a 	slli	r4,r4,16
   8a7b8:	e73fffcc 	andi	fp,fp,65535
   8a7bc:	1887883a 	add	r3,r3,r2
   8a7c0:	2709883a 	add	r4,r4,fp
   8a7c4:	88c03e36 	bltu	r17,r3,8a8c0 <__umoddi3+0x590>
   8a7c8:	88c06226 	beq	r17,r3,8a954 <__umoddi3+0x624>
   8a7cc:	88c7c83a 	sub	r3,r17,r3
   8a7d0:	202d883a 	mov	r22,r4
   8a7d4:	95adc83a 	sub	r22,r18,r22
   8a7d8:	95a5803a 	cmpltu	r18,r18,r22
   8a7dc:	1c87c83a 	sub	r3,r3,r18
   8a7e0:	1cc4983a 	sll	r2,r3,r19
   8a7e4:	b42cd83a 	srl	r22,r22,r16
   8a7e8:	1c06d83a 	srl	r3,r3,r16
   8a7ec:	1584b03a 	or	r2,r2,r22
   8a7f0:	003f7806 	br	8a5d4 <__umoddi3+0x2a4>
   8a7f4:	0025883a 	mov	r18,zero
   8a7f8:	003ef406 	br	8a3cc <__umoddi3+0x9c>
   8a7fc:	8560983a 	sll	r16,r16,r21
   8a800:	88e6d83a 	srl	r19,r17,r3
   8a804:	90c6d83a 	srl	r3,r18,r3
   8a808:	8028d43a 	srli	r20,r16,16
   8a80c:	8d62983a 	sll	r17,r17,r21
   8a810:	9809883a 	mov	r4,r19
   8a814:	a00b883a 	mov	r5,r20
   8a818:	88eeb03a 	or	r23,r17,r3
   8a81c:	008aa700 	call	8aa70 <__umodsi3>
   8a820:	9809883a 	mov	r4,r19
   8a824:	a00b883a 	mov	r5,r20
   8a828:	1023883a 	mov	r17,r2
   8a82c:	85bfffcc 	andi	r22,r16,65535
   8a830:	008aa680 	call	8aa68 <__udivsi3>
   8a834:	1009883a 	mov	r4,r2
   8a838:	b00b883a 	mov	r5,r22
   8a83c:	008aa780 	call	8aa78 <__mulsi3>
   8a840:	1007883a 	mov	r3,r2
   8a844:	8808943a 	slli	r4,r17,16
   8a848:	b804d43a 	srli	r2,r23,16
   8a84c:	9566983a 	sll	r19,r18,r21
   8a850:	2088b03a 	or	r4,r4,r2
   8a854:	20c0042e 	bgeu	r4,r3,8a868 <__umoddi3+0x538>
   8a858:	2409883a 	add	r4,r4,r16
   8a85c:	24000236 	bltu	r4,r16,8a868 <__umoddi3+0x538>
   8a860:	20c0012e 	bgeu	r4,r3,8a868 <__umoddi3+0x538>
   8a864:	2409883a 	add	r4,r4,r16
   8a868:	20e5c83a 	sub	r18,r4,r3
   8a86c:	9009883a 	mov	r4,r18
   8a870:	a00b883a 	mov	r5,r20
   8a874:	008aa700 	call	8aa70 <__umodsi3>
   8a878:	1023883a 	mov	r17,r2
   8a87c:	9009883a 	mov	r4,r18
   8a880:	a00b883a 	mov	r5,r20
   8a884:	8822943a 	slli	r17,r17,16
   8a888:	008aa680 	call	8aa68 <__udivsi3>
   8a88c:	1009883a 	mov	r4,r2
   8a890:	b00b883a 	mov	r5,r22
   8a894:	bdffffcc 	andi	r23,r23,65535
   8a898:	008aa780 	call	8aa78 <__mulsi3>
   8a89c:	8de2b03a 	or	r17,r17,r23
   8a8a0:	8880042e 	bgeu	r17,r2,8a8b4 <__umoddi3+0x584>
   8a8a4:	8c23883a 	add	r17,r17,r16
   8a8a8:	8c000236 	bltu	r17,r16,8a8b4 <__umoddi3+0x584>
   8a8ac:	8880012e 	bgeu	r17,r2,8a8b4 <__umoddi3+0x584>
   8a8b0:	8c23883a 	add	r17,r17,r16
   8a8b4:	88a3c83a 	sub	r17,r17,r2
   8a8b8:	a825883a 	mov	r18,r21
   8a8bc:	003f1a06 	br	8a528 <__umoddi3+0x1f8>
   8a8c0:	25adc83a 	sub	r22,r4,r22
   8a8c4:	1d07c83a 	sub	r3,r3,r20
   8a8c8:	2589803a 	cmpltu	r4,r4,r22
   8a8cc:	1907c83a 	sub	r3,r3,r4
   8a8d0:	88c7c83a 	sub	r3,r17,r3
   8a8d4:	003fbf06 	br	8a7d4 <__umoddi3+0x4a4>
   8a8d8:	00c00204 	movi	r3,8
   8a8dc:	1827883a 	mov	r19,r3
   8a8e0:	003ee706 	br	8a480 <__umoddi3+0x150>
   8a8e4:	00c00604 	movi	r3,24
   8a8e8:	1827883a 	mov	r19,r3
   8a8ec:	003ee406 	br	8a480 <__umoddi3+0x150>
   8a8f0:	00800604 	movi	r2,24
   8a8f4:	1009883a 	mov	r4,r2
   8a8f8:	003ea506 	br	8a390 <__umoddi3+0x60>
   8a8fc:	00800204 	movi	r2,8
   8a900:	1007883a 	mov	r3,r2
   8a904:	003efb06 	br	8a4f4 <__umoddi3+0x1c4>
   8a908:	00800604 	movi	r2,24
   8a90c:	1007883a 	mov	r3,r2
   8a910:	003ef806 	br	8a4f4 <__umoddi3+0x1c4>
   8a914:	00800204 	movi	r2,8
   8a918:	1009883a 	mov	r4,r2
   8a91c:	003e9c06 	br	8a390 <__umoddi3+0x60>
   8a920:	38bf7e2e 	bgeu	r7,r2,8a71c <__umoddi3+0x3ec>
   8a924:	ad7fff84 	addi	r21,r21,-2
   8a928:	3d0f883a 	add	r7,r7,r20
   8a92c:	003f7c06 	br	8a720 <__umoddi3+0x3f0>
   8a930:	193f632e 	bgeu	r3,r4,8a6c0 <__umoddi3+0x390>
   8a934:	e73fff84 	addi	fp,fp,-2
   8a938:	1d07883a 	add	r3,r3,r20
   8a93c:	003f6106 	br	8a6c4 <__umoddi3+0x394>
   8a940:	1c07883a 	add	r3,r3,r16
   8a944:	003f0a06 	br	8a570 <__umoddi3+0x240>
   8a948:	9005883a 	mov	r2,r18
   8a94c:	a007883a 	mov	r3,r20
   8a950:	003f2006 	br	8a5d4 <__umoddi3+0x2a4>
   8a954:	913fda36 	bltu	r18,r4,8a8c0 <__umoddi3+0x590>
   8a958:	202d883a 	mov	r22,r4
   8a95c:	0007883a 	mov	r3,zero
   8a960:	003f9c06 	br	8a7d4 <__umoddi3+0x4a4>

0008a964 <udivmodsi4>:
   8a964:	2900182e 	bgeu	r5,r4,8a9c8 <udivmodsi4+0x64>
   8a968:	28001716 	blt	r5,zero,8a9c8 <udivmodsi4+0x64>
   8a96c:	00800804 	movi	r2,32
   8a970:	00c00044 	movi	r3,1
   8a974:	00000206 	br	8a980 <udivmodsi4+0x1c>
   8a978:	10001126 	beq	r2,zero,8a9c0 <udivmodsi4+0x5c>
   8a97c:	28000516 	blt	r5,zero,8a994 <udivmodsi4+0x30>
   8a980:	294b883a 	add	r5,r5,r5
   8a984:	10bfffc4 	addi	r2,r2,-1
   8a988:	18c7883a 	add	r3,r3,r3
   8a98c:	293ffa36 	bltu	r5,r4,8a978 <udivmodsi4+0x14>
   8a990:	18000b26 	beq	r3,zero,8a9c0 <udivmodsi4+0x5c>
   8a994:	0005883a 	mov	r2,zero
   8a998:	21400236 	bltu	r4,r5,8a9a4 <udivmodsi4+0x40>
   8a99c:	2149c83a 	sub	r4,r4,r5
   8a9a0:	10c4b03a 	or	r2,r2,r3
   8a9a4:	1806d07a 	srli	r3,r3,1
   8a9a8:	280ad07a 	srli	r5,r5,1
   8a9ac:	183ffa1e 	bne	r3,zero,8a998 <udivmodsi4+0x34>
   8a9b0:	3000011e 	bne	r6,zero,8a9b8 <udivmodsi4+0x54>
   8a9b4:	f800283a 	ret
   8a9b8:	2005883a 	mov	r2,r4
   8a9bc:	f800283a 	ret
   8a9c0:	0005883a 	mov	r2,zero
   8a9c4:	003ffa06 	br	8a9b0 <udivmodsi4+0x4c>
   8a9c8:	00c00044 	movi	r3,1
   8a9cc:	0005883a 	mov	r2,zero
   8a9d0:	003ff106 	br	8a998 <udivmodsi4+0x34>

0008a9d4 <__divsi3>:
   8a9d4:	deffff04 	addi	sp,sp,-4
   8a9d8:	dfc00015 	stw	ra,0(sp)
   8a9dc:	20000916 	blt	r4,zero,8aa04 <__divsi3+0x30>
   8a9e0:	000f883a 	mov	r7,zero
   8a9e4:	28000a16 	blt	r5,zero,8aa10 <__divsi3+0x3c>
   8a9e8:	000d883a 	mov	r6,zero
   8a9ec:	008a9640 	call	8a964 <udivmodsi4>
   8a9f0:	38000126 	beq	r7,zero,8a9f8 <__divsi3+0x24>
   8a9f4:	0085c83a 	sub	r2,zero,r2
   8a9f8:	dfc00017 	ldw	ra,0(sp)
   8a9fc:	dec00104 	addi	sp,sp,4
   8aa00:	f800283a 	ret
   8aa04:	0109c83a 	sub	r4,zero,r4
   8aa08:	01c00044 	movi	r7,1
   8aa0c:	283ff60e 	bge	r5,zero,8a9e8 <__divsi3+0x14>
   8aa10:	014bc83a 	sub	r5,zero,r5
   8aa14:	39c0005c 	xori	r7,r7,1
   8aa18:	003ff306 	br	8a9e8 <__divsi3+0x14>

0008aa1c <__modsi3>:
   8aa1c:	20000316 	blt	r4,zero,8aa2c <__modsi3+0x10>
   8aa20:	28000c16 	blt	r5,zero,8aa54 <__modsi3+0x38>
   8aa24:	01800044 	movi	r6,1
   8aa28:	008a9641 	jmpi	8a964 <udivmodsi4>
   8aa2c:	deffff04 	addi	sp,sp,-4
   8aa30:	dfc00015 	stw	ra,0(sp)
   8aa34:	0109c83a 	sub	r4,zero,r4
   8aa38:	28000916 	blt	r5,zero,8aa60 <__modsi3+0x44>
   8aa3c:	01800044 	movi	r6,1
   8aa40:	008a9640 	call	8a964 <udivmodsi4>
   8aa44:	0085c83a 	sub	r2,zero,r2
   8aa48:	dfc00017 	ldw	ra,0(sp)
   8aa4c:	dec00104 	addi	sp,sp,4
   8aa50:	f800283a 	ret
   8aa54:	014bc83a 	sub	r5,zero,r5
   8aa58:	01800044 	movi	r6,1
   8aa5c:	008a9641 	jmpi	8a964 <udivmodsi4>
   8aa60:	014bc83a 	sub	r5,zero,r5
   8aa64:	003ff506 	br	8aa3c <__modsi3+0x20>

0008aa68 <__udivsi3>:
   8aa68:	000d883a 	mov	r6,zero
   8aa6c:	008a9641 	jmpi	8a964 <udivmodsi4>

0008aa70 <__umodsi3>:
   8aa70:	01800044 	movi	r6,1
   8aa74:	008a9641 	jmpi	8a964 <udivmodsi4>

0008aa78 <__mulsi3>:
   8aa78:	0005883a 	mov	r2,zero
   8aa7c:	20000726 	beq	r4,zero,8aa9c <__mulsi3+0x24>
   8aa80:	20c0004c 	andi	r3,r4,1
   8aa84:	2008d07a 	srli	r4,r4,1
   8aa88:	18000126 	beq	r3,zero,8aa90 <__mulsi3+0x18>
   8aa8c:	1145883a 	add	r2,r2,r5
   8aa90:	294b883a 	add	r5,r5,r5
   8aa94:	203ffa1e 	bne	r4,zero,8aa80 <__mulsi3+0x8>
   8aa98:	f800283a 	ret
   8aa9c:	f800283a 	ret

0008aaa0 <__adddf3>:
   8aaa0:	00800434 	movhi	r2,16
   8aaa4:	10bfffc4 	addi	r2,r2,-1
   8aaa8:	defffb04 	addi	sp,sp,-20
   8aaac:	2890703a 	and	r8,r5,r2
   8aab0:	2806d7fa 	srli	r3,r5,31
   8aab4:	3884703a 	and	r2,r7,r2
   8aab8:	2014d77a 	srli	r10,r4,29
   8aabc:	3812d53a 	srli	r9,r7,20
   8aac0:	dc400115 	stw	r17,4(sp)
   8aac4:	100490fa 	slli	r2,r2,3
   8aac8:	2822d53a 	srli	r17,r5,20
   8aacc:	380ed7fa 	srli	r7,r7,31
   8aad0:	400a90fa 	slli	r5,r8,3
   8aad4:	3010d77a 	srli	r8,r6,29
   8aad8:	dc800215 	stw	r18,8(sp)
   8aadc:	dc000015 	stw	r16,0(sp)
   8aae0:	dfc00415 	stw	ra,16(sp)
   8aae4:	dcc00315 	stw	r19,12(sp)
   8aae8:	1c803fcc 	andi	r18,r3,255
   8aaec:	202090fa 	slli	r16,r4,3
   8aaf0:	8c41ffcc 	andi	r17,r17,2047
   8aaf4:	2a8ab03a 	or	r5,r5,r10
   8aaf8:	4901ffcc 	andi	r4,r9,2047
   8aafc:	1204b03a 	or	r2,r2,r8
   8ab00:	300c90fa 	slli	r6,r6,3
   8ab04:	91c07126 	beq	r18,r7,8accc <__adddf3+0x22c>
   8ab08:	8907c83a 	sub	r3,r17,r4
   8ab0c:	00c0a00e 	bge	zero,r3,8ad90 <__adddf3+0x2f0>
   8ab10:	2000291e 	bne	r4,zero,8abb8 <__adddf3+0x118>
   8ab14:	1188b03a 	or	r4,r2,r6
   8ab18:	20008b1e 	bne	r4,zero,8ad48 <__adddf3+0x2a8>
   8ab1c:	808001cc 	andi	r2,r16,7
   8ab20:	10005a26 	beq	r2,zero,8ac8c <__adddf3+0x1ec>
   8ab24:	80c003cc 	andi	r3,r16,15
   8ab28:	00800104 	movi	r2,4
   8ab2c:	18805726 	beq	r3,r2,8ac8c <__adddf3+0x1ec>
   8ab30:	81000104 	addi	r4,r16,4
   8ab34:	2421803a 	cmpltu	r16,r4,r16
   8ab38:	2c0b883a 	add	r5,r5,r16
   8ab3c:	2880202c 	andhi	r2,r5,128
   8ab40:	9007883a 	mov	r3,r18
   8ab44:	2021883a 	mov	r16,r4
   8ab48:	10005326 	beq	r2,zero,8ac98 <__adddf3+0x1f8>
   8ab4c:	8c400044 	addi	r17,r17,1
   8ab50:	0081ffc4 	movi	r2,2047
   8ab54:	8880ae26 	beq	r17,r2,8ae10 <__adddf3+0x370>
   8ab58:	00bfe034 	movhi	r2,65408
   8ab5c:	10bfffc4 	addi	r2,r2,-1
   8ab60:	288a703a 	and	r5,r5,r2
   8ab64:	2804977a 	slli	r2,r5,29
   8ab68:	280a927a 	slli	r5,r5,9
   8ab6c:	8020d0fa 	srli	r16,r16,3
   8ab70:	280ad33a 	srli	r5,r5,12
   8ab74:	1404b03a 	or	r2,r2,r16
   8ab78:	8c41ffcc 	andi	r17,r17,2047
   8ab7c:	8822953a 	slli	r17,r17,20
   8ab80:	18c03fcc 	andi	r3,r3,255
   8ab84:	180897fa 	slli	r4,r3,31
   8ab88:	00c00434 	movhi	r3,16
   8ab8c:	18ffffc4 	addi	r3,r3,-1
   8ab90:	28c6703a 	and	r3,r5,r3
   8ab94:	1c46b03a 	or	r3,r3,r17
   8ab98:	1906b03a 	or	r3,r3,r4
   8ab9c:	dfc00417 	ldw	ra,16(sp)
   8aba0:	dcc00317 	ldw	r19,12(sp)
   8aba4:	dc800217 	ldw	r18,8(sp)
   8aba8:	dc400117 	ldw	r17,4(sp)
   8abac:	dc000017 	ldw	r16,0(sp)
   8abb0:	dec00504 	addi	sp,sp,20
   8abb4:	f800283a 	ret
   8abb8:	0101ffc4 	movi	r4,2047
   8abbc:	893fd726 	beq	r17,r4,8ab1c <__adddf3+0x7c>
   8abc0:	10802034 	orhi	r2,r2,128
   8abc4:	01000e04 	movi	r4,56
   8abc8:	20c09416 	blt	r4,r3,8ae1c <__adddf3+0x37c>
   8abcc:	010007c4 	movi	r4,31
   8abd0:	20c0b716 	blt	r4,r3,8aeb0 <__adddf3+0x410>
   8abd4:	01000804 	movi	r4,32
   8abd8:	20c9c83a 	sub	r4,r4,r3
   8abdc:	30ced83a 	srl	r7,r6,r3
   8abe0:	1110983a 	sll	r8,r2,r4
   8abe4:	3108983a 	sll	r4,r6,r4
   8abe8:	10c6d83a 	srl	r3,r2,r3
   8abec:	41c4b03a 	or	r2,r8,r7
   8abf0:	2008c03a 	cmpne	r4,r4,zero
   8abf4:	110cb03a 	or	r6,r2,r4
   8abf8:	818dc83a 	sub	r6,r16,r6
   8abfc:	81a1803a 	cmpltu	r16,r16,r6
   8ac00:	28cbc83a 	sub	r5,r5,r3
   8ac04:	2c0bc83a 	sub	r5,r5,r16
   8ac08:	3021883a 	mov	r16,r6
   8ac0c:	2880202c 	andhi	r2,r5,128
   8ac10:	103fc226 	beq	r2,zero,8ab1c <__adddf3+0x7c>
   8ac14:	04c02034 	movhi	r19,128
   8ac18:	9cffffc4 	addi	r19,r19,-1
   8ac1c:	2ce6703a 	and	r19,r5,r19
   8ac20:	98006c26 	beq	r19,zero,8add4 <__adddf3+0x334>
   8ac24:	9809883a 	mov	r4,r19
   8ac28:	008d1780 	call	8d178 <__clzsi2>
   8ac2c:	10fffe04 	addi	r3,r2,-8
   8ac30:	010007c4 	movi	r4,31
   8ac34:	20c06d16 	blt	r4,r3,8adec <__adddf3+0x34c>
   8ac38:	01000a04 	movi	r4,40
   8ac3c:	2085c83a 	sub	r2,r4,r2
   8ac40:	8084d83a 	srl	r2,r16,r2
   8ac44:	98e6983a 	sll	r19,r19,r3
   8ac48:	80e0983a 	sll	r16,r16,r3
   8ac4c:	14c4b03a 	or	r2,r2,r19
   8ac50:	1c406a16 	blt	r3,r17,8adfc <__adddf3+0x35c>
   8ac54:	1c63c83a 	sub	r17,r3,r17
   8ac58:	89400044 	addi	r5,r17,1
   8ac5c:	00c007c4 	movi	r3,31
   8ac60:	19408616 	blt	r3,r5,8ae7c <__adddf3+0x3dc>
   8ac64:	1c47c83a 	sub	r3,r3,r17
   8ac68:	8148d83a 	srl	r4,r16,r5
   8ac6c:	80e0983a 	sll	r16,r16,r3
   8ac70:	10c6983a 	sll	r3,r2,r3
   8ac74:	114ad83a 	srl	r5,r2,r5
   8ac78:	8004c03a 	cmpne	r2,r16,zero
   8ac7c:	20e0b03a 	or	r16,r4,r3
   8ac80:	80a0b03a 	or	r16,r16,r2
   8ac84:	0023883a 	mov	r17,zero
   8ac88:	003fa406 	br	8ab1c <__adddf3+0x7c>
   8ac8c:	2880202c 	andhi	r2,r5,128
   8ac90:	9007883a 	mov	r3,r18
   8ac94:	103fad1e 	bne	r2,zero,8ab4c <__adddf3+0xac>
   8ac98:	2804977a 	slli	r2,r5,29
   8ac9c:	8020d0fa 	srli	r16,r16,3
   8aca0:	0101ffc4 	movi	r4,2047
   8aca4:	280ad0fa 	srli	r5,r5,3
   8aca8:	1404b03a 	or	r2,r2,r16
   8acac:	8900031e 	bne	r17,r4,8acbc <__adddf3+0x21c>
   8acb0:	1148b03a 	or	r4,r2,r5
   8acb4:	20005626 	beq	r4,zero,8ae10 <__adddf3+0x370>
   8acb8:	29400234 	orhi	r5,r5,8
   8acbc:	01000434 	movhi	r4,16
   8acc0:	213fffc4 	addi	r4,r4,-1
   8acc4:	290a703a 	and	r5,r5,r4
   8acc8:	003fab06 	br	8ab78 <__adddf3+0xd8>
   8accc:	890fc83a 	sub	r7,r17,r4
   8acd0:	01c0560e 	bge	zero,r7,8ae2c <__adddf3+0x38c>
   8acd4:	20002426 	beq	r4,zero,8ad68 <__adddf3+0x2c8>
   8acd8:	0101ffc4 	movi	r4,2047
   8acdc:	893f8f26 	beq	r17,r4,8ab1c <__adddf3+0x7c>
   8ace0:	10802034 	orhi	r2,r2,128
   8ace4:	01000e04 	movi	r4,56
   8ace8:	21c09d0e 	bge	r4,r7,8af60 <__adddf3+0x4c0>
   8acec:	118cb03a 	or	r6,r2,r6
   8acf0:	300cc03a 	cmpne	r6,r6,zero
   8acf4:	000f883a 	mov	r7,zero
   8acf8:	340d883a 	add	r6,r6,r16
   8acfc:	3421803a 	cmpltu	r16,r6,r16
   8ad00:	394b883a 	add	r5,r7,r5
   8ad04:	2c0b883a 	add	r5,r5,r16
   8ad08:	3021883a 	mov	r16,r6
   8ad0c:	2880202c 	andhi	r2,r5,128
   8ad10:	103f8226 	beq	r2,zero,8ab1c <__adddf3+0x7c>
   8ad14:	8c400044 	addi	r17,r17,1
   8ad18:	0081ffc4 	movi	r2,2047
   8ad1c:	8880cb26 	beq	r17,r2,8b04c <__adddf3+0x5ac>
   8ad20:	00bfe034 	movhi	r2,65408
   8ad24:	10bfffc4 	addi	r2,r2,-1
   8ad28:	288a703a 	and	r5,r5,r2
   8ad2c:	8006d07a 	srli	r3,r16,1
   8ad30:	280497fa 	slli	r2,r5,31
   8ad34:	8400004c 	andi	r16,r16,1
   8ad38:	80e0b03a 	or	r16,r16,r3
   8ad3c:	80a0b03a 	or	r16,r16,r2
   8ad40:	280ad07a 	srli	r5,r5,1
   8ad44:	003f7506 	br	8ab1c <__adddf3+0x7c>
   8ad48:	18ffffc4 	addi	r3,r3,-1
   8ad4c:	1800481e 	bne	r3,zero,8ae70 <__adddf3+0x3d0>
   8ad50:	818dc83a 	sub	r6,r16,r6
   8ad54:	81a1803a 	cmpltu	r16,r16,r6
   8ad58:	288bc83a 	sub	r5,r5,r2
   8ad5c:	2c0bc83a 	sub	r5,r5,r16
   8ad60:	3021883a 	mov	r16,r6
   8ad64:	003fa906 	br	8ac0c <__adddf3+0x16c>
   8ad68:	1188b03a 	or	r4,r2,r6
   8ad6c:	203f6b26 	beq	r4,zero,8ab1c <__adddf3+0x7c>
   8ad70:	39ffffc4 	addi	r7,r7,-1
   8ad74:	3800931e 	bne	r7,zero,8afc4 <__adddf3+0x524>
   8ad78:	340d883a 	add	r6,r6,r16
   8ad7c:	3421803a 	cmpltu	r16,r6,r16
   8ad80:	114b883a 	add	r5,r2,r5
   8ad84:	2c0b883a 	add	r5,r5,r16
   8ad88:	3021883a 	mov	r16,r6
   8ad8c:	003fdf06 	br	8ad0c <__adddf3+0x26c>
   8ad90:	1800531e 	bne	r3,zero,8aee0 <__adddf3+0x440>
   8ad94:	88c00044 	addi	r3,r17,1
   8ad98:	18c1ffcc 	andi	r3,r3,2047
   8ad9c:	01000044 	movi	r4,1
   8ada0:	20c0a00e 	bge	r4,r3,8b024 <__adddf3+0x584>
   8ada4:	8187c83a 	sub	r3,r16,r6
   8ada8:	80c9803a 	cmpltu	r4,r16,r3
   8adac:	28a7c83a 	sub	r19,r5,r2
   8adb0:	9927c83a 	sub	r19,r19,r4
   8adb4:	9900202c 	andhi	r4,r19,128
   8adb8:	20006226 	beq	r4,zero,8af44 <__adddf3+0x4a4>
   8adbc:	3421c83a 	sub	r16,r6,r16
   8adc0:	1145c83a 	sub	r2,r2,r5
   8adc4:	340d803a 	cmpltu	r6,r6,r16
   8adc8:	11a7c83a 	sub	r19,r2,r6
   8adcc:	3825883a 	mov	r18,r7
   8add0:	983f941e 	bne	r19,zero,8ac24 <__adddf3+0x184>
   8add4:	8009883a 	mov	r4,r16
   8add8:	008d1780 	call	8d178 <__clzsi2>
   8addc:	10800804 	addi	r2,r2,32
   8ade0:	10fffe04 	addi	r3,r2,-8
   8ade4:	010007c4 	movi	r4,31
   8ade8:	20ff930e 	bge	r4,r3,8ac38 <__adddf3+0x198>
   8adec:	10bff604 	addi	r2,r2,-40
   8adf0:	8084983a 	sll	r2,r16,r2
   8adf4:	0021883a 	mov	r16,zero
   8adf8:	1c7f960e 	bge	r3,r17,8ac54 <__adddf3+0x1b4>
   8adfc:	017fe034 	movhi	r5,65408
   8ae00:	297fffc4 	addi	r5,r5,-1
   8ae04:	88e3c83a 	sub	r17,r17,r3
   8ae08:	114a703a 	and	r5,r2,r5
   8ae0c:	003f4306 	br	8ab1c <__adddf3+0x7c>
   8ae10:	000b883a 	mov	r5,zero
   8ae14:	0005883a 	mov	r2,zero
   8ae18:	003f5706 	br	8ab78 <__adddf3+0xd8>
   8ae1c:	118cb03a 	or	r6,r2,r6
   8ae20:	300cc03a 	cmpne	r6,r6,zero
   8ae24:	0007883a 	mov	r3,zero
   8ae28:	003f7306 	br	8abf8 <__adddf3+0x158>
   8ae2c:	3800961e 	bne	r7,zero,8b088 <__adddf3+0x5e8>
   8ae30:	89000044 	addi	r4,r17,1
   8ae34:	2201ffcc 	andi	r8,r4,2047
   8ae38:	01c00044 	movi	r7,1
   8ae3c:	3a00680e 	bge	r7,r8,8afe0 <__adddf3+0x540>
   8ae40:	01c1ffc4 	movi	r7,2047
   8ae44:	21c0a726 	beq	r4,r7,8b0e4 <__adddf3+0x644>
   8ae48:	340d883a 	add	r6,r6,r16
   8ae4c:	3421803a 	cmpltu	r16,r6,r16
   8ae50:	114b883a 	add	r5,r2,r5
   8ae54:	2c0b883a 	add	r5,r5,r16
   8ae58:	282097fa 	slli	r16,r5,31
   8ae5c:	300cd07a 	srli	r6,r6,1
   8ae60:	280ad07a 	srli	r5,r5,1
   8ae64:	2023883a 	mov	r17,r4
   8ae68:	81a0b03a 	or	r16,r16,r6
   8ae6c:	003f2b06 	br	8ab1c <__adddf3+0x7c>
   8ae70:	0101ffc4 	movi	r4,2047
   8ae74:	893f531e 	bne	r17,r4,8abc4 <__adddf3+0x124>
   8ae78:	003f2806 	br	8ab1c <__adddf3+0x7c>
   8ae7c:	893ff844 	addi	r4,r17,-31
   8ae80:	00c00804 	movi	r3,32
   8ae84:	1108d83a 	srl	r4,r2,r4
   8ae88:	28c05126 	beq	r5,r3,8afd0 <__adddf3+0x530>
   8ae8c:	00c00fc4 	movi	r3,63
   8ae90:	1c63c83a 	sub	r17,r3,r17
   8ae94:	1444983a 	sll	r2,r2,r17
   8ae98:	1420b03a 	or	r16,r2,r16
   8ae9c:	8020c03a 	cmpne	r16,r16,zero
   8aea0:	8120b03a 	or	r16,r16,r4
   8aea4:	000b883a 	mov	r5,zero
   8aea8:	0023883a 	mov	r17,zero
   8aeac:	003f1b06 	br	8ab1c <__adddf3+0x7c>
   8aeb0:	193ff804 	addi	r4,r3,-32
   8aeb4:	01c00804 	movi	r7,32
   8aeb8:	1108d83a 	srl	r4,r2,r4
   8aebc:	19c04626 	beq	r3,r7,8afd8 <__adddf3+0x538>
   8aec0:	01c01004 	movi	r7,64
   8aec4:	38c7c83a 	sub	r3,r7,r3
   8aec8:	10c4983a 	sll	r2,r2,r3
   8aecc:	118cb03a 	or	r6,r2,r6
   8aed0:	300cc03a 	cmpne	r6,r6,zero
   8aed4:	310cb03a 	or	r6,r6,r4
   8aed8:	0007883a 	mov	r3,zero
   8aedc:	003f4606 	br	8abf8 <__adddf3+0x158>
   8aee0:	88002b26 	beq	r17,zero,8af90 <__adddf3+0x4f0>
   8aee4:	0201ffc4 	movi	r8,2047
   8aee8:	22002f26 	beq	r4,r8,8afa8 <__adddf3+0x508>
   8aeec:	00c7c83a 	sub	r3,zero,r3
   8aef0:	29402034 	orhi	r5,r5,128
   8aef4:	02000e04 	movi	r8,56
   8aef8:	40c07616 	blt	r8,r3,8b0d4 <__adddf3+0x634>
   8aefc:	020007c4 	movi	r8,31
   8af00:	40c0d216 	blt	r8,r3,8b24c <__adddf3+0x7ac>
   8af04:	02000804 	movi	r8,32
   8af08:	40d1c83a 	sub	r8,r8,r3
   8af0c:	2a14983a 	sll	r10,r5,r8
   8af10:	80d2d83a 	srl	r9,r16,r3
   8af14:	8210983a 	sll	r8,r16,r8
   8af18:	28cad83a 	srl	r5,r5,r3
   8af1c:	5252b03a 	or	r9,r10,r9
   8af20:	4006c03a 	cmpne	r3,r8,zero
   8af24:	48e0b03a 	or	r16,r9,r3
   8af28:	3421c83a 	sub	r16,r6,r16
   8af2c:	114bc83a 	sub	r5,r2,r5
   8af30:	340d803a 	cmpltu	r6,r6,r16
   8af34:	298bc83a 	sub	r5,r5,r6
   8af38:	2023883a 	mov	r17,r4
   8af3c:	3825883a 	mov	r18,r7
   8af40:	003f3206 	br	8ac0c <__adddf3+0x16c>
   8af44:	98c4b03a 	or	r2,r19,r3
   8af48:	10001c1e 	bne	r2,zero,8afbc <__adddf3+0x51c>
   8af4c:	0007883a 	mov	r3,zero
   8af50:	000b883a 	mov	r5,zero
   8af54:	0021883a 	mov	r16,zero
   8af58:	0023883a 	mov	r17,zero
   8af5c:	003f4e06 	br	8ac98 <__adddf3+0x1f8>
   8af60:	010007c4 	movi	r4,31
   8af64:	21c03c16 	blt	r4,r7,8b058 <__adddf3+0x5b8>
   8af68:	01000804 	movi	r4,32
   8af6c:	21c9c83a 	sub	r4,r4,r7
   8af70:	31d0d83a 	srl	r8,r6,r7
   8af74:	1112983a 	sll	r9,r2,r4
   8af78:	3108983a 	sll	r4,r6,r4
   8af7c:	11ced83a 	srl	r7,r2,r7
   8af80:	4a04b03a 	or	r2,r9,r8
   8af84:	2008c03a 	cmpne	r4,r4,zero
   8af88:	110cb03a 	or	r6,r2,r4
   8af8c:	003f5a06 	br	8acf8 <__adddf3+0x258>
   8af90:	2c10b03a 	or	r8,r5,r16
   8af94:	40000426 	beq	r8,zero,8afa8 <__adddf3+0x508>
   8af98:	00c6303a 	nor	r3,zero,r3
   8af9c:	183fe226 	beq	r3,zero,8af28 <__adddf3+0x488>
   8afa0:	0201ffc4 	movi	r8,2047
   8afa4:	223fd31e 	bne	r4,r8,8aef4 <__adddf3+0x454>
   8afa8:	100b883a 	mov	r5,r2
   8afac:	3021883a 	mov	r16,r6
   8afb0:	2023883a 	mov	r17,r4
   8afb4:	3825883a 	mov	r18,r7
   8afb8:	003ed806 	br	8ab1c <__adddf3+0x7c>
   8afbc:	1821883a 	mov	r16,r3
   8afc0:	003f1706 	br	8ac20 <__adddf3+0x180>
   8afc4:	0101ffc4 	movi	r4,2047
   8afc8:	893f461e 	bne	r17,r4,8ace4 <__adddf3+0x244>
   8afcc:	003ed306 	br	8ab1c <__adddf3+0x7c>
   8afd0:	0005883a 	mov	r2,zero
   8afd4:	003fb006 	br	8ae98 <__adddf3+0x3f8>
   8afd8:	0005883a 	mov	r2,zero
   8afdc:	003fbb06 	br	8aecc <__adddf3+0x42c>
   8afe0:	2c06b03a 	or	r3,r5,r16
   8afe4:	8800841e 	bne	r17,zero,8b1f8 <__adddf3+0x758>
   8afe8:	1800b226 	beq	r3,zero,8b2b4 <__adddf3+0x814>
   8afec:	1186b03a 	or	r3,r2,r6
   8aff0:	183eca26 	beq	r3,zero,8ab1c <__adddf3+0x7c>
   8aff4:	340d883a 	add	r6,r6,r16
   8aff8:	114b883a 	add	r5,r2,r5
   8affc:	3421803a 	cmpltu	r16,r6,r16
   8b000:	2c0b883a 	add	r5,r5,r16
   8b004:	2880202c 	andhi	r2,r5,128
   8b008:	1000c026 	beq	r2,zero,8b30c <__adddf3+0x86c>
   8b00c:	00bfe034 	movhi	r2,65408
   8b010:	10bfffc4 	addi	r2,r2,-1
   8b014:	288a703a 	and	r5,r5,r2
   8b018:	3021883a 	mov	r16,r6
   8b01c:	3823883a 	mov	r17,r7
   8b020:	003ebe06 	br	8ab1c <__adddf3+0x7c>
   8b024:	2c06b03a 	or	r3,r5,r16
   8b028:	8800221e 	bne	r17,zero,8b0b4 <__adddf3+0x614>
   8b02c:	1800481e 	bne	r3,zero,8b150 <__adddf3+0x6b0>
   8b030:	1186b03a 	or	r3,r2,r6
   8b034:	18000426 	beq	r3,zero,8b048 <__adddf3+0x5a8>
   8b038:	100b883a 	mov	r5,r2
   8b03c:	3021883a 	mov	r16,r6
   8b040:	3825883a 	mov	r18,r7
   8b044:	003eb506 	br	8ab1c <__adddf3+0x7c>
   8b048:	0007883a 	mov	r3,zero
   8b04c:	000b883a 	mov	r5,zero
   8b050:	0021883a 	mov	r16,zero
   8b054:	003f1006 	br	8ac98 <__adddf3+0x1f8>
   8b058:	393ff804 	addi	r4,r7,-32
   8b05c:	02000804 	movi	r8,32
   8b060:	1108d83a 	srl	r4,r2,r4
   8b064:	3a007726 	beq	r7,r8,8b244 <__adddf3+0x7a4>
   8b068:	02001004 	movi	r8,64
   8b06c:	41cfc83a 	sub	r7,r8,r7
   8b070:	11c4983a 	sll	r2,r2,r7
   8b074:	118cb03a 	or	r6,r2,r6
   8b078:	300cc03a 	cmpne	r6,r6,zero
   8b07c:	310cb03a 	or	r6,r6,r4
   8b080:	000f883a 	mov	r7,zero
   8b084:	003f1c06 	br	8acf8 <__adddf3+0x258>
   8b088:	88001a1e 	bne	r17,zero,8b0f4 <__adddf3+0x654>
   8b08c:	2c10b03a 	or	r8,r5,r16
   8b090:	40005526 	beq	r8,zero,8b1e8 <__adddf3+0x748>
   8b094:	01ce303a 	nor	r7,zero,r7
   8b098:	3800511e 	bne	r7,zero,8b1e0 <__adddf3+0x740>
   8b09c:	81a1883a 	add	r16,r16,r6
   8b0a0:	114b883a 	add	r5,r2,r5
   8b0a4:	818d803a 	cmpltu	r6,r16,r6
   8b0a8:	298b883a 	add	r5,r5,r6
   8b0ac:	2023883a 	mov	r17,r4
   8b0b0:	003f1606 	br	8ad0c <__adddf3+0x26c>
   8b0b4:	1800341e 	bne	r3,zero,8b188 <__adddf3+0x6e8>
   8b0b8:	1186b03a 	or	r3,r2,r6
   8b0bc:	18006f26 	beq	r3,zero,8b27c <__adddf3+0x7dc>
   8b0c0:	100b883a 	mov	r5,r2
   8b0c4:	3021883a 	mov	r16,r6
   8b0c8:	3825883a 	mov	r18,r7
   8b0cc:	0441ffc4 	movi	r17,2047
   8b0d0:	003e9206 	br	8ab1c <__adddf3+0x7c>
   8b0d4:	2c20b03a 	or	r16,r5,r16
   8b0d8:	8020c03a 	cmpne	r16,r16,zero
   8b0dc:	000b883a 	mov	r5,zero
   8b0e0:	003f9106 	br	8af28 <__adddf3+0x488>
   8b0e4:	2023883a 	mov	r17,r4
   8b0e8:	000b883a 	mov	r5,zero
   8b0ec:	0021883a 	mov	r16,zero
   8b0f0:	003ee906 	br	8ac98 <__adddf3+0x1f8>
   8b0f4:	0201ffc4 	movi	r8,2047
   8b0f8:	22003b26 	beq	r4,r8,8b1e8 <__adddf3+0x748>
   8b0fc:	01cfc83a 	sub	r7,zero,r7
   8b100:	29402034 	orhi	r5,r5,128
   8b104:	02000e04 	movi	r8,56
   8b108:	41c06216 	blt	r8,r7,8b294 <__adddf3+0x7f4>
   8b10c:	020007c4 	movi	r8,31
   8b110:	41c07016 	blt	r8,r7,8b2d4 <__adddf3+0x834>
   8b114:	02000804 	movi	r8,32
   8b118:	41d1c83a 	sub	r8,r8,r7
   8b11c:	2a14983a 	sll	r10,r5,r8
   8b120:	81d2d83a 	srl	r9,r16,r7
   8b124:	8210983a 	sll	r8,r16,r8
   8b128:	29cad83a 	srl	r5,r5,r7
   8b12c:	5252b03a 	or	r9,r10,r9
   8b130:	400ec03a 	cmpne	r7,r8,zero
   8b134:	49e0b03a 	or	r16,r9,r7
   8b138:	81a1883a 	add	r16,r16,r6
   8b13c:	2885883a 	add	r2,r5,r2
   8b140:	818d803a 	cmpltu	r6,r16,r6
   8b144:	118b883a 	add	r5,r2,r6
   8b148:	2023883a 	mov	r17,r4
   8b14c:	003eef06 	br	8ad0c <__adddf3+0x26c>
   8b150:	1186b03a 	or	r3,r2,r6
   8b154:	183e7126 	beq	r3,zero,8ab1c <__adddf3+0x7c>
   8b158:	8187c83a 	sub	r3,r16,r6
   8b15c:	80d1803a 	cmpltu	r8,r16,r3
   8b160:	2889c83a 	sub	r4,r5,r2
   8b164:	2209c83a 	sub	r4,r4,r8
   8b168:	2200202c 	andhi	r8,r4,128
   8b16c:	40005426 	beq	r8,zero,8b2c0 <__adddf3+0x820>
   8b170:	3421c83a 	sub	r16,r6,r16
   8b174:	114bc83a 	sub	r5,r2,r5
   8b178:	340d803a 	cmpltu	r6,r6,r16
   8b17c:	298bc83a 	sub	r5,r5,r6
   8b180:	3825883a 	mov	r18,r7
   8b184:	003e6506 	br	8ab1c <__adddf3+0x7c>
   8b188:	1186b03a 	or	r3,r2,r6
   8b18c:	18002b26 	beq	r3,zero,8b23c <__adddf3+0x79c>
   8b190:	2806d0fa 	srli	r3,r5,3
   8b194:	8020d0fa 	srli	r16,r16,3
   8b198:	280a977a 	slli	r5,r5,29
   8b19c:	1900022c 	andhi	r4,r3,8
   8b1a0:	2c20b03a 	or	r16,r5,r16
   8b1a4:	20000826 	beq	r4,zero,8b1c8 <__adddf3+0x728>
   8b1a8:	1008d0fa 	srli	r4,r2,3
   8b1ac:	2140022c 	andhi	r5,r4,8
   8b1b0:	2800051e 	bne	r5,zero,8b1c8 <__adddf3+0x728>
   8b1b4:	300cd0fa 	srli	r6,r6,3
   8b1b8:	1004977a 	slli	r2,r2,29
   8b1bc:	2007883a 	mov	r3,r4
   8b1c0:	3825883a 	mov	r18,r7
   8b1c4:	11a0b03a 	or	r16,r2,r6
   8b1c8:	800ad77a 	srli	r5,r16,29
   8b1cc:	180690fa 	slli	r3,r3,3
   8b1d0:	802090fa 	slli	r16,r16,3
   8b1d4:	0441ffc4 	movi	r17,2047
   8b1d8:	28cab03a 	or	r5,r5,r3
   8b1dc:	003e4f06 	br	8ab1c <__adddf3+0x7c>
   8b1e0:	0201ffc4 	movi	r8,2047
   8b1e4:	223fc71e 	bne	r4,r8,8b104 <__adddf3+0x664>
   8b1e8:	100b883a 	mov	r5,r2
   8b1ec:	3021883a 	mov	r16,r6
   8b1f0:	2023883a 	mov	r17,r4
   8b1f4:	003e4906 	br	8ab1c <__adddf3+0x7c>
   8b1f8:	18002a26 	beq	r3,zero,8b2a4 <__adddf3+0x804>
   8b1fc:	1186b03a 	or	r3,r2,r6
   8b200:	18000e26 	beq	r3,zero,8b23c <__adddf3+0x79c>
   8b204:	2806d0fa 	srli	r3,r5,3
   8b208:	8020d0fa 	srli	r16,r16,3
   8b20c:	280a977a 	slli	r5,r5,29
   8b210:	1900022c 	andhi	r4,r3,8
   8b214:	2c20b03a 	or	r16,r5,r16
   8b218:	203feb26 	beq	r4,zero,8b1c8 <__adddf3+0x728>
   8b21c:	1008d0fa 	srli	r4,r2,3
   8b220:	2140022c 	andhi	r5,r4,8
   8b224:	283fe81e 	bne	r5,zero,8b1c8 <__adddf3+0x728>
   8b228:	300cd0fa 	srli	r6,r6,3
   8b22c:	1004977a 	slli	r2,r2,29
   8b230:	2007883a 	mov	r3,r4
   8b234:	11a0b03a 	or	r16,r2,r6
   8b238:	003fe306 	br	8b1c8 <__adddf3+0x728>
   8b23c:	0441ffc4 	movi	r17,2047
   8b240:	003e3606 	br	8ab1c <__adddf3+0x7c>
   8b244:	0005883a 	mov	r2,zero
   8b248:	003f8a06 	br	8b074 <__adddf3+0x5d4>
   8b24c:	1a3ff804 	addi	r8,r3,-32
   8b250:	02400804 	movi	r9,32
   8b254:	2a10d83a 	srl	r8,r5,r8
   8b258:	1a402a26 	beq	r3,r9,8b304 <__adddf3+0x864>
   8b25c:	02401004 	movi	r9,64
   8b260:	48c7c83a 	sub	r3,r9,r3
   8b264:	28ca983a 	sll	r5,r5,r3
   8b268:	2c20b03a 	or	r16,r5,r16
   8b26c:	8020c03a 	cmpne	r16,r16,zero
   8b270:	8220b03a 	or	r16,r16,r8
   8b274:	000b883a 	mov	r5,zero
   8b278:	003f2b06 	br	8af28 <__adddf3+0x488>
   8b27c:	0007883a 	mov	r3,zero
   8b280:	01402034 	movhi	r5,128
   8b284:	297fffc4 	addi	r5,r5,-1
   8b288:	043ffe04 	movi	r16,-8
   8b28c:	0441ffc4 	movi	r17,2047
   8b290:	003e8106 	br	8ac98 <__adddf3+0x1f8>
   8b294:	2c20b03a 	or	r16,r5,r16
   8b298:	8020c03a 	cmpne	r16,r16,zero
   8b29c:	000b883a 	mov	r5,zero
   8b2a0:	003fa506 	br	8b138 <__adddf3+0x698>
   8b2a4:	100b883a 	mov	r5,r2
   8b2a8:	3021883a 	mov	r16,r6
   8b2ac:	0441ffc4 	movi	r17,2047
   8b2b0:	003e1a06 	br	8ab1c <__adddf3+0x7c>
   8b2b4:	100b883a 	mov	r5,r2
   8b2b8:	3021883a 	mov	r16,r6
   8b2bc:	003e1706 	br	8ab1c <__adddf3+0x7c>
   8b2c0:	20c4b03a 	or	r2,r4,r3
   8b2c4:	103f6026 	beq	r2,zero,8b048 <__adddf3+0x5a8>
   8b2c8:	200b883a 	mov	r5,r4
   8b2cc:	1821883a 	mov	r16,r3
   8b2d0:	003e1206 	br	8ab1c <__adddf3+0x7c>
   8b2d4:	3a3ff804 	addi	r8,r7,-32
   8b2d8:	02400804 	movi	r9,32
   8b2dc:	2a10d83a 	srl	r8,r5,r8
   8b2e0:	3a400c26 	beq	r7,r9,8b314 <__adddf3+0x874>
   8b2e4:	02401004 	movi	r9,64
   8b2e8:	49cfc83a 	sub	r7,r9,r7
   8b2ec:	29ca983a 	sll	r5,r5,r7
   8b2f0:	2c20b03a 	or	r16,r5,r16
   8b2f4:	8020c03a 	cmpne	r16,r16,zero
   8b2f8:	8220b03a 	or	r16,r16,r8
   8b2fc:	000b883a 	mov	r5,zero
   8b300:	003f8d06 	br	8b138 <__adddf3+0x698>
   8b304:	000b883a 	mov	r5,zero
   8b308:	003fd706 	br	8b268 <__adddf3+0x7c8>
   8b30c:	3021883a 	mov	r16,r6
   8b310:	003e0206 	br	8ab1c <__adddf3+0x7c>
   8b314:	000b883a 	mov	r5,zero
   8b318:	003ff506 	br	8b2f0 <__adddf3+0x850>

0008b31c <__divdf3>:
   8b31c:	defff004 	addi	sp,sp,-64
   8b320:	dd000a15 	stw	r20,40(sp)
   8b324:	2828d53a 	srli	r20,r5,20
   8b328:	dd800c15 	stw	r22,48(sp)
   8b32c:	282cd7fa 	srli	r22,r5,31
   8b330:	df000e15 	stw	fp,56(sp)
   8b334:	dcc00915 	stw	r19,36(sp)
   8b338:	dc800815 	stw	r18,32(sp)
   8b33c:	04c00434 	movhi	r19,16
   8b340:	9cffffc4 	addi	r19,r19,-1
   8b344:	dfc00f15 	stw	ra,60(sp)
   8b348:	ddc00d15 	stw	r23,52(sp)
   8b34c:	dd400b15 	stw	r21,44(sp)
   8b350:	dc400715 	stw	r17,28(sp)
   8b354:	dc000615 	stw	r16,24(sp)
   8b358:	a501ffcc 	andi	r20,r20,2047
   8b35c:	2025883a 	mov	r18,r4
   8b360:	2ce6703a 	and	r19,r5,r19
   8b364:	b7003fcc 	andi	fp,r22,255
   8b368:	a0006a26 	beq	r20,zero,8b514 <__divdf3+0x1f8>
   8b36c:	0081ffc4 	movi	r2,2047
   8b370:	2021883a 	mov	r16,r4
   8b374:	a0803726 	beq	r20,r2,8b454 <__divdf3+0x138>
   8b378:	98800434 	orhi	r2,r19,16
   8b37c:	100490fa 	slli	r2,r2,3
   8b380:	2026d77a 	srli	r19,r4,29
   8b384:	202090fa 	slli	r16,r4,3
   8b388:	a53f0044 	addi	r20,r20,-1023
   8b38c:	14e6b03a 	or	r19,r2,r19
   8b390:	002b883a 	mov	r21,zero
   8b394:	0013883a 	mov	r9,zero
   8b398:	3804d53a 	srli	r2,r7,20
   8b39c:	382ed7fa 	srli	r23,r7,31
   8b3a0:	04400434 	movhi	r17,16
   8b3a4:	8c7fffc4 	addi	r17,r17,-1
   8b3a8:	1081ffcc 	andi	r2,r2,2047
   8b3ac:	3025883a 	mov	r18,r6
   8b3b0:	3c62703a 	and	r17,r7,r17
   8b3b4:	ba803fcc 	andi	r10,r23,255
   8b3b8:	10007326 	beq	r2,zero,8b588 <__divdf3+0x26c>
   8b3bc:	0101ffc4 	movi	r4,2047
   8b3c0:	11006b26 	beq	r2,r4,8b570 <__divdf3+0x254>
   8b3c4:	89000434 	orhi	r4,r17,16
   8b3c8:	200890fa 	slli	r4,r4,3
   8b3cc:	3022d77a 	srli	r17,r6,29
   8b3d0:	302490fa 	slli	r18,r6,3
   8b3d4:	10bf0044 	addi	r2,r2,-1023
   8b3d8:	2462b03a 	or	r17,r4,r17
   8b3dc:	000f883a 	mov	r7,zero
   8b3e0:	b5caf03a 	xor	r5,r22,r23
   8b3e4:	3d48b03a 	or	r4,r7,r21
   8b3e8:	00c003c4 	movi	r3,15
   8b3ec:	2811883a 	mov	r8,r5
   8b3f0:	2d403fcc 	andi	r21,r5,255
   8b3f4:	19009436 	bltu	r3,r4,8b648 <__divdf3+0x32c>
   8b3f8:	2109883a 	add	r4,r4,r4
   8b3fc:	00c00274 	movhi	r3,9
   8b400:	18ed0504 	addi	r3,r3,-19436
   8b404:	2109883a 	add	r4,r4,r4
   8b408:	20c9883a 	add	r4,r4,r3
   8b40c:	20c00017 	ldw	r3,0(r4)
   8b410:	1800683a 	jmp	r3
   8b414:	0008b648 	cmpgei	zero,zero,8921
   8b418:	0008b4b0 	cmpltui	zero,zero,8914
   8b41c:	0008b638 	rdprs	zero,zero,8920
   8b420:	0008b480 	call	8b48 <__alt_mem_onchip_memory2-0x774b8>
   8b424:	0008b638 	rdprs	zero,zero,8920
   8b428:	0008b620 	cmpeqi	zero,zero,8920
   8b42c:	0008b638 	rdprs	zero,zero,8920
   8b430:	0008b480 	call	8b48 <__alt_mem_onchip_memory2-0x774b8>
   8b434:	0008b4b0 	cmpltui	zero,zero,8914
   8b438:	0008b4b0 	cmpltui	zero,zero,8914
   8b43c:	0008b620 	cmpeqi	zero,zero,8920
   8b440:	0008b480 	call	8b48 <__alt_mem_onchip_memory2-0x774b8>
   8b444:	0008b470 	cmpltui	zero,zero,8913
   8b448:	0008b470 	cmpltui	zero,zero,8913
   8b44c:	0008b470 	cmpltui	zero,zero,8913
   8b450:	0008b9d8 	cmpnei	zero,zero,8935
   8b454:	9904b03a 	or	r2,r19,r4
   8b458:	10006e1e 	bne	r2,zero,8b614 <__divdf3+0x2f8>
   8b45c:	05400204 	movi	r21,8
   8b460:	0027883a 	mov	r19,zero
   8b464:	0021883a 	mov	r16,zero
   8b468:	02400084 	movi	r9,2
   8b46c:	003fca06 	br	8b398 <__divdf3+0x7c>
   8b470:	9823883a 	mov	r17,r19
   8b474:	8025883a 	mov	r18,r16
   8b478:	e015883a 	mov	r10,fp
   8b47c:	480f883a 	mov	r7,r9
   8b480:	00800084 	movi	r2,2
   8b484:	38800926 	beq	r7,r2,8b4ac <__divdf3+0x190>
   8b488:	008000c4 	movi	r2,3
   8b48c:	38820226 	beq	r7,r2,8bc98 <__divdf3+0x97c>
   8b490:	00800044 	movi	r2,1
   8b494:	3881b81e 	bne	r7,r2,8bb78 <__divdf3+0x85c>
   8b498:	5011883a 	mov	r8,r10
   8b49c:	0005883a 	mov	r2,zero
   8b4a0:	0027883a 	mov	r19,zero
   8b4a4:	0021883a 	mov	r16,zero
   8b4a8:	00000506 	br	8b4c0 <__divdf3+0x1a4>
   8b4ac:	502b883a 	mov	r21,r10
   8b4b0:	aa00004c 	andi	r8,r21,1
   8b4b4:	0081ffc4 	movi	r2,2047
   8b4b8:	0027883a 	mov	r19,zero
   8b4bc:	0021883a 	mov	r16,zero
   8b4c0:	1004953a 	slli	r2,r2,20
   8b4c4:	42003fcc 	andi	r8,r8,255
   8b4c8:	401097fa 	slli	r8,r8,31
   8b4cc:	00c00434 	movhi	r3,16
   8b4d0:	18ffffc4 	addi	r3,r3,-1
   8b4d4:	98e6703a 	and	r19,r19,r3
   8b4d8:	9886b03a 	or	r3,r19,r2
   8b4dc:	1a06b03a 	or	r3,r3,r8
   8b4e0:	8005883a 	mov	r2,r16
   8b4e4:	dfc00f17 	ldw	ra,60(sp)
   8b4e8:	df000e17 	ldw	fp,56(sp)
   8b4ec:	ddc00d17 	ldw	r23,52(sp)
   8b4f0:	dd800c17 	ldw	r22,48(sp)
   8b4f4:	dd400b17 	ldw	r21,44(sp)
   8b4f8:	dd000a17 	ldw	r20,40(sp)
   8b4fc:	dcc00917 	ldw	r19,36(sp)
   8b500:	dc800817 	ldw	r18,32(sp)
   8b504:	dc400717 	ldw	r17,28(sp)
   8b508:	dc000617 	ldw	r16,24(sp)
   8b50c:	dec01004 	addi	sp,sp,64
   8b510:	f800283a 	ret
   8b514:	9904b03a 	or	r2,r19,r4
   8b518:	10003926 	beq	r2,zero,8b600 <__divdf3+0x2e4>
   8b51c:	98015326 	beq	r19,zero,8ba6c <__divdf3+0x750>
   8b520:	9809883a 	mov	r4,r19
   8b524:	d9800215 	stw	r6,8(sp)
   8b528:	d9c00515 	stw	r7,20(sp)
   8b52c:	008d1780 	call	8d178 <__clzsi2>
   8b530:	d9800217 	ldw	r6,8(sp)
   8b534:	d9c00517 	ldw	r7,20(sp)
   8b538:	00c009c4 	movi	r3,39
   8b53c:	18814716 	blt	r3,r2,8ba5c <__divdf3+0x740>
   8b540:	01400a04 	movi	r5,40
   8b544:	143ffe04 	addi	r16,r2,-8
   8b548:	288bc83a 	sub	r5,r5,r2
   8b54c:	9c26983a 	sll	r19,r19,r16
   8b550:	914ad83a 	srl	r5,r18,r5
   8b554:	9420983a 	sll	r16,r18,r16
   8b558:	2ce6b03a 	or	r19,r5,r19
   8b55c:	053f0344 	movi	r20,-1011
   8b560:	a0a9c83a 	sub	r20,r20,r2
   8b564:	002b883a 	mov	r21,zero
   8b568:	0013883a 	mov	r9,zero
   8b56c:	003f8a06 	br	8b398 <__divdf3+0x7c>
   8b570:	8988b03a 	or	r4,r17,r6
   8b574:	2000201e 	bne	r4,zero,8b5f8 <__divdf3+0x2dc>
   8b578:	0023883a 	mov	r17,zero
   8b57c:	0025883a 	mov	r18,zero
   8b580:	01c00084 	movi	r7,2
   8b584:	003f9606 	br	8b3e0 <__divdf3+0xc4>
   8b588:	8988b03a 	or	r4,r17,r6
   8b58c:	20001626 	beq	r4,zero,8b5e8 <__divdf3+0x2cc>
   8b590:	88012826 	beq	r17,zero,8ba34 <__divdf3+0x718>
   8b594:	8809883a 	mov	r4,r17
   8b598:	d9800215 	stw	r6,8(sp)
   8b59c:	da400315 	stw	r9,12(sp)
   8b5a0:	da800415 	stw	r10,16(sp)
   8b5a4:	008d1780 	call	8d178 <__clzsi2>
   8b5a8:	d9800217 	ldw	r6,8(sp)
   8b5ac:	da400317 	ldw	r9,12(sp)
   8b5b0:	da800417 	ldw	r10,16(sp)
   8b5b4:	010009c4 	movi	r4,39
   8b5b8:	20811a16 	blt	r4,r2,8ba24 <__divdf3+0x708>
   8b5bc:	01000a04 	movi	r4,40
   8b5c0:	14bffe04 	addi	r18,r2,-8
   8b5c4:	2089c83a 	sub	r4,r4,r2
   8b5c8:	8ca2983a 	sll	r17,r17,r18
   8b5cc:	3108d83a 	srl	r4,r6,r4
   8b5d0:	34a4983a 	sll	r18,r6,r18
   8b5d4:	2462b03a 	or	r17,r4,r17
   8b5d8:	013f0344 	movi	r4,-1011
   8b5dc:	2085c83a 	sub	r2,r4,r2
   8b5e0:	000f883a 	mov	r7,zero
   8b5e4:	003f7e06 	br	8b3e0 <__divdf3+0xc4>
   8b5e8:	0023883a 	mov	r17,zero
   8b5ec:	0025883a 	mov	r18,zero
   8b5f0:	01c00044 	movi	r7,1
   8b5f4:	003f7a06 	br	8b3e0 <__divdf3+0xc4>
   8b5f8:	01c000c4 	movi	r7,3
   8b5fc:	003f7806 	br	8b3e0 <__divdf3+0xc4>
   8b600:	05400104 	movi	r21,4
   8b604:	0027883a 	mov	r19,zero
   8b608:	0021883a 	mov	r16,zero
   8b60c:	02400044 	movi	r9,1
   8b610:	003f6106 	br	8b398 <__divdf3+0x7c>
   8b614:	05400304 	movi	r21,12
   8b618:	024000c4 	movi	r9,3
   8b61c:	003f5e06 	br	8b398 <__divdf3+0x7c>
   8b620:	0011883a 	mov	r8,zero
   8b624:	04c00434 	movhi	r19,16
   8b628:	9cffffc4 	addi	r19,r19,-1
   8b62c:	043fffc4 	movi	r16,-1
   8b630:	0081ffc4 	movi	r2,2047
   8b634:	003fa206 	br	8b4c0 <__divdf3+0x1a4>
   8b638:	0005883a 	mov	r2,zero
   8b63c:	0027883a 	mov	r19,zero
   8b640:	0021883a 	mov	r16,zero
   8b644:	003f9e06 	br	8b4c0 <__divdf3+0x1a4>
   8b648:	a085c83a 	sub	r2,r20,r2
   8b64c:	d8800115 	stw	r2,4(sp)
   8b650:	8cc11b36 	bltu	r17,r19,8bac0 <__divdf3+0x7a4>
   8b654:	9c411926 	beq	r19,r17,8babc <__divdf3+0x7a0>
   8b658:	d8c00117 	ldw	r3,4(sp)
   8b65c:	002d883a 	mov	r22,zero
   8b660:	18ffffc4 	addi	r3,r3,-1
   8b664:	d8c00115 	stw	r3,4(sp)
   8b668:	9006d63a 	srli	r3,r18,24
   8b66c:	8822923a 	slli	r17,r17,8
   8b670:	9024923a 	slli	r18,r18,8
   8b674:	9809883a 	mov	r4,r19
   8b678:	1c6eb03a 	or	r23,r3,r17
   8b67c:	b828d43a 	srli	r20,r23,16
   8b680:	dc800015 	stw	r18,0(sp)
   8b684:	bcbfffcc 	andi	r18,r23,65535
   8b688:	a00b883a 	mov	r5,r20
   8b68c:	008aa680 	call	8aa68 <__udivsi3>
   8b690:	1009883a 	mov	r4,r2
   8b694:	900b883a 	mov	r5,r18
   8b698:	1039883a 	mov	fp,r2
   8b69c:	008aa780 	call	8aa78 <__mulsi3>
   8b6a0:	9809883a 	mov	r4,r19
   8b6a4:	a00b883a 	mov	r5,r20
   8b6a8:	1023883a 	mov	r17,r2
   8b6ac:	008aa700 	call	8aa70 <__umodsi3>
   8b6b0:	1004943a 	slli	r2,r2,16
   8b6b4:	8008d43a 	srli	r4,r16,16
   8b6b8:	110ab03a 	or	r5,r2,r4
   8b6bc:	2c40062e 	bgeu	r5,r17,8b6d8 <__divdf3+0x3bc>
   8b6c0:	2dcb883a 	add	r5,r5,r23
   8b6c4:	e0bfffc4 	addi	r2,fp,-1
   8b6c8:	2dc11136 	bltu	r5,r23,8bb10 <__divdf3+0x7f4>
   8b6cc:	2c41102e 	bgeu	r5,r17,8bb10 <__divdf3+0x7f4>
   8b6d0:	e73fff84 	addi	fp,fp,-2
   8b6d4:	2dcb883a 	add	r5,r5,r23
   8b6d8:	2c67c83a 	sub	r19,r5,r17
   8b6dc:	9809883a 	mov	r4,r19
   8b6e0:	a00b883a 	mov	r5,r20
   8b6e4:	008aa680 	call	8aa68 <__udivsi3>
   8b6e8:	1009883a 	mov	r4,r2
   8b6ec:	900b883a 	mov	r5,r18
   8b6f0:	1023883a 	mov	r17,r2
   8b6f4:	008aa780 	call	8aa78 <__mulsi3>
   8b6f8:	9809883a 	mov	r4,r19
   8b6fc:	a00b883a 	mov	r5,r20
   8b700:	d8800215 	stw	r2,8(sp)
   8b704:	008aa700 	call	8aa70 <__umodsi3>
   8b708:	1004943a 	slli	r2,r2,16
   8b70c:	da000217 	ldw	r8,8(sp)
   8b710:	843fffcc 	andi	r16,r16,65535
   8b714:	140eb03a 	or	r7,r2,r16
   8b718:	3a00062e 	bgeu	r7,r8,8b734 <__divdf3+0x418>
   8b71c:	3dcf883a 	add	r7,r7,r23
   8b720:	88bfffc4 	addi	r2,r17,-1
   8b724:	3dc0f836 	bltu	r7,r23,8bb08 <__divdf3+0x7ec>
   8b728:	3a00f72e 	bgeu	r7,r8,8bb08 <__divdf3+0x7ec>
   8b72c:	8c7fff84 	addi	r17,r17,-2
   8b730:	3dcf883a 	add	r7,r7,r23
   8b734:	e004943a 	slli	r2,fp,16
   8b738:	d8c00017 	ldw	r3,0(sp)
   8b73c:	3a0fc83a 	sub	r7,r7,r8
   8b740:	88a2b03a 	or	r17,r17,r2
   8b744:	1f3fffcc 	andi	fp,r3,65535
   8b748:	8a7fffcc 	andi	r9,r17,65535
   8b74c:	4809883a 	mov	r4,r9
   8b750:	e00b883a 	mov	r5,fp
   8b754:	1826d43a 	srli	r19,r3,16
   8b758:	d9c00515 	stw	r7,20(sp)
   8b75c:	da400315 	stw	r9,12(sp)
   8b760:	008aa780 	call	8aa78 <__mulsi3>
   8b764:	da400317 	ldw	r9,12(sp)
   8b768:	8820d43a 	srli	r16,r17,16
   8b76c:	980b883a 	mov	r5,r19
   8b770:	4809883a 	mov	r4,r9
   8b774:	d8800215 	stw	r2,8(sp)
   8b778:	008aa780 	call	8aa78 <__mulsi3>
   8b77c:	8009883a 	mov	r4,r16
   8b780:	e00b883a 	mov	r5,fp
   8b784:	d8800415 	stw	r2,16(sp)
   8b788:	008aa780 	call	8aa78 <__mulsi3>
   8b78c:	8009883a 	mov	r4,r16
   8b790:	980b883a 	mov	r5,r19
   8b794:	d8800315 	stw	r2,12(sp)
   8b798:	008aa780 	call	8aa78 <__mulsi3>
   8b79c:	da000217 	ldw	r8,8(sp)
   8b7a0:	da400317 	ldw	r9,12(sp)
   8b7a4:	da800417 	ldw	r10,16(sp)
   8b7a8:	100b883a 	mov	r5,r2
   8b7ac:	4004d43a 	srli	r2,r8,16
   8b7b0:	4a89883a 	add	r4,r9,r10
   8b7b4:	d9c00517 	ldw	r7,20(sp)
   8b7b8:	2089883a 	add	r4,r4,r2
   8b7bc:	2240022e 	bgeu	r4,r9,8b7c8 <__divdf3+0x4ac>
   8b7c0:	00800074 	movhi	r2,1
   8b7c4:	288b883a 	add	r5,r5,r2
   8b7c8:	2004d43a 	srli	r2,r4,16
   8b7cc:	2020943a 	slli	r16,r4,16
   8b7d0:	423fffcc 	andi	r8,r8,65535
   8b7d4:	288b883a 	add	r5,r5,r2
   8b7d8:	8221883a 	add	r16,r16,r8
   8b7dc:	3940ab36 	bltu	r7,r5,8ba8c <__divdf3+0x770>
   8b7e0:	3940a926 	beq	r7,r5,8ba88 <__divdf3+0x76c>
   8b7e4:	394bc83a 	sub	r5,r7,r5
   8b7e8:	b421c83a 	sub	r16,r22,r16
   8b7ec:	b42d803a 	cmpltu	r22,r22,r16
   8b7f0:	2dadc83a 	sub	r22,r5,r22
   8b7f4:	b5c0da26 	beq	r22,r23,8bb60 <__divdf3+0x844>
   8b7f8:	b009883a 	mov	r4,r22
   8b7fc:	a00b883a 	mov	r5,r20
   8b800:	008aa680 	call	8aa68 <__udivsi3>
   8b804:	1009883a 	mov	r4,r2
   8b808:	900b883a 	mov	r5,r18
   8b80c:	d8800215 	stw	r2,8(sp)
   8b810:	008aa780 	call	8aa78 <__mulsi3>
   8b814:	b009883a 	mov	r4,r22
   8b818:	a00b883a 	mov	r5,r20
   8b81c:	d8800515 	stw	r2,20(sp)
   8b820:	008aa700 	call	8aa70 <__umodsi3>
   8b824:	1004943a 	slli	r2,r2,16
   8b828:	8008d43a 	srli	r4,r16,16
   8b82c:	d9c00517 	ldw	r7,20(sp)
   8b830:	da000217 	ldw	r8,8(sp)
   8b834:	110ab03a 	or	r5,r2,r4
   8b838:	29c0062e 	bgeu	r5,r7,8b854 <__divdf3+0x538>
   8b83c:	2dcb883a 	add	r5,r5,r23
   8b840:	40bfffc4 	addi	r2,r8,-1
   8b844:	2dc0ca36 	bltu	r5,r23,8bb70 <__divdf3+0x854>
   8b848:	29c0c92e 	bgeu	r5,r7,8bb70 <__divdf3+0x854>
   8b84c:	423fff84 	addi	r8,r8,-2
   8b850:	2dcb883a 	add	r5,r5,r23
   8b854:	29cfc83a 	sub	r7,r5,r7
   8b858:	3809883a 	mov	r4,r7
   8b85c:	a00b883a 	mov	r5,r20
   8b860:	da000215 	stw	r8,8(sp)
   8b864:	d9c00515 	stw	r7,20(sp)
   8b868:	008aa680 	call	8aa68 <__udivsi3>
   8b86c:	900b883a 	mov	r5,r18
   8b870:	1009883a 	mov	r4,r2
   8b874:	102d883a 	mov	r22,r2
   8b878:	008aa780 	call	8aa78 <__mulsi3>
   8b87c:	d9c00517 	ldw	r7,20(sp)
   8b880:	a00b883a 	mov	r5,r20
   8b884:	1025883a 	mov	r18,r2
   8b888:	3809883a 	mov	r4,r7
   8b88c:	008aa700 	call	8aa70 <__umodsi3>
   8b890:	1004943a 	slli	r2,r2,16
   8b894:	843fffcc 	andi	r16,r16,65535
   8b898:	da000217 	ldw	r8,8(sp)
   8b89c:	140eb03a 	or	r7,r2,r16
   8b8a0:	3c80062e 	bgeu	r7,r18,8b8bc <__divdf3+0x5a0>
   8b8a4:	3dcf883a 	add	r7,r7,r23
   8b8a8:	b0bfffc4 	addi	r2,r22,-1
   8b8ac:	3dc0ae36 	bltu	r7,r23,8bb68 <__divdf3+0x84c>
   8b8b0:	3c80ad2e 	bgeu	r7,r18,8bb68 <__divdf3+0x84c>
   8b8b4:	b5bfff84 	addi	r22,r22,-2
   8b8b8:	3dcf883a 	add	r7,r7,r23
   8b8bc:	4010943a 	slli	r8,r8,16
   8b8c0:	3ca9c83a 	sub	r20,r7,r18
   8b8c4:	e00b883a 	mov	r5,fp
   8b8c8:	b224b03a 	or	r18,r22,r8
   8b8cc:	91ffffcc 	andi	r7,r18,65535
   8b8d0:	3809883a 	mov	r4,r7
   8b8d4:	d9c00515 	stw	r7,20(sp)
   8b8d8:	008aa780 	call	8aa78 <__mulsi3>
   8b8dc:	d9c00517 	ldw	r7,20(sp)
   8b8e0:	9020d43a 	srli	r16,r18,16
   8b8e4:	980b883a 	mov	r5,r19
   8b8e8:	3809883a 	mov	r4,r7
   8b8ec:	102d883a 	mov	r22,r2
   8b8f0:	008aa780 	call	8aa78 <__mulsi3>
   8b8f4:	e00b883a 	mov	r5,fp
   8b8f8:	8009883a 	mov	r4,r16
   8b8fc:	d8800515 	stw	r2,20(sp)
   8b900:	008aa780 	call	8aa78 <__mulsi3>
   8b904:	8009883a 	mov	r4,r16
   8b908:	980b883a 	mov	r5,r19
   8b90c:	1039883a 	mov	fp,r2
   8b910:	008aa780 	call	8aa78 <__mulsi3>
   8b914:	d9c00517 	ldw	r7,20(sp)
   8b918:	100b883a 	mov	r5,r2
   8b91c:	b004d43a 	srli	r2,r22,16
   8b920:	e1c9883a 	add	r4,fp,r7
   8b924:	2089883a 	add	r4,r4,r2
   8b928:	2700022e 	bgeu	r4,fp,8b934 <__divdf3+0x618>
   8b92c:	00800074 	movhi	r2,1
   8b930:	288b883a 	add	r5,r5,r2
   8b934:	2004d43a 	srli	r2,r4,16
   8b938:	2008943a 	slli	r4,r4,16
   8b93c:	b5bfffcc 	andi	r22,r22,65535
   8b940:	288b883a 	add	r5,r5,r2
   8b944:	25ad883a 	add	r22,r4,r22
   8b948:	a140632e 	bgeu	r20,r5,8bad8 <__divdf3+0x7bc>
   8b94c:	a5e9883a 	add	r20,r20,r23
   8b950:	90bfffc4 	addi	r2,r18,-1
   8b954:	a5c0702e 	bgeu	r20,r23,8bb18 <__divdf3+0x7fc>
   8b958:	1025883a 	mov	r18,r2
   8b95c:	a1406126 	beq	r20,r5,8bae4 <__divdf3+0x7c8>
   8b960:	94800054 	ori	r18,r18,1
   8b964:	d8c00117 	ldw	r3,4(sp)
   8b968:	1880ffc4 	addi	r2,r3,1023
   8b96c:	0080720e 	bge	zero,r2,8bb38 <__divdf3+0x81c>
   8b970:	90c001cc 	andi	r3,r18,7
   8b974:	18000726 	beq	r3,zero,8b994 <__divdf3+0x678>
   8b978:	910003cc 	andi	r4,r18,15
   8b97c:	00c00104 	movi	r3,4
   8b980:	20c00426 	beq	r4,r3,8b994 <__divdf3+0x678>
   8b984:	90c7883a 	add	r3,r18,r3
   8b988:	1ca5803a 	cmpltu	r18,r3,r18
   8b98c:	8ca3883a 	add	r17,r17,r18
   8b990:	1825883a 	mov	r18,r3
   8b994:	88c0402c 	andhi	r3,r17,256
   8b998:	18000526 	beq	r3,zero,8b9b0 <__divdf3+0x694>
   8b99c:	d8c00117 	ldw	r3,4(sp)
   8b9a0:	00bfc034 	movhi	r2,65280
   8b9a4:	10bfffc4 	addi	r2,r2,-1
   8b9a8:	88a2703a 	and	r17,r17,r2
   8b9ac:	18810004 	addi	r2,r3,1024
   8b9b0:	00c1ff84 	movi	r3,2046
   8b9b4:	18bebe16 	blt	r3,r2,8b4b0 <__divdf3+0x194>
   8b9b8:	8820977a 	slli	r16,r17,29
   8b9bc:	9024d0fa 	srli	r18,r18,3
   8b9c0:	8822927a 	slli	r17,r17,9
   8b9c4:	1081ffcc 	andi	r2,r2,2047
   8b9c8:	84a0b03a 	or	r16,r16,r18
   8b9cc:	8826d33a 	srli	r19,r17,12
   8b9d0:	aa00004c 	andi	r8,r21,1
   8b9d4:	003eba06 	br	8b4c0 <__divdf3+0x1a4>
   8b9d8:	9880022c 	andhi	r2,r19,8
   8b9dc:	10000a26 	beq	r2,zero,8ba08 <__divdf3+0x6ec>
   8b9e0:	8880022c 	andhi	r2,r17,8
   8b9e4:	1000081e 	bne	r2,zero,8ba08 <__divdf3+0x6ec>
   8b9e8:	00800434 	movhi	r2,16
   8b9ec:	10bfffc4 	addi	r2,r2,-1
   8b9f0:	8cc00234 	orhi	r19,r17,8
   8b9f4:	98a6703a 	and	r19,r19,r2
   8b9f8:	b811883a 	mov	r8,r23
   8b9fc:	9021883a 	mov	r16,r18
   8ba00:	0081ffc4 	movi	r2,2047
   8ba04:	003eae06 	br	8b4c0 <__divdf3+0x1a4>
   8ba08:	00800434 	movhi	r2,16
   8ba0c:	10bfffc4 	addi	r2,r2,-1
   8ba10:	9cc00234 	orhi	r19,r19,8
   8ba14:	98a6703a 	and	r19,r19,r2
   8ba18:	b011883a 	mov	r8,r22
   8ba1c:	0081ffc4 	movi	r2,2047
   8ba20:	003ea706 	br	8b4c0 <__divdf3+0x1a4>
   8ba24:	147ff604 	addi	r17,r2,-40
   8ba28:	3462983a 	sll	r17,r6,r17
   8ba2c:	0025883a 	mov	r18,zero
   8ba30:	003ee906 	br	8b5d8 <__divdf3+0x2bc>
   8ba34:	3009883a 	mov	r4,r6
   8ba38:	d9800215 	stw	r6,8(sp)
   8ba3c:	da400315 	stw	r9,12(sp)
   8ba40:	da800415 	stw	r10,16(sp)
   8ba44:	008d1780 	call	8d178 <__clzsi2>
   8ba48:	10800804 	addi	r2,r2,32
   8ba4c:	da800417 	ldw	r10,16(sp)
   8ba50:	da400317 	ldw	r9,12(sp)
   8ba54:	d9800217 	ldw	r6,8(sp)
   8ba58:	003ed606 	br	8b5b4 <__divdf3+0x298>
   8ba5c:	14fff604 	addi	r19,r2,-40
   8ba60:	94e6983a 	sll	r19,r18,r19
   8ba64:	0021883a 	mov	r16,zero
   8ba68:	003ebc06 	br	8b55c <__divdf3+0x240>
   8ba6c:	d9800215 	stw	r6,8(sp)
   8ba70:	d9c00515 	stw	r7,20(sp)
   8ba74:	008d1780 	call	8d178 <__clzsi2>
   8ba78:	10800804 	addi	r2,r2,32
   8ba7c:	d9c00517 	ldw	r7,20(sp)
   8ba80:	d9800217 	ldw	r6,8(sp)
   8ba84:	003eac06 	br	8b538 <__divdf3+0x21c>
   8ba88:	b400292e 	bgeu	r22,r16,8bb30 <__divdf3+0x814>
   8ba8c:	d8c00017 	ldw	r3,0(sp)
   8ba90:	b0ed883a 	add	r22,r22,r3
   8ba94:	b0c5803a 	cmpltu	r2,r22,r3
   8ba98:	15c5883a 	add	r2,r2,r23
   8ba9c:	11cf883a 	add	r7,r2,r7
   8baa0:	88bfffc4 	addi	r2,r17,-1
   8baa4:	b9c0122e 	bgeu	r23,r7,8baf0 <__divdf3+0x7d4>
   8baa8:	39405036 	bltu	r7,r5,8bbec <__divdf3+0x8d0>
   8baac:	29c01e26 	beq	r5,r7,8bb28 <__divdf3+0x80c>
   8bab0:	394bc83a 	sub	r5,r7,r5
   8bab4:	1023883a 	mov	r17,r2
   8bab8:	003f4b06 	br	8b7e8 <__divdf3+0x4cc>
   8babc:	943ee62e 	bgeu	r18,r16,8b658 <__divdf3+0x33c>
   8bac0:	980497fa 	slli	r2,r19,31
   8bac4:	8006d07a 	srli	r3,r16,1
   8bac8:	802c97fa 	slli	r22,r16,31
   8bacc:	9826d07a 	srli	r19,r19,1
   8bad0:	18a0b03a 	or	r16,r3,r2
   8bad4:	003ee406 	br	8b668 <__divdf3+0x34c>
   8bad8:	a17fa11e 	bne	r20,r5,8b960 <__divdf3+0x644>
   8badc:	b03f9b1e 	bne	r22,zero,8b94c <__divdf3+0x630>
   8bae0:	d8000015 	stw	zero,0(sp)
   8bae4:	d8c00017 	ldw	r3,0(sp)
   8bae8:	1dbf9d1e 	bne	r3,r22,8b960 <__divdf3+0x644>
   8baec:	003f9d06 	br	8b964 <__divdf3+0x648>
   8baf0:	3dffef1e 	bne	r7,r23,8bab0 <__divdf3+0x794>
   8baf4:	d8c00017 	ldw	r3,0(sp)
   8baf8:	b0ffeb2e 	bgeu	r22,r3,8baa8 <__divdf3+0x78c>
   8bafc:	b94bc83a 	sub	r5,r23,r5
   8bb00:	1023883a 	mov	r17,r2
   8bb04:	003f3806 	br	8b7e8 <__divdf3+0x4cc>
   8bb08:	1023883a 	mov	r17,r2
   8bb0c:	003f0906 	br	8b734 <__divdf3+0x418>
   8bb10:	1039883a 	mov	fp,r2
   8bb14:	003ef006 	br	8b6d8 <__divdf3+0x3bc>
   8bb18:	a1403b36 	bltu	r20,r5,8bc08 <__divdf3+0x8ec>
   8bb1c:	2d005826 	beq	r5,r20,8bc80 <__divdf3+0x964>
   8bb20:	1025883a 	mov	r18,r2
   8bb24:	003f8e06 	br	8b960 <__divdf3+0x644>
   8bb28:	b4003036 	bltu	r22,r16,8bbec <__divdf3+0x8d0>
   8bb2c:	1023883a 	mov	r17,r2
   8bb30:	000b883a 	mov	r5,zero
   8bb34:	003f2c06 	br	8b7e8 <__divdf3+0x4cc>
   8bb38:	d8c00117 	ldw	r3,4(sp)
   8bb3c:	00bf0084 	movi	r2,-1022
   8bb40:	10c5c83a 	sub	r2,r2,r3
   8bb44:	00c00e04 	movi	r3,56
   8bb48:	18800d0e 	bge	r3,r2,8bb80 <__divdf3+0x864>
   8bb4c:	aa00004c 	andi	r8,r21,1
   8bb50:	0005883a 	mov	r2,zero
   8bb54:	0027883a 	mov	r19,zero
   8bb58:	0021883a 	mov	r16,zero
   8bb5c:	003e5806 	br	8b4c0 <__divdf3+0x1a4>
   8bb60:	04bfffc4 	movi	r18,-1
   8bb64:	003f7f06 	br	8b964 <__divdf3+0x648>
   8bb68:	102d883a 	mov	r22,r2
   8bb6c:	003f5306 	br	8b8bc <__divdf3+0x5a0>
   8bb70:	1011883a 	mov	r8,r2
   8bb74:	003f3706 	br	8b854 <__divdf3+0x538>
   8bb78:	502b883a 	mov	r21,r10
   8bb7c:	003f7906 	br	8b964 <__divdf3+0x648>
   8bb80:	00c007c4 	movi	r3,31
   8bb84:	18802816 	blt	r3,r2,8bc28 <__divdf3+0x90c>
   8bb88:	d9000117 	ldw	r4,4(sp)
   8bb8c:	908ad83a 	srl	r5,r18,r2
   8bb90:	8884d83a 	srl	r2,r17,r2
   8bb94:	20c10784 	addi	r3,r4,1054
   8bb98:	88c8983a 	sll	r4,r17,r3
   8bb9c:	90c6983a 	sll	r3,r18,r3
   8bba0:	2908b03a 	or	r4,r5,r4
   8bba4:	1806c03a 	cmpne	r3,r3,zero
   8bba8:	20c6b03a 	or	r3,r4,r3
   8bbac:	190001cc 	andi	r4,r3,7
   8bbb0:	20000726 	beq	r4,zero,8bbd0 <__divdf3+0x8b4>
   8bbb4:	194003cc 	andi	r5,r3,15
   8bbb8:	01000104 	movi	r4,4
   8bbbc:	29000426 	beq	r5,r4,8bbd0 <__divdf3+0x8b4>
   8bbc0:	1909883a 	add	r4,r3,r4
   8bbc4:	20c7803a 	cmpltu	r3,r4,r3
   8bbc8:	10c5883a 	add	r2,r2,r3
   8bbcc:	2007883a 	mov	r3,r4
   8bbd0:	1100202c 	andhi	r4,r2,128
   8bbd4:	20002226 	beq	r4,zero,8bc60 <__divdf3+0x944>
   8bbd8:	aa00004c 	andi	r8,r21,1
   8bbdc:	00800044 	movi	r2,1
   8bbe0:	0027883a 	mov	r19,zero
   8bbe4:	0021883a 	mov	r16,zero
   8bbe8:	003e3506 	br	8b4c0 <__divdf3+0x1a4>
   8bbec:	d8c00017 	ldw	r3,0(sp)
   8bbf0:	8c7fff84 	addi	r17,r17,-2
   8bbf4:	b0ed883a 	add	r22,r22,r3
   8bbf8:	b0c5803a 	cmpltu	r2,r22,r3
   8bbfc:	15c5883a 	add	r2,r2,r23
   8bc00:	11cf883a 	add	r7,r2,r7
   8bc04:	003ef706 	br	8b7e4 <__divdf3+0x4c8>
   8bc08:	d8c00017 	ldw	r3,0(sp)
   8bc0c:	18c9883a 	add	r4,r3,r3
   8bc10:	20c5803a 	cmpltu	r2,r4,r3
   8bc14:	15c7883a 	add	r3,r2,r23
   8bc18:	a0e9883a 	add	r20,r20,r3
   8bc1c:	90bfff84 	addi	r2,r18,-2
   8bc20:	d9000015 	stw	r4,0(sp)
   8bc24:	003f4c06 	br	8b958 <__divdf3+0x63c>
   8bc28:	d9000117 	ldw	r4,4(sp)
   8bc2c:	00fef884 	movi	r3,-1054
   8bc30:	1907c83a 	sub	r3,r3,r4
   8bc34:	01000804 	movi	r4,32
   8bc38:	88c6d83a 	srl	r3,r17,r3
   8bc3c:	11001426 	beq	r2,r4,8bc90 <__divdf3+0x974>
   8bc40:	d9000117 	ldw	r4,4(sp)
   8bc44:	20810f84 	addi	r2,r4,1086
   8bc48:	8884983a 	sll	r2,r17,r2
   8bc4c:	1484b03a 	or	r2,r2,r18
   8bc50:	1004c03a 	cmpne	r2,r2,zero
   8bc54:	10c6b03a 	or	r3,r2,r3
   8bc58:	0005883a 	mov	r2,zero
   8bc5c:	003fd306 	br	8bbac <__divdf3+0x890>
   8bc60:	1020977a 	slli	r16,r2,29
   8bc64:	1806d0fa 	srli	r3,r3,3
   8bc68:	1004927a 	slli	r2,r2,9
   8bc6c:	aa00004c 	andi	r8,r21,1
   8bc70:	80e0b03a 	or	r16,r16,r3
   8bc74:	1026d33a 	srli	r19,r2,12
   8bc78:	0005883a 	mov	r2,zero
   8bc7c:	003e1006 	br	8b4c0 <__divdf3+0x1a4>
   8bc80:	d8c00017 	ldw	r3,0(sp)
   8bc84:	1dbfe036 	bltu	r3,r22,8bc08 <__divdf3+0x8ec>
   8bc88:	1025883a 	mov	r18,r2
   8bc8c:	003f9506 	br	8bae4 <__divdf3+0x7c8>
   8bc90:	0005883a 	mov	r2,zero
   8bc94:	003fed06 	br	8bc4c <__divdf3+0x930>
   8bc98:	00800434 	movhi	r2,16
   8bc9c:	10bfffc4 	addi	r2,r2,-1
   8bca0:	8cc00234 	orhi	r19,r17,8
   8bca4:	98a6703a 	and	r19,r19,r2
   8bca8:	5011883a 	mov	r8,r10
   8bcac:	9021883a 	mov	r16,r18
   8bcb0:	0081ffc4 	movi	r2,2047
   8bcb4:	003e0206 	br	8b4c0 <__divdf3+0x1a4>

0008bcb8 <__eqdf2>:
   8bcb8:	2806d53a 	srli	r3,r5,20
   8bcbc:	3810d53a 	srli	r8,r7,20
   8bcc0:	00800434 	movhi	r2,16
   8bcc4:	10bfffc4 	addi	r2,r2,-1
   8bcc8:	18c1ffcc 	andi	r3,r3,2047
   8bccc:	0241ffc4 	movi	r9,2047
   8bcd0:	2894703a 	and	r10,r5,r2
   8bcd4:	4201ffcc 	andi	r8,r8,2047
   8bcd8:	3884703a 	and	r2,r7,r2
   8bcdc:	280ad7fa 	srli	r5,r5,31
   8bce0:	380ed7fa 	srli	r7,r7,31
   8bce4:	1a400f26 	beq	r3,r9,8bd24 <__eqdf2+0x6c>
   8bce8:	0241ffc4 	movi	r9,2047
   8bcec:	42400326 	beq	r8,r9,8bcfc <__eqdf2+0x44>
   8bcf0:	1a000526 	beq	r3,r8,8bd08 <__eqdf2+0x50>
   8bcf4:	00800044 	movi	r2,1
   8bcf8:	f800283a 	ret
   8bcfc:	1192b03a 	or	r9,r2,r6
   8bd00:	483ffc1e 	bne	r9,zero,8bcf4 <__eqdf2+0x3c>
   8bd04:	1a3ffb1e 	bne	r3,r8,8bcf4 <__eqdf2+0x3c>
   8bd08:	50bffa1e 	bne	r10,r2,8bcf4 <__eqdf2+0x3c>
   8bd0c:	21bff91e 	bne	r4,r6,8bcf4 <__eqdf2+0x3c>
   8bd10:	29c00826 	beq	r5,r7,8bd34 <__eqdf2+0x7c>
   8bd14:	183ff71e 	bne	r3,zero,8bcf4 <__eqdf2+0x3c>
   8bd18:	5104b03a 	or	r2,r10,r4
   8bd1c:	1004c03a 	cmpne	r2,r2,zero
   8bd20:	f800283a 	ret
   8bd24:	5112b03a 	or	r9,r10,r4
   8bd28:	483fef26 	beq	r9,zero,8bce8 <__eqdf2+0x30>
   8bd2c:	00800044 	movi	r2,1
   8bd30:	f800283a 	ret
   8bd34:	0005883a 	mov	r2,zero
   8bd38:	f800283a 	ret

0008bd3c <__gedf2>:
   8bd3c:	2804d53a 	srli	r2,r5,20
   8bd40:	3810d53a 	srli	r8,r7,20
   8bd44:	00c00434 	movhi	r3,16
   8bd48:	18ffffc4 	addi	r3,r3,-1
   8bd4c:	1081ffcc 	andi	r2,r2,2047
   8bd50:	0241ffc4 	movi	r9,2047
   8bd54:	28d4703a 	and	r10,r5,r3
   8bd58:	4201ffcc 	andi	r8,r8,2047
   8bd5c:	38c6703a 	and	r3,r7,r3
   8bd60:	280ad7fa 	srli	r5,r5,31
   8bd64:	380ed7fa 	srli	r7,r7,31
   8bd68:	12401b26 	beq	r2,r9,8bdd8 <__gedf2+0x9c>
   8bd6c:	0241ffc4 	movi	r9,2047
   8bd70:	42400926 	beq	r8,r9,8bd98 <__gedf2+0x5c>
   8bd74:	10000c1e 	bne	r2,zero,8bda8 <__gedf2+0x6c>
   8bd78:	5112b03a 	or	r9,r10,r4
   8bd7c:	4813003a 	cmpeq	r9,r9,zero
   8bd80:	4817883a 	mov	r11,r9
   8bd84:	40000a26 	beq	r8,zero,8bdb0 <__gedf2+0x74>
   8bd88:	48001626 	beq	r9,zero,8bde4 <__gedf2+0xa8>
   8bd8c:	38000d1e 	bne	r7,zero,8bdc4 <__gedf2+0x88>
   8bd90:	00bfffc4 	movi	r2,-1
   8bd94:	f800283a 	ret
   8bd98:	1992b03a 	or	r9,r3,r6
   8bd9c:	483ff526 	beq	r9,zero,8bd74 <__gedf2+0x38>
   8bda0:	00bfff84 	movi	r2,-2
   8bda4:	f800283a 	ret
   8bda8:	40000e1e 	bne	r8,zero,8bde4 <__gedf2+0xa8>
   8bdac:	0017883a 	mov	r11,zero
   8bdb0:	1992b03a 	or	r9,r3,r6
   8bdb4:	4813003a 	cmpeq	r9,r9,zero
   8bdb8:	5800041e 	bne	r11,zero,8bdcc <__gedf2+0x90>
   8bdbc:	48000926 	beq	r9,zero,8bde4 <__gedf2+0xa8>
   8bdc0:	283ff31e 	bne	r5,zero,8bd90 <__gedf2+0x54>
   8bdc4:	00800044 	movi	r2,1
   8bdc8:	f800283a 	ret
   8bdcc:	483fef26 	beq	r9,zero,8bd8c <__gedf2+0x50>
   8bdd0:	0005883a 	mov	r2,zero
   8bdd4:	f800283a 	ret
   8bdd8:	5112b03a 	or	r9,r10,r4
   8bddc:	483fe326 	beq	r9,zero,8bd6c <__gedf2+0x30>
   8bde0:	003fef06 	br	8bda0 <__gedf2+0x64>
   8bde4:	29fff61e 	bne	r5,r7,8bdc0 <__gedf2+0x84>
   8bde8:	40bff516 	blt	r8,r2,8bdc0 <__gedf2+0x84>
   8bdec:	12000316 	blt	r2,r8,8bdfc <__gedf2+0xc0>
   8bdf0:	1abff336 	bltu	r3,r10,8bdc0 <__gedf2+0x84>
   8bdf4:	50c00326 	beq	r10,r3,8be04 <__gedf2+0xc8>
   8bdf8:	50fff52e 	bgeu	r10,r3,8bdd0 <__gedf2+0x94>
   8bdfc:	283fe426 	beq	r5,zero,8bd90 <__gedf2+0x54>
   8be00:	003ff006 	br	8bdc4 <__gedf2+0x88>
   8be04:	313fee36 	bltu	r6,r4,8bdc0 <__gedf2+0x84>
   8be08:	21bff12e 	bgeu	r4,r6,8bdd0 <__gedf2+0x94>
   8be0c:	283fe026 	beq	r5,zero,8bd90 <__gedf2+0x54>
   8be10:	003fec06 	br	8bdc4 <__gedf2+0x88>

0008be14 <__ledf2>:
   8be14:	2806d53a 	srli	r3,r5,20
   8be18:	3810d53a 	srli	r8,r7,20
   8be1c:	00800434 	movhi	r2,16
   8be20:	10bfffc4 	addi	r2,r2,-1
   8be24:	18c1ffcc 	andi	r3,r3,2047
   8be28:	0241ffc4 	movi	r9,2047
   8be2c:	2894703a 	and	r10,r5,r2
   8be30:	4201ffcc 	andi	r8,r8,2047
   8be34:	3884703a 	and	r2,r7,r2
   8be38:	280ad7fa 	srli	r5,r5,31
   8be3c:	380ed7fa 	srli	r7,r7,31
   8be40:	1a402026 	beq	r3,r9,8bec4 <__ledf2+0xb0>
   8be44:	0241ffc4 	movi	r9,2047
   8be48:	42401726 	beq	r8,r9,8bea8 <__ledf2+0x94>
   8be4c:	18000b26 	beq	r3,zero,8be7c <__ledf2+0x68>
   8be50:	29403fcc 	andi	r5,r5,255
   8be54:	39c03fcc 	andi	r7,r7,255
   8be58:	40000f1e 	bne	r8,zero,8be98 <__ledf2+0x84>
   8be5c:	0017883a 	mov	r11,zero
   8be60:	1192b03a 	or	r9,r2,r6
   8be64:	4813003a 	cmpeq	r9,r9,zero
   8be68:	58001326 	beq	r11,zero,8beb8 <__ledf2+0xa4>
   8be6c:	48001e1e 	bne	r9,zero,8bee8 <__ledf2+0xd4>
   8be70:	38000b1e 	bne	r7,zero,8bea0 <__ledf2+0x8c>
   8be74:	00bfffc4 	movi	r2,-1
   8be78:	f800283a 	ret
   8be7c:	5112b03a 	or	r9,r10,r4
   8be80:	4813003a 	cmpeq	r9,r9,zero
   8be84:	4817883a 	mov	r11,r9
   8be88:	29403fcc 	andi	r5,r5,255
   8be8c:	39c03fcc 	andi	r7,r7,255
   8be90:	403ff326 	beq	r8,zero,8be60 <__ledf2+0x4c>
   8be94:	483ff61e 	bne	r9,zero,8be70 <__ledf2+0x5c>
   8be98:	29c00e26 	beq	r5,r7,8bed4 <__ledf2+0xc0>
   8be9c:	283ff51e 	bne	r5,zero,8be74 <__ledf2+0x60>
   8bea0:	00800044 	movi	r2,1
   8bea4:	f800283a 	ret
   8bea8:	1192b03a 	or	r9,r2,r6
   8beac:	483fe726 	beq	r9,zero,8be4c <__ledf2+0x38>
   8beb0:	00800084 	movi	r2,2
   8beb4:	f800283a 	ret
   8beb8:	483ff726 	beq	r9,zero,8be98 <__ledf2+0x84>
   8bebc:	283ff826 	beq	r5,zero,8bea0 <__ledf2+0x8c>
   8bec0:	003fec06 	br	8be74 <__ledf2+0x60>
   8bec4:	5112b03a 	or	r9,r10,r4
   8bec8:	483fde26 	beq	r9,zero,8be44 <__ledf2+0x30>
   8becc:	00800084 	movi	r2,2
   8bed0:	f800283a 	ret
   8bed4:	40fff116 	blt	r8,r3,8be9c <__ledf2+0x88>
   8bed8:	1a000716 	blt	r3,r8,8bef8 <__ledf2+0xe4>
   8bedc:	12bfef36 	bltu	r2,r10,8be9c <__ledf2+0x88>
   8bee0:	50800326 	beq	r10,r2,8bef0 <__ledf2+0xdc>
   8bee4:	50800436 	bltu	r10,r2,8bef8 <__ledf2+0xe4>
   8bee8:	0005883a 	mov	r2,zero
   8beec:	f800283a 	ret
   8bef0:	313fea36 	bltu	r6,r4,8be9c <__ledf2+0x88>
   8bef4:	21bffc2e 	bgeu	r4,r6,8bee8 <__ledf2+0xd4>
   8bef8:	283fde26 	beq	r5,zero,8be74 <__ledf2+0x60>
   8befc:	003fe806 	br	8bea0 <__ledf2+0x8c>

0008bf00 <__muldf3>:
   8bf00:	deffee04 	addi	sp,sp,-72
   8bf04:	dc400915 	stw	r17,36(sp)
   8bf08:	2822d53a 	srli	r17,r5,20
   8bf0c:	dc000815 	stw	r16,32(sp)
   8bf10:	2820d7fa 	srli	r16,r5,31
   8bf14:	df001015 	stw	fp,64(sp)
   8bf18:	dd000c15 	stw	r20,48(sp)
   8bf1c:	dcc00b15 	stw	r19,44(sp)
   8bf20:	dfc01115 	stw	ra,68(sp)
   8bf24:	04c00434 	movhi	r19,16
   8bf28:	9cffffc4 	addi	r19,r19,-1
   8bf2c:	ddc00f15 	stw	r23,60(sp)
   8bf30:	dd800e15 	stw	r22,56(sp)
   8bf34:	dd400d15 	stw	r21,52(sp)
   8bf38:	dc800a15 	stw	r18,40(sp)
   8bf3c:	8c41ffcc 	andi	r17,r17,2047
   8bf40:	2029883a 	mov	r20,r4
   8bf44:	2ce6703a 	and	r19,r5,r19
   8bf48:	8039883a 	mov	fp,r16
   8bf4c:	82003fcc 	andi	r8,r16,255
   8bf50:	88005d26 	beq	r17,zero,8c0c8 <__muldf3+0x1c8>
   8bf54:	0081ffc4 	movi	r2,2047
   8bf58:	202f883a 	mov	r23,r4
   8bf5c:	88803326 	beq	r17,r2,8c02c <__muldf3+0x12c>
   8bf60:	98800434 	orhi	r2,r19,16
   8bf64:	100490fa 	slli	r2,r2,3
   8bf68:	2026d77a 	srli	r19,r4,29
   8bf6c:	202e90fa 	slli	r23,r4,3
   8bf70:	8c7f0044 	addi	r17,r17,-1023
   8bf74:	14e6b03a 	or	r19,r2,r19
   8bf78:	002d883a 	mov	r22,zero
   8bf7c:	000b883a 	mov	r5,zero
   8bf80:	3804d53a 	srli	r2,r7,20
   8bf84:	3828d7fa 	srli	r20,r7,31
   8bf88:	04800434 	movhi	r18,16
   8bf8c:	94bfffc4 	addi	r18,r18,-1
   8bf90:	1081ffcc 	andi	r2,r2,2047
   8bf94:	302b883a 	mov	r21,r6
   8bf98:	3ca4703a 	and	r18,r7,r18
   8bf9c:	a2403fcc 	andi	r9,r20,255
   8bfa0:	10006826 	beq	r2,zero,8c144 <__muldf3+0x244>
   8bfa4:	00c1ffc4 	movi	r3,2047
   8bfa8:	10c06026 	beq	r2,r3,8c12c <__muldf3+0x22c>
   8bfac:	90c00434 	orhi	r3,r18,16
   8bfb0:	180690fa 	slli	r3,r3,3
   8bfb4:	3024d77a 	srli	r18,r6,29
   8bfb8:	302a90fa 	slli	r21,r6,3
   8bfbc:	10bf0044 	addi	r2,r2,-1023
   8bfc0:	1ca4b03a 	or	r18,r3,r18
   8bfc4:	0007883a 	mov	r3,zero
   8bfc8:	1d88b03a 	or	r4,r3,r22
   8bfcc:	2109883a 	add	r4,r4,r4
   8bfd0:	2109883a 	add	r4,r4,r4
   8bfd4:	01800274 	movhi	r6,9
   8bfd8:	31affb04 	addi	r6,r6,-16404
   8bfdc:	2189883a 	add	r4,r4,r6
   8bfe0:	21000017 	ldw	r4,0(r4)
   8bfe4:	852cf03a 	xor	r22,r16,r20
   8bfe8:	2000683a 	jmp	r4
   8bfec:	0008c234 	movhi	zero,8968
   8bff0:	0008c224 	muli	zero,zero,8968
   8bff4:	0008c224 	muli	zero,zero,8968
   8bff8:	0008c210 	cmplti	zero,zero,8968
   8bffc:	0008c04c 	andi	zero,zero,8961
   8c000:	0008c04c 	andi	zero,zero,8961
   8c004:	0008c1f8 	rdprs	zero,zero,8967
   8c008:	0008c210 	cmplti	zero,zero,8968
   8c00c:	0008c04c 	andi	zero,zero,8961
   8c010:	0008c1f8 	rdprs	zero,zero,8967
   8c014:	0008c04c 	andi	zero,zero,8961
   8c018:	0008c210 	cmplti	zero,zero,8968
   8c01c:	0008c048 	cmpgei	zero,zero,8961
   8c020:	0008c048 	cmpgei	zero,zero,8961
   8c024:	0008c048 	cmpgei	zero,zero,8961
   8c028:	0008c54c 	andi	zero,zero,8981
   8c02c:	9904b03a 	or	r2,r19,r4
   8c030:	10006e1e 	bne	r2,zero,8c1ec <__muldf3+0x2ec>
   8c034:	05800204 	movi	r22,8
   8c038:	0027883a 	mov	r19,zero
   8c03c:	002f883a 	mov	r23,zero
   8c040:	01400084 	movi	r5,2
   8c044:	003fce06 	br	8bf80 <__muldf3+0x80>
   8c048:	402d883a 	mov	r22,r8
   8c04c:	00800084 	movi	r2,2
   8c050:	28805626 	beq	r5,r2,8c1ac <__muldf3+0x2ac>
   8c054:	008000c4 	movi	r2,3
   8c058:	2881a226 	beq	r5,r2,8c6e4 <__muldf3+0x7e4>
   8c05c:	00800044 	movi	r2,1
   8c060:	28811d1e 	bne	r5,r2,8c4d8 <__muldf3+0x5d8>
   8c064:	b039883a 	mov	fp,r22
   8c068:	0005883a 	mov	r2,zero
   8c06c:	0027883a 	mov	r19,zero
   8c070:	002f883a 	mov	r23,zero
   8c074:	1004953a 	slli	r2,r2,20
   8c078:	e7003fcc 	andi	fp,fp,255
   8c07c:	e03897fa 	slli	fp,fp,31
   8c080:	00c00434 	movhi	r3,16
   8c084:	18ffffc4 	addi	r3,r3,-1
   8c088:	98e6703a 	and	r19,r19,r3
   8c08c:	9886b03a 	or	r3,r19,r2
   8c090:	1f06b03a 	or	r3,r3,fp
   8c094:	b805883a 	mov	r2,r23
   8c098:	dfc01117 	ldw	ra,68(sp)
   8c09c:	df001017 	ldw	fp,64(sp)
   8c0a0:	ddc00f17 	ldw	r23,60(sp)
   8c0a4:	dd800e17 	ldw	r22,56(sp)
   8c0a8:	dd400d17 	ldw	r21,52(sp)
   8c0ac:	dd000c17 	ldw	r20,48(sp)
   8c0b0:	dcc00b17 	ldw	r19,44(sp)
   8c0b4:	dc800a17 	ldw	r18,40(sp)
   8c0b8:	dc400917 	ldw	r17,36(sp)
   8c0bc:	dc000817 	ldw	r16,32(sp)
   8c0c0:	dec01204 	addi	sp,sp,72
   8c0c4:	f800283a 	ret
   8c0c8:	9904b03a 	or	r2,r19,r4
   8c0cc:	10004226 	beq	r2,zero,8c1d8 <__muldf3+0x2d8>
   8c0d0:	98013426 	beq	r19,zero,8c5a4 <__muldf3+0x6a4>
   8c0d4:	9809883a 	mov	r4,r19
   8c0d8:	d9800515 	stw	r6,20(sp)
   8c0dc:	d9c00415 	stw	r7,16(sp)
   8c0e0:	da000615 	stw	r8,24(sp)
   8c0e4:	008d1780 	call	8d178 <__clzsi2>
   8c0e8:	d9800517 	ldw	r6,20(sp)
   8c0ec:	d9c00417 	ldw	r7,16(sp)
   8c0f0:	da000617 	ldw	r8,24(sp)
   8c0f4:	00c009c4 	movi	r3,39
   8c0f8:	18812616 	blt	r3,r2,8c594 <__muldf3+0x694>
   8c0fc:	00c00a04 	movi	r3,40
   8c100:	15fffe04 	addi	r23,r2,-8
   8c104:	1887c83a 	sub	r3,r3,r2
   8c108:	9de6983a 	sll	r19,r19,r23
   8c10c:	a0c6d83a 	srl	r3,r20,r3
   8c110:	a5ee983a 	sll	r23,r20,r23
   8c114:	1ce6b03a 	or	r19,r3,r19
   8c118:	047f0344 	movi	r17,-1011
   8c11c:	88a3c83a 	sub	r17,r17,r2
   8c120:	002d883a 	mov	r22,zero
   8c124:	000b883a 	mov	r5,zero
   8c128:	003f9506 	br	8bf80 <__muldf3+0x80>
   8c12c:	9186b03a 	or	r3,r18,r6
   8c130:	1800271e 	bne	r3,zero,8c1d0 <__muldf3+0x2d0>
   8c134:	0025883a 	mov	r18,zero
   8c138:	002b883a 	mov	r21,zero
   8c13c:	00c00084 	movi	r3,2
   8c140:	003fa106 	br	8bfc8 <__muldf3+0xc8>
   8c144:	9186b03a 	or	r3,r18,r6
   8c148:	18001d26 	beq	r3,zero,8c1c0 <__muldf3+0x2c0>
   8c14c:	90012226 	beq	r18,zero,8c5d8 <__muldf3+0x6d8>
   8c150:	9009883a 	mov	r4,r18
   8c154:	d9400415 	stw	r5,16(sp)
   8c158:	d9800515 	stw	r6,20(sp)
   8c15c:	da000615 	stw	r8,24(sp)
   8c160:	da400715 	stw	r9,28(sp)
   8c164:	008d1780 	call	8d178 <__clzsi2>
   8c168:	d9400417 	ldw	r5,16(sp)
   8c16c:	d9800517 	ldw	r6,20(sp)
   8c170:	da000617 	ldw	r8,24(sp)
   8c174:	da400717 	ldw	r9,28(sp)
   8c178:	00c009c4 	movi	r3,39
   8c17c:	18811216 	blt	r3,r2,8c5c8 <__muldf3+0x6c8>
   8c180:	01c00a04 	movi	r7,40
   8c184:	157ffe04 	addi	r21,r2,-8
   8c188:	388fc83a 	sub	r7,r7,r2
   8c18c:	9564983a 	sll	r18,r18,r21
   8c190:	31ced83a 	srl	r7,r6,r7
   8c194:	356a983a 	sll	r21,r6,r21
   8c198:	3ca4b03a 	or	r18,r7,r18
   8c19c:	00ff0344 	movi	r3,-1011
   8c1a0:	1885c83a 	sub	r2,r3,r2
   8c1a4:	0007883a 	mov	r3,zero
   8c1a8:	003f8706 	br	8bfc8 <__muldf3+0xc8>
   8c1ac:	b039883a 	mov	fp,r22
   8c1b0:	0081ffc4 	movi	r2,2047
   8c1b4:	0027883a 	mov	r19,zero
   8c1b8:	002f883a 	mov	r23,zero
   8c1bc:	003fad06 	br	8c074 <__muldf3+0x174>
   8c1c0:	0025883a 	mov	r18,zero
   8c1c4:	002b883a 	mov	r21,zero
   8c1c8:	00c00044 	movi	r3,1
   8c1cc:	003f7e06 	br	8bfc8 <__muldf3+0xc8>
   8c1d0:	00c000c4 	movi	r3,3
   8c1d4:	003f7c06 	br	8bfc8 <__muldf3+0xc8>
   8c1d8:	05800104 	movi	r22,4
   8c1dc:	0027883a 	mov	r19,zero
   8c1e0:	002f883a 	mov	r23,zero
   8c1e4:	01400044 	movi	r5,1
   8c1e8:	003f6506 	br	8bf80 <__muldf3+0x80>
   8c1ec:	05800304 	movi	r22,12
   8c1f0:	014000c4 	movi	r5,3
   8c1f4:	003f6206 	br	8bf80 <__muldf3+0x80>
   8c1f8:	0039883a 	mov	fp,zero
   8c1fc:	04c00434 	movhi	r19,16
   8c200:	9cffffc4 	addi	r19,r19,-1
   8c204:	05ffffc4 	movi	r23,-1
   8c208:	0081ffc4 	movi	r2,2047
   8c20c:	003f9906 	br	8c074 <__muldf3+0x174>
   8c210:	9027883a 	mov	r19,r18
   8c214:	a82f883a 	mov	r23,r21
   8c218:	482d883a 	mov	r22,r9
   8c21c:	180b883a 	mov	r5,r3
   8c220:	003f8a06 	br	8c04c <__muldf3+0x14c>
   8c224:	9027883a 	mov	r19,r18
   8c228:	a82f883a 	mov	r23,r21
   8c22c:	180b883a 	mov	r5,r3
   8c230:	003f8606 	br	8c04c <__muldf3+0x14c>
   8c234:	a828d43a 	srli	r20,r21,16
   8c238:	b820d43a 	srli	r16,r23,16
   8c23c:	ad7fffcc 	andi	r21,r21,65535
   8c240:	bdffffcc 	andi	r23,r23,65535
   8c244:	8885883a 	add	r2,r17,r2
   8c248:	a809883a 	mov	r4,r21
   8c24c:	b80b883a 	mov	r5,r23
   8c250:	d8800015 	stw	r2,0(sp)
   8c254:	008aa780 	call	8aa78 <__mulsi3>
   8c258:	a009883a 	mov	r4,r20
   8c25c:	b80b883a 	mov	r5,r23
   8c260:	d8800415 	stw	r2,16(sp)
   8c264:	008aa780 	call	8aa78 <__mulsi3>
   8c268:	a809883a 	mov	r4,r21
   8c26c:	800b883a 	mov	r5,r16
   8c270:	d8800615 	stw	r2,24(sp)
   8c274:	008aa780 	call	8aa78 <__mulsi3>
   8c278:	a009883a 	mov	r4,r20
   8c27c:	800b883a 	mov	r5,r16
   8c280:	1023883a 	mov	r17,r2
   8c284:	008aa780 	call	8aa78 <__mulsi3>
   8c288:	d9c00417 	ldw	r7,16(sp)
   8c28c:	da000617 	ldw	r8,24(sp)
   8c290:	1039883a 	mov	fp,r2
   8c294:	3804d43a 	srli	r2,r7,16
   8c298:	8a07883a 	add	r3,r17,r8
   8c29c:	1887883a 	add	r3,r3,r2
   8c2a0:	1c40022e 	bgeu	r3,r17,8c2ac <__muldf3+0x3ac>
   8c2a4:	00800074 	movhi	r2,1
   8c2a8:	e0b9883a 	add	fp,fp,r2
   8c2ac:	1804943a 	slli	r2,r3,16
   8c2b0:	1806d43a 	srli	r3,r3,16
   8c2b4:	9022d43a 	srli	r17,r18,16
   8c2b8:	39ffffcc 	andi	r7,r7,65535
   8c2bc:	94bfffcc 	andi	r18,r18,65535
   8c2c0:	11cf883a 	add	r7,r2,r7
   8c2c4:	b80b883a 	mov	r5,r23
   8c2c8:	9009883a 	mov	r4,r18
   8c2cc:	d8c00215 	stw	r3,8(sp)
   8c2d0:	d9c00315 	stw	r7,12(sp)
   8c2d4:	008aa780 	call	8aa78 <__mulsi3>
   8c2d8:	b80b883a 	mov	r5,r23
   8c2dc:	8809883a 	mov	r4,r17
   8c2e0:	d8800415 	stw	r2,16(sp)
   8c2e4:	008aa780 	call	8aa78 <__mulsi3>
   8c2e8:	9009883a 	mov	r4,r18
   8c2ec:	800b883a 	mov	r5,r16
   8c2f0:	d8800715 	stw	r2,28(sp)
   8c2f4:	008aa780 	call	8aa78 <__mulsi3>
   8c2f8:	8809883a 	mov	r4,r17
   8c2fc:	800b883a 	mov	r5,r16
   8c300:	102f883a 	mov	r23,r2
   8c304:	008aa780 	call	8aa78 <__mulsi3>
   8c308:	d9c00417 	ldw	r7,16(sp)
   8c30c:	da400717 	ldw	r9,28(sp)
   8c310:	1011883a 	mov	r8,r2
   8c314:	3804d43a 	srli	r2,r7,16
   8c318:	ba47883a 	add	r3,r23,r9
   8c31c:	1887883a 	add	r3,r3,r2
   8c320:	1dc0022e 	bgeu	r3,r23,8c32c <__muldf3+0x42c>
   8c324:	00800074 	movhi	r2,1
   8c328:	4091883a 	add	r8,r8,r2
   8c32c:	1804d43a 	srli	r2,r3,16
   8c330:	182e943a 	slli	r23,r3,16
   8c334:	9820d43a 	srli	r16,r19,16
   8c338:	9cffffcc 	andi	r19,r19,65535
   8c33c:	39ffffcc 	andi	r7,r7,65535
   8c340:	4085883a 	add	r2,r8,r2
   8c344:	a809883a 	mov	r4,r21
   8c348:	980b883a 	mov	r5,r19
   8c34c:	b9ef883a 	add	r23,r23,r7
   8c350:	d8800115 	stw	r2,4(sp)
   8c354:	008aa780 	call	8aa78 <__mulsi3>
   8c358:	a009883a 	mov	r4,r20
   8c35c:	980b883a 	mov	r5,r19
   8c360:	d8800415 	stw	r2,16(sp)
   8c364:	008aa780 	call	8aa78 <__mulsi3>
   8c368:	a809883a 	mov	r4,r21
   8c36c:	800b883a 	mov	r5,r16
   8c370:	d8800715 	stw	r2,28(sp)
   8c374:	008aa780 	call	8aa78 <__mulsi3>
   8c378:	a009883a 	mov	r4,r20
   8c37c:	800b883a 	mov	r5,r16
   8c380:	102b883a 	mov	r21,r2
   8c384:	008aa780 	call	8aa78 <__mulsi3>
   8c388:	d9c00417 	ldw	r7,16(sp)
   8c38c:	da400717 	ldw	r9,28(sp)
   8c390:	1011883a 	mov	r8,r2
   8c394:	3804d43a 	srli	r2,r7,16
   8c398:	aa47883a 	add	r3,r21,r9
   8c39c:	1887883a 	add	r3,r3,r2
   8c3a0:	1d40022e 	bgeu	r3,r21,8c3ac <__muldf3+0x4ac>
   8c3a4:	00800074 	movhi	r2,1
   8c3a8:	4091883a 	add	r8,r8,r2
   8c3ac:	1828d43a 	srli	r20,r3,16
   8c3b0:	1806943a 	slli	r3,r3,16
   8c3b4:	39ffffcc 	andi	r7,r7,65535
   8c3b8:	9009883a 	mov	r4,r18
   8c3bc:	980b883a 	mov	r5,r19
   8c3c0:	19eb883a 	add	r21,r3,r7
   8c3c4:	4529883a 	add	r20,r8,r20
   8c3c8:	008aa780 	call	8aa78 <__mulsi3>
   8c3cc:	980b883a 	mov	r5,r19
   8c3d0:	8809883a 	mov	r4,r17
   8c3d4:	d8800415 	stw	r2,16(sp)
   8c3d8:	008aa780 	call	8aa78 <__mulsi3>
   8c3dc:	9009883a 	mov	r4,r18
   8c3e0:	800b883a 	mov	r5,r16
   8c3e4:	1027883a 	mov	r19,r2
   8c3e8:	008aa780 	call	8aa78 <__mulsi3>
   8c3ec:	8809883a 	mov	r4,r17
   8c3f0:	800b883a 	mov	r5,r16
   8c3f4:	1025883a 	mov	r18,r2
   8c3f8:	008aa780 	call	8aa78 <__mulsi3>
   8c3fc:	d9c00417 	ldw	r7,16(sp)
   8c400:	1011883a 	mov	r8,r2
   8c404:	94c7883a 	add	r3,r18,r19
   8c408:	3804d43a 	srli	r2,r7,16
   8c40c:	1887883a 	add	r3,r3,r2
   8c410:	1c80022e 	bgeu	r3,r18,8c41c <__muldf3+0x51c>
   8c414:	00800074 	movhi	r2,1
   8c418:	4091883a 	add	r8,r8,r2
   8c41c:	1804943a 	slli	r2,r3,16
   8c420:	d9400217 	ldw	r5,8(sp)
   8c424:	39ffffcc 	andi	r7,r7,65535
   8c428:	11cf883a 	add	r7,r2,r7
   8c42c:	d8800117 	ldw	r2,4(sp)
   8c430:	b949883a 	add	r4,r23,r5
   8c434:	2739883a 	add	fp,r4,fp
   8c438:	e5ef803a 	cmpltu	r23,fp,r23
   8c43c:	388f883a 	add	r7,r7,r2
   8c440:	3dcb883a 	add	r5,r7,r23
   8c444:	a149883a 	add	r4,r20,r5
   8c448:	2def803a 	cmpltu	r23,r5,r23
   8c44c:	d9400117 	ldw	r5,4(sp)
   8c450:	e579883a 	add	fp,fp,r21
   8c454:	e56b803a 	cmpltu	r21,fp,r21
   8c458:	1804d43a 	srli	r2,r3,16
   8c45c:	394f803a 	cmpltu	r7,r7,r5
   8c460:	2547883a 	add	r3,r4,r21
   8c464:	b9e6b03a 	or	r19,r23,r7
   8c468:	1d6b803a 	cmpltu	r21,r3,r21
   8c46c:	2529803a 	cmpltu	r20,r4,r20
   8c470:	98a7883a 	add	r19,r19,r2
   8c474:	ad2ab03a 	or	r21,r21,r20
   8c478:	9d67883a 	add	r19,r19,r21
   8c47c:	e02e927a 	slli	r23,fp,9
   8c480:	9a27883a 	add	r19,r19,r8
   8c484:	d9000317 	ldw	r4,12(sp)
   8c488:	1804d5fa 	srli	r2,r3,23
   8c48c:	9826927a 	slli	r19,r19,9
   8c490:	e038d5fa 	srli	fp,fp,23
   8c494:	b92eb03a 	or	r23,r23,r4
   8c498:	1806927a 	slli	r3,r3,9
   8c49c:	98a6b03a 	or	r19,r19,r2
   8c4a0:	b82ec03a 	cmpne	r23,r23,zero
   8c4a4:	bf2eb03a 	or	r23,r23,fp
   8c4a8:	9880402c 	andhi	r2,r19,256
   8c4ac:	b8eeb03a 	or	r23,r23,r3
   8c4b0:	10000926 	beq	r2,zero,8c4d8 <__muldf3+0x5d8>
   8c4b4:	b806d07a 	srli	r3,r23,1
   8c4b8:	bdc0004c 	andi	r23,r23,1
   8c4bc:	980497fa 	slli	r2,r19,31
   8c4c0:	b8eeb03a 	or	r23,r23,r3
   8c4c4:	d8c00017 	ldw	r3,0(sp)
   8c4c8:	9826d07a 	srli	r19,r19,1
   8c4cc:	b8aeb03a 	or	r23,r23,r2
   8c4d0:	18c00044 	addi	r3,r3,1
   8c4d4:	d8c00015 	stw	r3,0(sp)
   8c4d8:	d8c00017 	ldw	r3,0(sp)
   8c4dc:	1880ffc4 	addi	r2,r3,1023
   8c4e0:	0080490e 	bge	zero,r2,8c608 <__muldf3+0x708>
   8c4e4:	b8c001cc 	andi	r3,r23,7
   8c4e8:	18000726 	beq	r3,zero,8c508 <__muldf3+0x608>
   8c4ec:	b90003cc 	andi	r4,r23,15
   8c4f0:	00c00104 	movi	r3,4
   8c4f4:	20c00426 	beq	r4,r3,8c508 <__muldf3+0x608>
   8c4f8:	b8c7883a 	add	r3,r23,r3
   8c4fc:	1def803a 	cmpltu	r23,r3,r23
   8c500:	9de7883a 	add	r19,r19,r23
   8c504:	182f883a 	mov	r23,r3
   8c508:	98c0402c 	andhi	r3,r19,256
   8c50c:	18000526 	beq	r3,zero,8c524 <__muldf3+0x624>
   8c510:	d8c00017 	ldw	r3,0(sp)
   8c514:	00bfc034 	movhi	r2,65280
   8c518:	10bfffc4 	addi	r2,r2,-1
   8c51c:	98a6703a 	and	r19,r19,r2
   8c520:	18810004 	addi	r2,r3,1024
   8c524:	00c1ff84 	movi	r3,2046
   8c528:	18bf2016 	blt	r3,r2,8c1ac <__muldf3+0x2ac>
   8c52c:	9806977a 	slli	r3,r19,29
   8c530:	b82ed0fa 	srli	r23,r23,3
   8c534:	9826927a 	slli	r19,r19,9
   8c538:	1081ffcc 	andi	r2,r2,2047
   8c53c:	1deeb03a 	or	r23,r3,r23
   8c540:	9826d33a 	srli	r19,r19,12
   8c544:	b039883a 	mov	fp,r22
   8c548:	003eca06 	br	8c074 <__muldf3+0x174>
   8c54c:	9880022c 	andhi	r2,r19,8
   8c550:	10000a26 	beq	r2,zero,8c57c <__muldf3+0x67c>
   8c554:	9080022c 	andhi	r2,r18,8
   8c558:	1000081e 	bne	r2,zero,8c57c <__muldf3+0x67c>
   8c55c:	00800434 	movhi	r2,16
   8c560:	10bfffc4 	addi	r2,r2,-1
   8c564:	94c00234 	orhi	r19,r18,8
   8c568:	98a6703a 	and	r19,r19,r2
   8c56c:	a039883a 	mov	fp,r20
   8c570:	a82f883a 	mov	r23,r21
   8c574:	0081ffc4 	movi	r2,2047
   8c578:	003ebe06 	br	8c074 <__muldf3+0x174>
   8c57c:	00800434 	movhi	r2,16
   8c580:	10bfffc4 	addi	r2,r2,-1
   8c584:	9cc00234 	orhi	r19,r19,8
   8c588:	98a6703a 	and	r19,r19,r2
   8c58c:	0081ffc4 	movi	r2,2047
   8c590:	003eb806 	br	8c074 <__muldf3+0x174>
   8c594:	14fff604 	addi	r19,r2,-40
   8c598:	a4e6983a 	sll	r19,r20,r19
   8c59c:	002f883a 	mov	r23,zero
   8c5a0:	003edd06 	br	8c118 <__muldf3+0x218>
   8c5a4:	d9800515 	stw	r6,20(sp)
   8c5a8:	d9c00415 	stw	r7,16(sp)
   8c5ac:	da000615 	stw	r8,24(sp)
   8c5b0:	008d1780 	call	8d178 <__clzsi2>
   8c5b4:	10800804 	addi	r2,r2,32
   8c5b8:	da000617 	ldw	r8,24(sp)
   8c5bc:	d9c00417 	ldw	r7,16(sp)
   8c5c0:	d9800517 	ldw	r6,20(sp)
   8c5c4:	003ecb06 	br	8c0f4 <__muldf3+0x1f4>
   8c5c8:	14bff604 	addi	r18,r2,-40
   8c5cc:	34a4983a 	sll	r18,r6,r18
   8c5d0:	002b883a 	mov	r21,zero
   8c5d4:	003ef106 	br	8c19c <__muldf3+0x29c>
   8c5d8:	3009883a 	mov	r4,r6
   8c5dc:	d9400415 	stw	r5,16(sp)
   8c5e0:	d9800515 	stw	r6,20(sp)
   8c5e4:	da000615 	stw	r8,24(sp)
   8c5e8:	da400715 	stw	r9,28(sp)
   8c5ec:	008d1780 	call	8d178 <__clzsi2>
   8c5f0:	10800804 	addi	r2,r2,32
   8c5f4:	da400717 	ldw	r9,28(sp)
   8c5f8:	da000617 	ldw	r8,24(sp)
   8c5fc:	d9800517 	ldw	r6,20(sp)
   8c600:	d9400417 	ldw	r5,16(sp)
   8c604:	003edc06 	br	8c178 <__muldf3+0x278>
   8c608:	d8c00017 	ldw	r3,0(sp)
   8c60c:	00bf0084 	movi	r2,-1022
   8c610:	10c5c83a 	sub	r2,r2,r3
   8c614:	00c00e04 	movi	r3,56
   8c618:	18be9216 	blt	r3,r2,8c064 <__muldf3+0x164>
   8c61c:	00c007c4 	movi	r3,31
   8c620:	18801916 	blt	r3,r2,8c688 <__muldf3+0x788>
   8c624:	d9000017 	ldw	r4,0(sp)
   8c628:	b88ad83a 	srl	r5,r23,r2
   8c62c:	9884d83a 	srl	r2,r19,r2
   8c630:	20c10784 	addi	r3,r4,1054
   8c634:	98c8983a 	sll	r4,r19,r3
   8c638:	b8c6983a 	sll	r3,r23,r3
   8c63c:	2908b03a 	or	r4,r5,r4
   8c640:	1806c03a 	cmpne	r3,r3,zero
   8c644:	20c6b03a 	or	r3,r4,r3
   8c648:	190001cc 	andi	r4,r3,7
   8c64c:	20000726 	beq	r4,zero,8c66c <__muldf3+0x76c>
   8c650:	194003cc 	andi	r5,r3,15
   8c654:	01000104 	movi	r4,4
   8c658:	29000426 	beq	r5,r4,8c66c <__muldf3+0x76c>
   8c65c:	1909883a 	add	r4,r3,r4
   8c660:	20c7803a 	cmpltu	r3,r4,r3
   8c664:	10c5883a 	add	r2,r2,r3
   8c668:	2007883a 	mov	r3,r4
   8c66c:	1100202c 	andhi	r4,r2,128
   8c670:	20001226 	beq	r4,zero,8c6bc <__muldf3+0x7bc>
   8c674:	b039883a 	mov	fp,r22
   8c678:	00800044 	movi	r2,1
   8c67c:	0027883a 	mov	r19,zero
   8c680:	002f883a 	mov	r23,zero
   8c684:	003e7b06 	br	8c074 <__muldf3+0x174>
   8c688:	d9400017 	ldw	r5,0(sp)
   8c68c:	00fef884 	movi	r3,-1054
   8c690:	01000804 	movi	r4,32
   8c694:	1947c83a 	sub	r3,r3,r5
   8c698:	98c6d83a 	srl	r3,r19,r3
   8c69c:	11000f26 	beq	r2,r4,8c6dc <__muldf3+0x7dc>
   8c6a0:	28810f84 	addi	r2,r5,1086
   8c6a4:	9884983a 	sll	r2,r19,r2
   8c6a8:	15c4b03a 	or	r2,r2,r23
   8c6ac:	1004c03a 	cmpne	r2,r2,zero
   8c6b0:	10c6b03a 	or	r3,r2,r3
   8c6b4:	0005883a 	mov	r2,zero
   8c6b8:	003fe306 	br	8c648 <__muldf3+0x748>
   8c6bc:	102e977a 	slli	r23,r2,29
   8c6c0:	1806d0fa 	srli	r3,r3,3
   8c6c4:	1004927a 	slli	r2,r2,9
   8c6c8:	b039883a 	mov	fp,r22
   8c6cc:	b8eeb03a 	or	r23,r23,r3
   8c6d0:	1026d33a 	srli	r19,r2,12
   8c6d4:	0005883a 	mov	r2,zero
   8c6d8:	003e6606 	br	8c074 <__muldf3+0x174>
   8c6dc:	0005883a 	mov	r2,zero
   8c6e0:	003ff106 	br	8c6a8 <__muldf3+0x7a8>
   8c6e4:	00800434 	movhi	r2,16
   8c6e8:	10bfffc4 	addi	r2,r2,-1
   8c6ec:	9cc00234 	orhi	r19,r19,8
   8c6f0:	98a6703a 	and	r19,r19,r2
   8c6f4:	b039883a 	mov	fp,r22
   8c6f8:	0081ffc4 	movi	r2,2047
   8c6fc:	003e5d06 	br	8c074 <__muldf3+0x174>

0008c700 <__subdf3>:
   8c700:	02000434 	movhi	r8,16
   8c704:	423fffc4 	addi	r8,r8,-1
   8c708:	defffb04 	addi	sp,sp,-20
   8c70c:	2a06703a 	and	r3,r5,r8
   8c710:	3a10703a 	and	r8,r7,r8
   8c714:	3804d53a 	srli	r2,r7,20
   8c718:	dc800215 	stw	r18,8(sp)
   8c71c:	dc400115 	stw	r17,4(sp)
   8c720:	2824d7fa 	srli	r18,r5,31
   8c724:	2822d53a 	srli	r17,r5,20
   8c728:	401090fa 	slli	r8,r8,3
   8c72c:	180a90fa 	slli	r5,r3,3
   8c730:	3006d77a 	srli	r3,r6,29
   8c734:	2014d77a 	srli	r10,r4,29
   8c738:	dc000015 	stw	r16,0(sp)
   8c73c:	40d0b03a 	or	r8,r8,r3
   8c740:	dfc00415 	stw	ra,16(sp)
   8c744:	dcc00315 	stw	r19,12(sp)
   8c748:	1081ffcc 	andi	r2,r2,2047
   8c74c:	00c1ffc4 	movi	r3,2047
   8c750:	9013883a 	mov	r9,r18
   8c754:	8c41ffcc 	andi	r17,r17,2047
   8c758:	94803fcc 	andi	r18,r18,255
   8c75c:	2a8ab03a 	or	r5,r5,r10
   8c760:	202090fa 	slli	r16,r4,3
   8c764:	380ed7fa 	srli	r7,r7,31
   8c768:	300c90fa 	slli	r6,r6,3
   8c76c:	10c02e26 	beq	r2,r3,8c828 <__subdf3+0x128>
   8c770:	39c0005c 	xori	r7,r7,1
   8c774:	8887c83a 	sub	r3,r17,r2
   8c778:	91c03026 	beq	r18,r7,8c83c <__subdf3+0x13c>
   8c77c:	00c0a40e 	bge	zero,r3,8ca10 <__subdf3+0x310>
   8c780:	10004c1e 	bne	r2,zero,8c8b4 <__subdf3+0x1b4>
   8c784:	4184b03a 	or	r2,r8,r6
   8c788:	10008f1e 	bne	r2,zero,8c9c8 <__subdf3+0x2c8>
   8c78c:	808001cc 	andi	r2,r16,7
   8c790:	10007d26 	beq	r2,zero,8c988 <__subdf3+0x288>
   8c794:	80c003cc 	andi	r3,r16,15
   8c798:	00800104 	movi	r2,4
   8c79c:	18807a26 	beq	r3,r2,8c988 <__subdf3+0x288>
   8c7a0:	80c00104 	addi	r3,r16,4
   8c7a4:	1c21803a 	cmpltu	r16,r3,r16
   8c7a8:	2c0b883a 	add	r5,r5,r16
   8c7ac:	2880202c 	andhi	r2,r5,128
   8c7b0:	9240004c 	andi	r9,r18,1
   8c7b4:	1821883a 	mov	r16,r3
   8c7b8:	10007626 	beq	r2,zero,8c994 <__subdf3+0x294>
   8c7bc:	8c400044 	addi	r17,r17,1
   8c7c0:	0081ffc4 	movi	r2,2047
   8c7c4:	8880b226 	beq	r17,r2,8ca90 <__subdf3+0x390>
   8c7c8:	00bfe034 	movhi	r2,65408
   8c7cc:	10bfffc4 	addi	r2,r2,-1
   8c7d0:	288a703a 	and	r5,r5,r2
   8c7d4:	2804977a 	slli	r2,r5,29
   8c7d8:	280a927a 	slli	r5,r5,9
   8c7dc:	8020d0fa 	srli	r16,r16,3
   8c7e0:	280ad33a 	srli	r5,r5,12
   8c7e4:	1404b03a 	or	r2,r2,r16
   8c7e8:	8c41ffcc 	andi	r17,r17,2047
   8c7ec:	8822953a 	slli	r17,r17,20
   8c7f0:	4a403fcc 	andi	r9,r9,255
   8c7f4:	481297fa 	slli	r9,r9,31
   8c7f8:	00c00434 	movhi	r3,16
   8c7fc:	18ffffc4 	addi	r3,r3,-1
   8c800:	28c6703a 	and	r3,r5,r3
   8c804:	1c46b03a 	or	r3,r3,r17
   8c808:	1a46b03a 	or	r3,r3,r9
   8c80c:	dfc00417 	ldw	ra,16(sp)
   8c810:	dcc00317 	ldw	r19,12(sp)
   8c814:	dc800217 	ldw	r18,8(sp)
   8c818:	dc400117 	ldw	r17,4(sp)
   8c81c:	dc000017 	ldw	r16,0(sp)
   8c820:	dec00504 	addi	sp,sp,20
   8c824:	f800283a 	ret
   8c828:	4186b03a 	or	r3,r8,r6
   8c82c:	183fd026 	beq	r3,zero,8c770 <__subdf3+0x70>
   8c830:	39c03fcc 	andi	r7,r7,255
   8c834:	8887c83a 	sub	r3,r17,r2
   8c838:	91ffd01e 	bne	r18,r7,8c77c <__subdf3+0x7c>
   8c83c:	00c09b0e 	bge	zero,r3,8caac <__subdf3+0x3ac>
   8c840:	10006926 	beq	r2,zero,8c9e8 <__subdf3+0x2e8>
   8c844:	0081ffc4 	movi	r2,2047
   8c848:	88bfd026 	beq	r17,r2,8c78c <__subdf3+0x8c>
   8c84c:	42002034 	orhi	r8,r8,128
   8c850:	00800e04 	movi	r2,56
   8c854:	10c0e20e 	bge	r2,r3,8cbe0 <__subdf3+0x4e0>
   8c858:	418cb03a 	or	r6,r8,r6
   8c85c:	300cc03a 	cmpne	r6,r6,zero
   8c860:	0007883a 	mov	r3,zero
   8c864:	340d883a 	add	r6,r6,r16
   8c868:	3421803a 	cmpltu	r16,r6,r16
   8c86c:	194b883a 	add	r5,r3,r5
   8c870:	2c0b883a 	add	r5,r5,r16
   8c874:	3021883a 	mov	r16,r6
   8c878:	2880202c 	andhi	r2,r5,128
   8c87c:	103fc326 	beq	r2,zero,8c78c <__subdf3+0x8c>
   8c880:	8c400044 	addi	r17,r17,1
   8c884:	0081ffc4 	movi	r2,2047
   8c888:	88811026 	beq	r17,r2,8cccc <__subdf3+0x5cc>
   8c88c:	00bfe034 	movhi	r2,65408
   8c890:	10bfffc4 	addi	r2,r2,-1
   8c894:	288a703a 	and	r5,r5,r2
   8c898:	8006d07a 	srli	r3,r16,1
   8c89c:	280497fa 	slli	r2,r5,31
   8c8a0:	8400004c 	andi	r16,r16,1
   8c8a4:	80e0b03a 	or	r16,r16,r3
   8c8a8:	80a0b03a 	or	r16,r16,r2
   8c8ac:	280ad07a 	srli	r5,r5,1
   8c8b0:	003fb606 	br	8c78c <__subdf3+0x8c>
   8c8b4:	0081ffc4 	movi	r2,2047
   8c8b8:	88bfb426 	beq	r17,r2,8c78c <__subdf3+0x8c>
   8c8bc:	42002034 	orhi	r8,r8,128
   8c8c0:	00800e04 	movi	r2,56
   8c8c4:	10c07516 	blt	r2,r3,8ca9c <__subdf3+0x39c>
   8c8c8:	008007c4 	movi	r2,31
   8c8cc:	10c09816 	blt	r2,r3,8cb30 <__subdf3+0x430>
   8c8d0:	00800804 	movi	r2,32
   8c8d4:	10c5c83a 	sub	r2,r2,r3
   8c8d8:	30c8d83a 	srl	r4,r6,r3
   8c8dc:	408e983a 	sll	r7,r8,r2
   8c8e0:	3084983a 	sll	r2,r6,r2
   8c8e4:	40c6d83a 	srl	r3,r8,r3
   8c8e8:	3908b03a 	or	r4,r7,r4
   8c8ec:	1004c03a 	cmpne	r2,r2,zero
   8c8f0:	208cb03a 	or	r6,r4,r2
   8c8f4:	818dc83a 	sub	r6,r16,r6
   8c8f8:	81a1803a 	cmpltu	r16,r16,r6
   8c8fc:	28cbc83a 	sub	r5,r5,r3
   8c900:	2c0bc83a 	sub	r5,r5,r16
   8c904:	3021883a 	mov	r16,r6
   8c908:	2880202c 	andhi	r2,r5,128
   8c90c:	103f9f26 	beq	r2,zero,8c78c <__subdf3+0x8c>
   8c910:	04c02034 	movhi	r19,128
   8c914:	9cffffc4 	addi	r19,r19,-1
   8c918:	2ce6703a 	and	r19,r5,r19
   8c91c:	98004d26 	beq	r19,zero,8ca54 <__subdf3+0x354>
   8c920:	9809883a 	mov	r4,r19
   8c924:	008d1780 	call	8d178 <__clzsi2>
   8c928:	10fffe04 	addi	r3,r2,-8
   8c92c:	010007c4 	movi	r4,31
   8c930:	20c04e16 	blt	r4,r3,8ca6c <__subdf3+0x36c>
   8c934:	01000a04 	movi	r4,40
   8c938:	2085c83a 	sub	r2,r4,r2
   8c93c:	8084d83a 	srl	r2,r16,r2
   8c940:	98e6983a 	sll	r19,r19,r3
   8c944:	80e0983a 	sll	r16,r16,r3
   8c948:	14c4b03a 	or	r2,r2,r19
   8c94c:	1c404b16 	blt	r3,r17,8ca7c <__subdf3+0x37c>
   8c950:	1c63c83a 	sub	r17,r3,r17
   8c954:	89400044 	addi	r5,r17,1
   8c958:	00c007c4 	movi	r3,31
   8c95c:	19406716 	blt	r3,r5,8cafc <__subdf3+0x3fc>
   8c960:	1c47c83a 	sub	r3,r3,r17
   8c964:	8148d83a 	srl	r4,r16,r5
   8c968:	80e0983a 	sll	r16,r16,r3
   8c96c:	10c6983a 	sll	r3,r2,r3
   8c970:	114ad83a 	srl	r5,r2,r5
   8c974:	8004c03a 	cmpne	r2,r16,zero
   8c978:	20e0b03a 	or	r16,r4,r3
   8c97c:	80a0b03a 	or	r16,r16,r2
   8c980:	0023883a 	mov	r17,zero
   8c984:	003f8106 	br	8c78c <__subdf3+0x8c>
   8c988:	2880202c 	andhi	r2,r5,128
   8c98c:	9240004c 	andi	r9,r18,1
   8c990:	103f8a1e 	bne	r2,zero,8c7bc <__subdf3+0xbc>
   8c994:	2804977a 	slli	r2,r5,29
   8c998:	8020d0fa 	srli	r16,r16,3
   8c99c:	00c1ffc4 	movi	r3,2047
   8c9a0:	280ad0fa 	srli	r5,r5,3
   8c9a4:	1404b03a 	or	r2,r2,r16
   8c9a8:	88c0031e 	bne	r17,r3,8c9b8 <__subdf3+0x2b8>
   8c9ac:	1146b03a 	or	r3,r2,r5
   8c9b0:	18003726 	beq	r3,zero,8ca90 <__subdf3+0x390>
   8c9b4:	29400234 	orhi	r5,r5,8
   8c9b8:	00c00434 	movhi	r3,16
   8c9bc:	18ffffc4 	addi	r3,r3,-1
   8c9c0:	28ca703a 	and	r5,r5,r3
   8c9c4:	003f8806 	br	8c7e8 <__subdf3+0xe8>
   8c9c8:	18ffffc4 	addi	r3,r3,-1
   8c9cc:	1800481e 	bne	r3,zero,8caf0 <__subdf3+0x3f0>
   8c9d0:	818dc83a 	sub	r6,r16,r6
   8c9d4:	81a1803a 	cmpltu	r16,r16,r6
   8c9d8:	2a0bc83a 	sub	r5,r5,r8
   8c9dc:	2c0bc83a 	sub	r5,r5,r16
   8c9e0:	3021883a 	mov	r16,r6
   8c9e4:	003fc806 	br	8c908 <__subdf3+0x208>
   8c9e8:	4184b03a 	or	r2,r8,r6
   8c9ec:	103f6726 	beq	r2,zero,8c78c <__subdf3+0x8c>
   8c9f0:	18ffffc4 	addi	r3,r3,-1
   8c9f4:	1800931e 	bne	r3,zero,8cc44 <__subdf3+0x544>
   8c9f8:	340d883a 	add	r6,r6,r16
   8c9fc:	3421803a 	cmpltu	r16,r6,r16
   8ca00:	414b883a 	add	r5,r8,r5
   8ca04:	2c0b883a 	add	r5,r5,r16
   8ca08:	3021883a 	mov	r16,r6
   8ca0c:	003f9a06 	br	8c878 <__subdf3+0x178>
   8ca10:	1800531e 	bne	r3,zero,8cb60 <__subdf3+0x460>
   8ca14:	88800044 	addi	r2,r17,1
   8ca18:	1081ffcc 	andi	r2,r2,2047
   8ca1c:	00c00044 	movi	r3,1
   8ca20:	1880a00e 	bge	r3,r2,8cca4 <__subdf3+0x5a4>
   8ca24:	8185c83a 	sub	r2,r16,r6
   8ca28:	8087803a 	cmpltu	r3,r16,r2
   8ca2c:	2a27c83a 	sub	r19,r5,r8
   8ca30:	98e7c83a 	sub	r19,r19,r3
   8ca34:	98c0202c 	andhi	r3,r19,128
   8ca38:	18006226 	beq	r3,zero,8cbc4 <__subdf3+0x4c4>
   8ca3c:	3421c83a 	sub	r16,r6,r16
   8ca40:	414bc83a 	sub	r5,r8,r5
   8ca44:	340d803a 	cmpltu	r6,r6,r16
   8ca48:	29a7c83a 	sub	r19,r5,r6
   8ca4c:	3825883a 	mov	r18,r7
   8ca50:	983fb31e 	bne	r19,zero,8c920 <__subdf3+0x220>
   8ca54:	8009883a 	mov	r4,r16
   8ca58:	008d1780 	call	8d178 <__clzsi2>
   8ca5c:	10800804 	addi	r2,r2,32
   8ca60:	10fffe04 	addi	r3,r2,-8
   8ca64:	010007c4 	movi	r4,31
   8ca68:	20ffb20e 	bge	r4,r3,8c934 <__subdf3+0x234>
   8ca6c:	10bff604 	addi	r2,r2,-40
   8ca70:	8084983a 	sll	r2,r16,r2
   8ca74:	0021883a 	mov	r16,zero
   8ca78:	1c7fb50e 	bge	r3,r17,8c950 <__subdf3+0x250>
   8ca7c:	017fe034 	movhi	r5,65408
   8ca80:	297fffc4 	addi	r5,r5,-1
   8ca84:	88e3c83a 	sub	r17,r17,r3
   8ca88:	114a703a 	and	r5,r2,r5
   8ca8c:	003f3f06 	br	8c78c <__subdf3+0x8c>
   8ca90:	000b883a 	mov	r5,zero
   8ca94:	0005883a 	mov	r2,zero
   8ca98:	003f5306 	br	8c7e8 <__subdf3+0xe8>
   8ca9c:	418cb03a 	or	r6,r8,r6
   8caa0:	300cc03a 	cmpne	r6,r6,zero
   8caa4:	0007883a 	mov	r3,zero
   8caa8:	003f9206 	br	8c8f4 <__subdf3+0x1f4>
   8caac:	1800961e 	bne	r3,zero,8cd08 <__subdf3+0x608>
   8cab0:	88800044 	addi	r2,r17,1
   8cab4:	1101ffcc 	andi	r4,r2,2047
   8cab8:	00c00044 	movi	r3,1
   8cabc:	1900680e 	bge	r3,r4,8cc60 <__subdf3+0x560>
   8cac0:	00c1ffc4 	movi	r3,2047
   8cac4:	10c0b626 	beq	r2,r3,8cda0 <__subdf3+0x6a0>
   8cac8:	340d883a 	add	r6,r6,r16
   8cacc:	3421803a 	cmpltu	r16,r6,r16
   8cad0:	414b883a 	add	r5,r8,r5
   8cad4:	2c0b883a 	add	r5,r5,r16
   8cad8:	282097fa 	slli	r16,r5,31
   8cadc:	300cd07a 	srli	r6,r6,1
   8cae0:	280ad07a 	srli	r5,r5,1
   8cae4:	1023883a 	mov	r17,r2
   8cae8:	81a0b03a 	or	r16,r16,r6
   8caec:	003f2706 	br	8c78c <__subdf3+0x8c>
   8caf0:	0081ffc4 	movi	r2,2047
   8caf4:	88bf721e 	bne	r17,r2,8c8c0 <__subdf3+0x1c0>
   8caf8:	003f2406 	br	8c78c <__subdf3+0x8c>
   8cafc:	893ff844 	addi	r4,r17,-31
   8cb00:	00c00804 	movi	r3,32
   8cb04:	1108d83a 	srl	r4,r2,r4
   8cb08:	28c05126 	beq	r5,r3,8cc50 <__subdf3+0x550>
   8cb0c:	00c00fc4 	movi	r3,63
   8cb10:	1c63c83a 	sub	r17,r3,r17
   8cb14:	1444983a 	sll	r2,r2,r17
   8cb18:	1420b03a 	or	r16,r2,r16
   8cb1c:	8020c03a 	cmpne	r16,r16,zero
   8cb20:	8120b03a 	or	r16,r16,r4
   8cb24:	000b883a 	mov	r5,zero
   8cb28:	0023883a 	mov	r17,zero
   8cb2c:	003f1706 	br	8c78c <__subdf3+0x8c>
   8cb30:	18bff804 	addi	r2,r3,-32
   8cb34:	01000804 	movi	r4,32
   8cb38:	4084d83a 	srl	r2,r8,r2
   8cb3c:	19004626 	beq	r3,r4,8cc58 <__subdf3+0x558>
   8cb40:	01001004 	movi	r4,64
   8cb44:	20c7c83a 	sub	r3,r4,r3
   8cb48:	40d0983a 	sll	r8,r8,r3
   8cb4c:	418cb03a 	or	r6,r8,r6
   8cb50:	300cc03a 	cmpne	r6,r6,zero
   8cb54:	308cb03a 	or	r6,r6,r2
   8cb58:	0007883a 	mov	r3,zero
   8cb5c:	003f6506 	br	8c8f4 <__subdf3+0x1f4>
   8cb60:	88002b26 	beq	r17,zero,8cc10 <__subdf3+0x510>
   8cb64:	0101ffc4 	movi	r4,2047
   8cb68:	11002f26 	beq	r2,r4,8cc28 <__subdf3+0x528>
   8cb6c:	00c7c83a 	sub	r3,zero,r3
   8cb70:	29402034 	orhi	r5,r5,128
   8cb74:	01000e04 	movi	r4,56
   8cb78:	20c08516 	blt	r4,r3,8cd90 <__subdf3+0x690>
   8cb7c:	010007c4 	movi	r4,31
   8cb80:	20c0cd16 	blt	r4,r3,8ceb8 <__subdf3+0x7b8>
   8cb84:	01000804 	movi	r4,32
   8cb88:	20c9c83a 	sub	r4,r4,r3
   8cb8c:	2914983a 	sll	r10,r5,r4
   8cb90:	80d2d83a 	srl	r9,r16,r3
   8cb94:	8108983a 	sll	r4,r16,r4
   8cb98:	28cad83a 	srl	r5,r5,r3
   8cb9c:	5252b03a 	or	r9,r10,r9
   8cba0:	2006c03a 	cmpne	r3,r4,zero
   8cba4:	48e0b03a 	or	r16,r9,r3
   8cba8:	3421c83a 	sub	r16,r6,r16
   8cbac:	414bc83a 	sub	r5,r8,r5
   8cbb0:	340d803a 	cmpltu	r6,r6,r16
   8cbb4:	298bc83a 	sub	r5,r5,r6
   8cbb8:	1023883a 	mov	r17,r2
   8cbbc:	3825883a 	mov	r18,r7
   8cbc0:	003f5106 	br	8c908 <__subdf3+0x208>
   8cbc4:	9886b03a 	or	r3,r19,r2
   8cbc8:	18001c1e 	bne	r3,zero,8cc3c <__subdf3+0x53c>
   8cbcc:	0013883a 	mov	r9,zero
   8cbd0:	000b883a 	mov	r5,zero
   8cbd4:	0021883a 	mov	r16,zero
   8cbd8:	0023883a 	mov	r17,zero
   8cbdc:	003f6d06 	br	8c994 <__subdf3+0x294>
   8cbe0:	008007c4 	movi	r2,31
   8cbe4:	10c03c16 	blt	r2,r3,8ccd8 <__subdf3+0x5d8>
   8cbe8:	00800804 	movi	r2,32
   8cbec:	10c5c83a 	sub	r2,r2,r3
   8cbf0:	30c8d83a 	srl	r4,r6,r3
   8cbf4:	408e983a 	sll	r7,r8,r2
   8cbf8:	3084983a 	sll	r2,r6,r2
   8cbfc:	40c6d83a 	srl	r3,r8,r3
   8cc00:	3908b03a 	or	r4,r7,r4
   8cc04:	1004c03a 	cmpne	r2,r2,zero
   8cc08:	208cb03a 	or	r6,r4,r2
   8cc0c:	003f1506 	br	8c864 <__subdf3+0x164>
   8cc10:	2c08b03a 	or	r4,r5,r16
   8cc14:	20000426 	beq	r4,zero,8cc28 <__subdf3+0x528>
   8cc18:	00c6303a 	nor	r3,zero,r3
   8cc1c:	183fe226 	beq	r3,zero,8cba8 <__subdf3+0x4a8>
   8cc20:	0101ffc4 	movi	r4,2047
   8cc24:	113fd31e 	bne	r2,r4,8cb74 <__subdf3+0x474>
   8cc28:	400b883a 	mov	r5,r8
   8cc2c:	3021883a 	mov	r16,r6
   8cc30:	1023883a 	mov	r17,r2
   8cc34:	3825883a 	mov	r18,r7
   8cc38:	003ed406 	br	8c78c <__subdf3+0x8c>
   8cc3c:	1021883a 	mov	r16,r2
   8cc40:	003f3606 	br	8c91c <__subdf3+0x21c>
   8cc44:	0081ffc4 	movi	r2,2047
   8cc48:	88bf011e 	bne	r17,r2,8c850 <__subdf3+0x150>
   8cc4c:	003ecf06 	br	8c78c <__subdf3+0x8c>
   8cc50:	0005883a 	mov	r2,zero
   8cc54:	003fb006 	br	8cb18 <__subdf3+0x418>
   8cc58:	0011883a 	mov	r8,zero
   8cc5c:	003fbb06 	br	8cb4c <__subdf3+0x44c>
   8cc60:	2c04b03a 	or	r2,r5,r16
   8cc64:	88007f1e 	bne	r17,zero,8ce64 <__subdf3+0x764>
   8cc68:	1000a926 	beq	r2,zero,8cf10 <__subdf3+0x810>
   8cc6c:	4184b03a 	or	r2,r8,r6
   8cc70:	103ec626 	beq	r2,zero,8c78c <__subdf3+0x8c>
   8cc74:	340d883a 	add	r6,r6,r16
   8cc78:	414b883a 	add	r5,r8,r5
   8cc7c:	3421803a 	cmpltu	r16,r6,r16
   8cc80:	2c0b883a 	add	r5,r5,r16
   8cc84:	2880202c 	andhi	r2,r5,128
   8cc88:	1000bb26 	beq	r2,zero,8cf78 <__subdf3+0x878>
   8cc8c:	00bfe034 	movhi	r2,65408
   8cc90:	10bfffc4 	addi	r2,r2,-1
   8cc94:	288a703a 	and	r5,r5,r2
   8cc98:	3021883a 	mov	r16,r6
   8cc9c:	1823883a 	mov	r17,r3
   8cca0:	003eba06 	br	8c78c <__subdf3+0x8c>
   8cca4:	2c04b03a 	or	r2,r5,r16
   8cca8:	8800311e 	bne	r17,zero,8cd70 <__subdf3+0x670>
   8ccac:	1000451e 	bne	r2,zero,8cdc4 <__subdf3+0x6c4>
   8ccb0:	4184b03a 	or	r2,r8,r6
   8ccb4:	10000426 	beq	r2,zero,8ccc8 <__subdf3+0x5c8>
   8ccb8:	400b883a 	mov	r5,r8
   8ccbc:	3021883a 	mov	r16,r6
   8ccc0:	3825883a 	mov	r18,r7
   8ccc4:	003eb106 	br	8c78c <__subdf3+0x8c>
   8ccc8:	0013883a 	mov	r9,zero
   8cccc:	000b883a 	mov	r5,zero
   8ccd0:	0021883a 	mov	r16,zero
   8ccd4:	003f2f06 	br	8c994 <__subdf3+0x294>
   8ccd8:	18bff804 	addi	r2,r3,-32
   8ccdc:	01000804 	movi	r4,32
   8cce0:	4084d83a 	srl	r2,r8,r2
   8cce4:	19007226 	beq	r3,r4,8ceb0 <__subdf3+0x7b0>
   8cce8:	01001004 	movi	r4,64
   8ccec:	20c7c83a 	sub	r3,r4,r3
   8ccf0:	40d0983a 	sll	r8,r8,r3
   8ccf4:	418cb03a 	or	r6,r8,r6
   8ccf8:	300cc03a 	cmpne	r6,r6,zero
   8ccfc:	308cb03a 	or	r6,r6,r2
   8cd00:	0007883a 	mov	r3,zero
   8cd04:	003ed706 	br	8c864 <__subdf3+0x164>
   8cd08:	8800291e 	bne	r17,zero,8cdb0 <__subdf3+0x6b0>
   8cd0c:	2c08b03a 	or	r4,r5,r16
   8cd10:	20005026 	beq	r4,zero,8ce54 <__subdf3+0x754>
   8cd14:	00c6303a 	nor	r3,zero,r3
   8cd18:	18000f26 	beq	r3,zero,8cd58 <__subdf3+0x658>
   8cd1c:	0101ffc4 	movi	r4,2047
   8cd20:	11004c26 	beq	r2,r4,8ce54 <__subdf3+0x754>
   8cd24:	01000e04 	movi	r4,56
   8cd28:	20c07516 	blt	r4,r3,8cf00 <__subdf3+0x800>
   8cd2c:	010007c4 	movi	r4,31
   8cd30:	20c08316 	blt	r4,r3,8cf40 <__subdf3+0x840>
   8cd34:	01000804 	movi	r4,32
   8cd38:	20c9c83a 	sub	r4,r4,r3
   8cd3c:	2914983a 	sll	r10,r5,r4
   8cd40:	80ced83a 	srl	r7,r16,r3
   8cd44:	8108983a 	sll	r4,r16,r4
   8cd48:	28cad83a 	srl	r5,r5,r3
   8cd4c:	51ceb03a 	or	r7,r10,r7
   8cd50:	2006c03a 	cmpne	r3,r4,zero
   8cd54:	38e0b03a 	or	r16,r7,r3
   8cd58:	81a1883a 	add	r16,r16,r6
   8cd5c:	2a0b883a 	add	r5,r5,r8
   8cd60:	818d803a 	cmpltu	r6,r16,r6
   8cd64:	298b883a 	add	r5,r5,r6
   8cd68:	1023883a 	mov	r17,r2
   8cd6c:	003ec206 	br	8c878 <__subdf3+0x178>
   8cd70:	1000221e 	bne	r2,zero,8cdfc <__subdf3+0x6fc>
   8cd74:	4184b03a 	or	r2,r8,r6
   8cd78:	10005b26 	beq	r2,zero,8cee8 <__subdf3+0x7e8>
   8cd7c:	400b883a 	mov	r5,r8
   8cd80:	3021883a 	mov	r16,r6
   8cd84:	3825883a 	mov	r18,r7
   8cd88:	0441ffc4 	movi	r17,2047
   8cd8c:	003e7f06 	br	8c78c <__subdf3+0x8c>
   8cd90:	2c20b03a 	or	r16,r5,r16
   8cd94:	8020c03a 	cmpne	r16,r16,zero
   8cd98:	000b883a 	mov	r5,zero
   8cd9c:	003f8206 	br	8cba8 <__subdf3+0x4a8>
   8cda0:	1023883a 	mov	r17,r2
   8cda4:	000b883a 	mov	r5,zero
   8cda8:	0021883a 	mov	r16,zero
   8cdac:	003ef906 	br	8c994 <__subdf3+0x294>
   8cdb0:	0101ffc4 	movi	r4,2047
   8cdb4:	11002726 	beq	r2,r4,8ce54 <__subdf3+0x754>
   8cdb8:	00c7c83a 	sub	r3,zero,r3
   8cdbc:	29402034 	orhi	r5,r5,128
   8cdc0:	003fd806 	br	8cd24 <__subdf3+0x624>
   8cdc4:	4184b03a 	or	r2,r8,r6
   8cdc8:	103e7026 	beq	r2,zero,8c78c <__subdf3+0x8c>
   8cdcc:	8185c83a 	sub	r2,r16,r6
   8cdd0:	8089803a 	cmpltu	r4,r16,r2
   8cdd4:	2a07c83a 	sub	r3,r5,r8
   8cdd8:	1907c83a 	sub	r3,r3,r4
   8cddc:	1900202c 	andhi	r4,r3,128
   8cde0:	20005226 	beq	r4,zero,8cf2c <__subdf3+0x82c>
   8cde4:	3421c83a 	sub	r16,r6,r16
   8cde8:	414bc83a 	sub	r5,r8,r5
   8cdec:	340d803a 	cmpltu	r6,r6,r16
   8cdf0:	298bc83a 	sub	r5,r5,r6
   8cdf4:	3825883a 	mov	r18,r7
   8cdf8:	003e6406 	br	8c78c <__subdf3+0x8c>
   8cdfc:	4184b03a 	or	r2,r8,r6
   8ce00:	10002926 	beq	r2,zero,8cea8 <__subdf3+0x7a8>
   8ce04:	2804d0fa 	srli	r2,r5,3
   8ce08:	8020d0fa 	srli	r16,r16,3
   8ce0c:	280a977a 	slli	r5,r5,29
   8ce10:	10c0022c 	andhi	r3,r2,8
   8ce14:	2c20b03a 	or	r16,r5,r16
   8ce18:	18000826 	beq	r3,zero,8ce3c <__subdf3+0x73c>
   8ce1c:	4006d0fa 	srli	r3,r8,3
   8ce20:	1900022c 	andhi	r4,r3,8
   8ce24:	2000051e 	bne	r4,zero,8ce3c <__subdf3+0x73c>
   8ce28:	300cd0fa 	srli	r6,r6,3
   8ce2c:	4010977a 	slli	r8,r8,29
   8ce30:	1805883a 	mov	r2,r3
   8ce34:	3825883a 	mov	r18,r7
   8ce38:	41a0b03a 	or	r16,r8,r6
   8ce3c:	800ad77a 	srli	r5,r16,29
   8ce40:	100490fa 	slli	r2,r2,3
   8ce44:	802090fa 	slli	r16,r16,3
   8ce48:	0441ffc4 	movi	r17,2047
   8ce4c:	288ab03a 	or	r5,r5,r2
   8ce50:	003e4e06 	br	8c78c <__subdf3+0x8c>
   8ce54:	400b883a 	mov	r5,r8
   8ce58:	3021883a 	mov	r16,r6
   8ce5c:	1023883a 	mov	r17,r2
   8ce60:	003e4a06 	br	8c78c <__subdf3+0x8c>
   8ce64:	10002d26 	beq	r2,zero,8cf1c <__subdf3+0x81c>
   8ce68:	4184b03a 	or	r2,r8,r6
   8ce6c:	10000e26 	beq	r2,zero,8cea8 <__subdf3+0x7a8>
   8ce70:	2804d0fa 	srli	r2,r5,3
   8ce74:	8020d0fa 	srli	r16,r16,3
   8ce78:	280a977a 	slli	r5,r5,29
   8ce7c:	10c0022c 	andhi	r3,r2,8
   8ce80:	2c20b03a 	or	r16,r5,r16
   8ce84:	183fed26 	beq	r3,zero,8ce3c <__subdf3+0x73c>
   8ce88:	4006d0fa 	srli	r3,r8,3
   8ce8c:	1900022c 	andhi	r4,r3,8
   8ce90:	203fea1e 	bne	r4,zero,8ce3c <__subdf3+0x73c>
   8ce94:	300cd0fa 	srli	r6,r6,3
   8ce98:	4010977a 	slli	r8,r8,29
   8ce9c:	1805883a 	mov	r2,r3
   8cea0:	41a0b03a 	or	r16,r8,r6
   8cea4:	003fe506 	br	8ce3c <__subdf3+0x73c>
   8cea8:	0441ffc4 	movi	r17,2047
   8ceac:	003e3706 	br	8c78c <__subdf3+0x8c>
   8ceb0:	0011883a 	mov	r8,zero
   8ceb4:	003f8f06 	br	8ccf4 <__subdf3+0x5f4>
   8ceb8:	193ff804 	addi	r4,r3,-32
   8cebc:	02400804 	movi	r9,32
   8cec0:	2908d83a 	srl	r4,r5,r4
   8cec4:	1a402a26 	beq	r3,r9,8cf70 <__subdf3+0x870>
   8cec8:	02401004 	movi	r9,64
   8cecc:	48c7c83a 	sub	r3,r9,r3
   8ced0:	28ca983a 	sll	r5,r5,r3
   8ced4:	2c20b03a 	or	r16,r5,r16
   8ced8:	8020c03a 	cmpne	r16,r16,zero
   8cedc:	8120b03a 	or	r16,r16,r4
   8cee0:	000b883a 	mov	r5,zero
   8cee4:	003f3006 	br	8cba8 <__subdf3+0x4a8>
   8cee8:	0013883a 	mov	r9,zero
   8ceec:	01402034 	movhi	r5,128
   8cef0:	297fffc4 	addi	r5,r5,-1
   8cef4:	043ffe04 	movi	r16,-8
   8cef8:	0441ffc4 	movi	r17,2047
   8cefc:	003ea506 	br	8c994 <__subdf3+0x294>
   8cf00:	2c20b03a 	or	r16,r5,r16
   8cf04:	8020c03a 	cmpne	r16,r16,zero
   8cf08:	000b883a 	mov	r5,zero
   8cf0c:	003f9206 	br	8cd58 <__subdf3+0x658>
   8cf10:	400b883a 	mov	r5,r8
   8cf14:	3021883a 	mov	r16,r6
   8cf18:	003e1c06 	br	8c78c <__subdf3+0x8c>
   8cf1c:	400b883a 	mov	r5,r8
   8cf20:	3021883a 	mov	r16,r6
   8cf24:	0441ffc4 	movi	r17,2047
   8cf28:	003e1806 	br	8c78c <__subdf3+0x8c>
   8cf2c:	1888b03a 	or	r4,r3,r2
   8cf30:	203f6526 	beq	r4,zero,8ccc8 <__subdf3+0x5c8>
   8cf34:	180b883a 	mov	r5,r3
   8cf38:	1021883a 	mov	r16,r2
   8cf3c:	003e1306 	br	8c78c <__subdf3+0x8c>
   8cf40:	193ff804 	addi	r4,r3,-32
   8cf44:	01c00804 	movi	r7,32
   8cf48:	2908d83a 	srl	r4,r5,r4
   8cf4c:	19c00c26 	beq	r3,r7,8cf80 <__subdf3+0x880>
   8cf50:	01c01004 	movi	r7,64
   8cf54:	38c7c83a 	sub	r3,r7,r3
   8cf58:	28ca983a 	sll	r5,r5,r3
   8cf5c:	2c20b03a 	or	r16,r5,r16
   8cf60:	8020c03a 	cmpne	r16,r16,zero
   8cf64:	8120b03a 	or	r16,r16,r4
   8cf68:	000b883a 	mov	r5,zero
   8cf6c:	003f7a06 	br	8cd58 <__subdf3+0x658>
   8cf70:	000b883a 	mov	r5,zero
   8cf74:	003fd706 	br	8ced4 <__subdf3+0x7d4>
   8cf78:	3021883a 	mov	r16,r6
   8cf7c:	003e0306 	br	8c78c <__subdf3+0x8c>
   8cf80:	000b883a 	mov	r5,zero
   8cf84:	003ff506 	br	8cf5c <__subdf3+0x85c>

0008cf88 <__fixdfsi>:
   8cf88:	2806d53a 	srli	r3,r5,20
   8cf8c:	00800434 	movhi	r2,16
   8cf90:	10bfffc4 	addi	r2,r2,-1
   8cf94:	0180ff84 	movi	r6,1022
   8cf98:	18c1ffcc 	andi	r3,r3,2047
   8cf9c:	2884703a 	and	r2,r5,r2
   8cfa0:	280ad7fa 	srli	r5,r5,31
   8cfa4:	30c0120e 	bge	r6,r3,8cff0 <__fixdfsi+0x68>
   8cfa8:	01810744 	movi	r6,1053
   8cfac:	30c00c16 	blt	r6,r3,8cfe0 <__fixdfsi+0x58>
   8cfb0:	01810cc4 	movi	r6,1075
   8cfb4:	30cdc83a 	sub	r6,r6,r3
   8cfb8:	01c007c4 	movi	r7,31
   8cfbc:	10800434 	orhi	r2,r2,16
   8cfc0:	39800d16 	blt	r7,r6,8cff8 <__fixdfsi+0x70>
   8cfc4:	18fefb44 	addi	r3,r3,-1043
   8cfc8:	2188d83a 	srl	r4,r4,r6
   8cfcc:	10c4983a 	sll	r2,r2,r3
   8cfd0:	2084b03a 	or	r2,r4,r2
   8cfd4:	28000726 	beq	r5,zero,8cff4 <__fixdfsi+0x6c>
   8cfd8:	0085c83a 	sub	r2,zero,r2
   8cfdc:	f800283a 	ret
   8cfe0:	00a00034 	movhi	r2,32768
   8cfe4:	10bfffc4 	addi	r2,r2,-1
   8cfe8:	2885883a 	add	r2,r5,r2
   8cfec:	f800283a 	ret
   8cff0:	0005883a 	mov	r2,zero
   8cff4:	f800283a 	ret
   8cff8:	010104c4 	movi	r4,1043
   8cffc:	20c7c83a 	sub	r3,r4,r3
   8d000:	10c4d83a 	srl	r2,r2,r3
   8d004:	003ff306 	br	8cfd4 <__fixdfsi+0x4c>

0008d008 <__floatsidf>:
   8d008:	defffd04 	addi	sp,sp,-12
   8d00c:	dc000015 	stw	r16,0(sp)
   8d010:	dfc00215 	stw	ra,8(sp)
   8d014:	dc400115 	stw	r17,4(sp)
   8d018:	2021883a 	mov	r16,r4
   8d01c:	20002926 	beq	r4,zero,8d0c4 <__floatsidf+0xbc>
   8d020:	2022d7fa 	srli	r17,r4,31
   8d024:	88000126 	beq	r17,zero,8d02c <__floatsidf+0x24>
   8d028:	0121c83a 	sub	r16,zero,r4
   8d02c:	8009883a 	mov	r4,r16
   8d030:	008d1780 	call	8d178 <__clzsi2>
   8d034:	01810784 	movi	r6,1054
   8d038:	00c00284 	movi	r3,10
   8d03c:	308dc83a 	sub	r6,r6,r2
   8d040:	1880150e 	bge	r3,r2,8d098 <__floatsidf+0x90>
   8d044:	113ffd44 	addi	r4,r2,-11
   8d048:	8108983a 	sll	r4,r16,r4
   8d04c:	00800434 	movhi	r2,16
   8d050:	10bfffc4 	addi	r2,r2,-1
   8d054:	3181ffcc 	andi	r6,r6,2047
   8d058:	2088703a 	and	r4,r4,r2
   8d05c:	880b883a 	mov	r5,r17
   8d060:	0005883a 	mov	r2,zero
   8d064:	300c953a 	slli	r6,r6,20
   8d068:	29403fcc 	andi	r5,r5,255
   8d06c:	280a97fa 	slli	r5,r5,31
   8d070:	00c00434 	movhi	r3,16
   8d074:	18ffffc4 	addi	r3,r3,-1
   8d078:	20c8703a 	and	r4,r4,r3
   8d07c:	2186b03a 	or	r3,r4,r6
   8d080:	1946b03a 	or	r3,r3,r5
   8d084:	dfc00217 	ldw	ra,8(sp)
   8d088:	dc400117 	ldw	r17,4(sp)
   8d08c:	dc000017 	ldw	r16,0(sp)
   8d090:	dec00304 	addi	sp,sp,12
   8d094:	f800283a 	ret
   8d098:	010002c4 	movi	r4,11
   8d09c:	2089c83a 	sub	r4,r4,r2
   8d0a0:	8108d83a 	srl	r4,r16,r4
   8d0a4:	10800544 	addi	r2,r2,21
   8d0a8:	00c00434 	movhi	r3,16
   8d0ac:	18ffffc4 	addi	r3,r3,-1
   8d0b0:	8084983a 	sll	r2,r16,r2
   8d0b4:	20c8703a 	and	r4,r4,r3
   8d0b8:	3181ffcc 	andi	r6,r6,2047
   8d0bc:	880b883a 	mov	r5,r17
   8d0c0:	003fe806 	br	8d064 <__floatsidf+0x5c>
   8d0c4:	000b883a 	mov	r5,zero
   8d0c8:	000d883a 	mov	r6,zero
   8d0cc:	0009883a 	mov	r4,zero
   8d0d0:	0005883a 	mov	r2,zero
   8d0d4:	003fe306 	br	8d064 <__floatsidf+0x5c>

0008d0d8 <__floatunsidf>:
   8d0d8:	defffe04 	addi	sp,sp,-8
   8d0dc:	dc000015 	stw	r16,0(sp)
   8d0e0:	dfc00115 	stw	ra,4(sp)
   8d0e4:	2021883a 	mov	r16,r4
   8d0e8:	20001f26 	beq	r4,zero,8d168 <__floatunsidf+0x90>
   8d0ec:	008d1780 	call	8d178 <__clzsi2>
   8d0f0:	01010784 	movi	r4,1054
   8d0f4:	00c00284 	movi	r3,10
   8d0f8:	2089c83a 	sub	r4,r4,r2
   8d0fc:	1880100e 	bge	r3,r2,8d140 <__floatunsidf+0x68>
   8d100:	117ffd44 	addi	r5,r2,-11
   8d104:	814a983a 	sll	r5,r16,r5
   8d108:	00800434 	movhi	r2,16
   8d10c:	10bfffc4 	addi	r2,r2,-1
   8d110:	2101ffcc 	andi	r4,r4,2047
   8d114:	288a703a 	and	r5,r5,r2
   8d118:	0005883a 	mov	r2,zero
   8d11c:	2008953a 	slli	r4,r4,20
   8d120:	00c00434 	movhi	r3,16
   8d124:	18ffffc4 	addi	r3,r3,-1
   8d128:	28c6703a 	and	r3,r5,r3
   8d12c:	1906b03a 	or	r3,r3,r4
   8d130:	dfc00117 	ldw	ra,4(sp)
   8d134:	dc000017 	ldw	r16,0(sp)
   8d138:	dec00204 	addi	sp,sp,8
   8d13c:	f800283a 	ret
   8d140:	014002c4 	movi	r5,11
   8d144:	288bc83a 	sub	r5,r5,r2
   8d148:	814ad83a 	srl	r5,r16,r5
   8d14c:	10800544 	addi	r2,r2,21
   8d150:	00c00434 	movhi	r3,16
   8d154:	18ffffc4 	addi	r3,r3,-1
   8d158:	8084983a 	sll	r2,r16,r2
   8d15c:	28ca703a 	and	r5,r5,r3
   8d160:	2101ffcc 	andi	r4,r4,2047
   8d164:	003fed06 	br	8d11c <__floatunsidf+0x44>
   8d168:	0009883a 	mov	r4,zero
   8d16c:	000b883a 	mov	r5,zero
   8d170:	0005883a 	mov	r2,zero
   8d174:	003fe906 	br	8d11c <__floatunsidf+0x44>

0008d178 <__clzsi2>:
   8d178:	00bfffd4 	movui	r2,65535
   8d17c:	11000b36 	bltu	r2,r4,8d1ac <__clzsi2+0x34>
   8d180:	00803fc4 	movi	r2,255
   8d184:	11001e2e 	bgeu	r2,r4,8d200 <__clzsi2+0x88>
   8d188:	00c00204 	movi	r3,8
   8d18c:	20c8d83a 	srl	r4,r4,r3
   8d190:	00c00274 	movhi	r3,9
   8d194:	18ff6d04 	addi	r3,r3,-588
   8d198:	00800604 	movi	r2,24
   8d19c:	1909883a 	add	r4,r3,r4
   8d1a0:	20c00003 	ldbu	r3,0(r4)
   8d1a4:	10c5c83a 	sub	r2,r2,r3
   8d1a8:	f800283a 	ret
   8d1ac:	00804034 	movhi	r2,256
   8d1b0:	10bfffc4 	addi	r2,r2,-1
   8d1b4:	11000936 	bltu	r2,r4,8d1dc <__clzsi2+0x64>
   8d1b8:	00800404 	movi	r2,16
   8d1bc:	1007883a 	mov	r3,r2
   8d1c0:	20c8d83a 	srl	r4,r4,r3
   8d1c4:	00c00274 	movhi	r3,9
   8d1c8:	18ff6d04 	addi	r3,r3,-588
   8d1cc:	1909883a 	add	r4,r3,r4
   8d1d0:	20c00003 	ldbu	r3,0(r4)
   8d1d4:	10c5c83a 	sub	r2,r2,r3
   8d1d8:	f800283a 	ret
   8d1dc:	00c00604 	movi	r3,24
   8d1e0:	20c8d83a 	srl	r4,r4,r3
   8d1e4:	00c00274 	movhi	r3,9
   8d1e8:	18ff6d04 	addi	r3,r3,-588
   8d1ec:	00800204 	movi	r2,8
   8d1f0:	1909883a 	add	r4,r3,r4
   8d1f4:	20c00003 	ldbu	r3,0(r4)
   8d1f8:	10c5c83a 	sub	r2,r2,r3
   8d1fc:	f800283a 	ret
   8d200:	0007883a 	mov	r3,zero
   8d204:	20c8d83a 	srl	r4,r4,r3
   8d208:	00c00274 	movhi	r3,9
   8d20c:	18ff6d04 	addi	r3,r3,-588
   8d210:	00800804 	movi	r2,32
   8d214:	1909883a 	add	r4,r3,r4
   8d218:	20c00003 	ldbu	r3,0(r4)
   8d21c:	10c5c83a 	sub	r2,r2,r3
   8d220:	f800283a 	ret

0008d224 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d224:	defffe04 	addi	sp,sp,-8
   8d228:	dfc00115 	stw	ra,4(sp)
   8d22c:	df000015 	stw	fp,0(sp)
   8d230:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d234:	00800274 	movhi	r2,9
   8d238:	10866e04 	addi	r2,r2,6584
   8d23c:	10800017 	ldw	r2,0(r2)
   8d240:	10000526 	beq	r2,zero,8d258 <alt_get_errno+0x34>
   8d244:	00800274 	movhi	r2,9
   8d248:	10866e04 	addi	r2,r2,6584
   8d24c:	10800017 	ldw	r2,0(r2)
   8d250:	103ee83a 	callr	r2
   8d254:	00000206 	br	8d260 <alt_get_errno+0x3c>
   8d258:	00800274 	movhi	r2,9
   8d25c:	108d3404 	addi	r2,r2,13520
}
   8d260:	e037883a 	mov	sp,fp
   8d264:	dfc00117 	ldw	ra,4(sp)
   8d268:	df000017 	ldw	fp,0(sp)
   8d26c:	dec00204 	addi	sp,sp,8
   8d270:	f800283a 	ret

0008d274 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8d274:	defffb04 	addi	sp,sp,-20
   8d278:	dfc00415 	stw	ra,16(sp)
   8d27c:	df000315 	stw	fp,12(sp)
   8d280:	df000304 	addi	fp,sp,12
   8d284:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8d288:	e0bfff17 	ldw	r2,-4(fp)
   8d28c:	10000816 	blt	r2,zero,8d2b0 <close+0x3c>
   8d290:	e13fff17 	ldw	r4,-4(fp)
   8d294:	01400304 	movi	r5,12
   8d298:	008aa780 	call	8aa78 <__mulsi3>
   8d29c:	1007883a 	mov	r3,r2
   8d2a0:	00800274 	movhi	r2,9
   8d2a4:	1081eb04 	addi	r2,r2,1964
   8d2a8:	1885883a 	add	r2,r3,r2
   8d2ac:	00000106 	br	8d2b4 <close+0x40>
   8d2b0:	0005883a 	mov	r2,zero
   8d2b4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   8d2b8:	e0bffd17 	ldw	r2,-12(fp)
   8d2bc:	10001826 	beq	r2,zero,8d320 <close+0xac>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8d2c0:	e0bffd17 	ldw	r2,-12(fp)
   8d2c4:	10800017 	ldw	r2,0(r2)
   8d2c8:	10800417 	ldw	r2,16(r2)
   8d2cc:	10000626 	beq	r2,zero,8d2e8 <close+0x74>
   8d2d0:	e0bffd17 	ldw	r2,-12(fp)
   8d2d4:	10800017 	ldw	r2,0(r2)
   8d2d8:	10800417 	ldw	r2,16(r2)
   8d2dc:	e13ffd17 	ldw	r4,-12(fp)
   8d2e0:	103ee83a 	callr	r2
   8d2e4:	00000106 	br	8d2ec <close+0x78>
   8d2e8:	0005883a 	mov	r2,zero
   8d2ec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8d2f0:	e13fff17 	ldw	r4,-4(fp)
   8d2f4:	008d9780 	call	8d978 <alt_release_fd>
    if (rval < 0)
   8d2f8:	e0bffe17 	ldw	r2,-8(fp)
   8d2fc:	1000060e 	bge	r2,zero,8d318 <close+0xa4>
    {
      ALT_ERRNO = -rval;
   8d300:	008d2240 	call	8d224 <alt_get_errno>
   8d304:	e0fffe17 	ldw	r3,-8(fp)
   8d308:	00c7c83a 	sub	r3,zero,r3
   8d30c:	10c00015 	stw	r3,0(r2)
      return -1;
   8d310:	00bfffc4 	movi	r2,-1
   8d314:	00000606 	br	8d330 <close+0xbc>
    }
    return 0;
   8d318:	0005883a 	mov	r2,zero
   8d31c:	00000406 	br	8d330 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d320:	008d2240 	call	8d224 <alt_get_errno>
   8d324:	00c01444 	movi	r3,81
   8d328:	10c00015 	stw	r3,0(r2)
    return -1;
   8d32c:	00bfffc4 	movi	r2,-1
  }
}
   8d330:	e037883a 	mov	sp,fp
   8d334:	dfc00117 	ldw	ra,4(sp)
   8d338:	df000017 	ldw	fp,0(sp)
   8d33c:	dec00204 	addi	sp,sp,8
   8d340:	f800283a 	ret

0008d344 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8d344:	defffc04 	addi	sp,sp,-16
   8d348:	df000315 	stw	fp,12(sp)
   8d34c:	df000304 	addi	fp,sp,12
   8d350:	e13ffd15 	stw	r4,-12(fp)
   8d354:	e17ffe15 	stw	r5,-8(fp)
   8d358:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8d35c:	e0bfff17 	ldw	r2,-4(fp)
}
   8d360:	e037883a 	mov	sp,fp
   8d364:	df000017 	ldw	fp,0(sp)
   8d368:	dec00104 	addi	sp,sp,4
   8d36c:	f800283a 	ret

0008d370 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d370:	defffe04 	addi	sp,sp,-8
   8d374:	dfc00115 	stw	ra,4(sp)
   8d378:	df000015 	stw	fp,0(sp)
   8d37c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d380:	00800274 	movhi	r2,9
   8d384:	10866e04 	addi	r2,r2,6584
   8d388:	10800017 	ldw	r2,0(r2)
   8d38c:	10000526 	beq	r2,zero,8d3a4 <alt_get_errno+0x34>
   8d390:	00800274 	movhi	r2,9
   8d394:	10866e04 	addi	r2,r2,6584
   8d398:	10800017 	ldw	r2,0(r2)
   8d39c:	103ee83a 	callr	r2
   8d3a0:	00000206 	br	8d3ac <alt_get_errno+0x3c>
   8d3a4:	00800274 	movhi	r2,9
   8d3a8:	108d3404 	addi	r2,r2,13520
}
   8d3ac:	e037883a 	mov	sp,fp
   8d3b0:	dfc00117 	ldw	ra,4(sp)
   8d3b4:	df000017 	ldw	fp,0(sp)
   8d3b8:	dec00204 	addi	sp,sp,8
   8d3bc:	f800283a 	ret

0008d3c0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8d3c0:	defffb04 	addi	sp,sp,-20
   8d3c4:	dfc00415 	stw	ra,16(sp)
   8d3c8:	df000315 	stw	fp,12(sp)
   8d3cc:	df000304 	addi	fp,sp,12
   8d3d0:	e13ffe15 	stw	r4,-8(fp)
   8d3d4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d3d8:	e0bffe17 	ldw	r2,-8(fp)
   8d3dc:	10000816 	blt	r2,zero,8d400 <fstat+0x40>
   8d3e0:	e13ffe17 	ldw	r4,-8(fp)
   8d3e4:	01400304 	movi	r5,12
   8d3e8:	008aa780 	call	8aa78 <__mulsi3>
   8d3ec:	1007883a 	mov	r3,r2
   8d3f0:	00800274 	movhi	r2,9
   8d3f4:	1081eb04 	addi	r2,r2,1964
   8d3f8:	1885883a 	add	r2,r3,r2
   8d3fc:	00000106 	br	8d404 <fstat+0x44>
   8d400:	0005883a 	mov	r2,zero
   8d404:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   8d408:	e0bffd17 	ldw	r2,-12(fp)
   8d40c:	10001026 	beq	r2,zero,8d450 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8d410:	e0bffd17 	ldw	r2,-12(fp)
   8d414:	10800017 	ldw	r2,0(r2)
   8d418:	10800817 	ldw	r2,32(r2)
   8d41c:	10000726 	beq	r2,zero,8d43c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   8d420:	e0bffd17 	ldw	r2,-12(fp)
   8d424:	10800017 	ldw	r2,0(r2)
   8d428:	10800817 	ldw	r2,32(r2)
   8d42c:	e13ffd17 	ldw	r4,-12(fp)
   8d430:	e17fff17 	ldw	r5,-4(fp)
   8d434:	103ee83a 	callr	r2
   8d438:	00000906 	br	8d460 <fstat+0xa0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8d43c:	e0bfff17 	ldw	r2,-4(fp)
   8d440:	00c80004 	movi	r3,8192
   8d444:	10c00115 	stw	r3,4(r2)
      return 0;
   8d448:	0005883a 	mov	r2,zero
   8d44c:	00000406 	br	8d460 <fstat+0xa0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d450:	008d3700 	call	8d370 <alt_get_errno>
   8d454:	00c01444 	movi	r3,81
   8d458:	10c00015 	stw	r3,0(r2)
    return -1;
   8d45c:	00bfffc4 	movi	r2,-1
  }
}
   8d460:	e037883a 	mov	sp,fp
   8d464:	dfc00117 	ldw	ra,4(sp)
   8d468:	df000017 	ldw	fp,0(sp)
   8d46c:	dec00204 	addi	sp,sp,8
   8d470:	f800283a 	ret

0008d474 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d474:	defffe04 	addi	sp,sp,-8
   8d478:	dfc00115 	stw	ra,4(sp)
   8d47c:	df000015 	stw	fp,0(sp)
   8d480:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d484:	00800274 	movhi	r2,9
   8d488:	10866e04 	addi	r2,r2,6584
   8d48c:	10800017 	ldw	r2,0(r2)
   8d490:	10000526 	beq	r2,zero,8d4a8 <alt_get_errno+0x34>
   8d494:	00800274 	movhi	r2,9
   8d498:	10866e04 	addi	r2,r2,6584
   8d49c:	10800017 	ldw	r2,0(r2)
   8d4a0:	103ee83a 	callr	r2
   8d4a4:	00000206 	br	8d4b0 <alt_get_errno+0x3c>
   8d4a8:	00800274 	movhi	r2,9
   8d4ac:	108d3404 	addi	r2,r2,13520
}
   8d4b0:	e037883a 	mov	sp,fp
   8d4b4:	dfc00117 	ldw	ra,4(sp)
   8d4b8:	df000017 	ldw	fp,0(sp)
   8d4bc:	dec00204 	addi	sp,sp,8
   8d4c0:	f800283a 	ret

0008d4c4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8d4c4:	deffed04 	addi	sp,sp,-76
   8d4c8:	dfc01215 	stw	ra,72(sp)
   8d4cc:	df001115 	stw	fp,68(sp)
   8d4d0:	df001104 	addi	fp,sp,68
   8d4d4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d4d8:	e0bfff17 	ldw	r2,-4(fp)
   8d4dc:	10000816 	blt	r2,zero,8d500 <isatty+0x3c>
   8d4e0:	e13fff17 	ldw	r4,-4(fp)
   8d4e4:	01400304 	movi	r5,12
   8d4e8:	008aa780 	call	8aa78 <__mulsi3>
   8d4ec:	1007883a 	mov	r3,r2
   8d4f0:	00800274 	movhi	r2,9
   8d4f4:	1081eb04 	addi	r2,r2,1964
   8d4f8:	1885883a 	add	r2,r3,r2
   8d4fc:	00000106 	br	8d504 <isatty+0x40>
   8d500:	0005883a 	mov	r2,zero
   8d504:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   8d508:	e0bfef17 	ldw	r2,-68(fp)
   8d50c:	10000e26 	beq	r2,zero,8d548 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8d510:	e0bfef17 	ldw	r2,-68(fp)
   8d514:	10800017 	ldw	r2,0(r2)
   8d518:	10800817 	ldw	r2,32(r2)
   8d51c:	1000021e 	bne	r2,zero,8d528 <isatty+0x64>
    {
      return 1;
   8d520:	00800044 	movi	r2,1
   8d524:	00000c06 	br	8d558 <isatty+0x94>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8d528:	e0bff004 	addi	r2,fp,-64
   8d52c:	e13fff17 	ldw	r4,-4(fp)
   8d530:	100b883a 	mov	r5,r2
   8d534:	008d3c00 	call	8d3c0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8d538:	e0bff117 	ldw	r2,-60(fp)
   8d53c:	10880020 	cmpeqi	r2,r2,8192
   8d540:	10803fcc 	andi	r2,r2,255
   8d544:	00000406 	br	8d558 <isatty+0x94>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d548:	008d4740 	call	8d474 <alt_get_errno>
   8d54c:	00c01444 	movi	r3,81
   8d550:	10c00015 	stw	r3,0(r2)
    return 0;
   8d554:	0005883a 	mov	r2,zero
  }
}
   8d558:	e037883a 	mov	sp,fp
   8d55c:	dfc00117 	ldw	ra,4(sp)
   8d560:	df000017 	ldw	fp,0(sp)
   8d564:	dec00204 	addi	sp,sp,8
   8d568:	f800283a 	ret

0008d56c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8d56c:	defffc04 	addi	sp,sp,-16
   8d570:	df000315 	stw	fp,12(sp)
   8d574:	df000304 	addi	fp,sp,12
   8d578:	e13ffd15 	stw	r4,-12(fp)
   8d57c:	e17ffe15 	stw	r5,-8(fp)
   8d580:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8d584:	e0fffe17 	ldw	r3,-8(fp)
   8d588:	e0bffd17 	ldw	r2,-12(fp)
   8d58c:	18800c26 	beq	r3,r2,8d5c0 <alt_load_section+0x54>
  {
    while( to != end )
   8d590:	00000806 	br	8d5b4 <alt_load_section+0x48>
    {
      *to++ = *from++;
   8d594:	e0bffe17 	ldw	r2,-8(fp)
   8d598:	10c00104 	addi	r3,r2,4
   8d59c:	e0fffe15 	stw	r3,-8(fp)
   8d5a0:	e0fffd17 	ldw	r3,-12(fp)
   8d5a4:	19000104 	addi	r4,r3,4
   8d5a8:	e13ffd15 	stw	r4,-12(fp)
   8d5ac:	18c00017 	ldw	r3,0(r3)
   8d5b0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8d5b4:	e0fffe17 	ldw	r3,-8(fp)
   8d5b8:	e0bfff17 	ldw	r2,-4(fp)
   8d5bc:	18bff51e 	bne	r3,r2,8d594 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   8d5c0:	e037883a 	mov	sp,fp
   8d5c4:	df000017 	ldw	fp,0(sp)
   8d5c8:	dec00104 	addi	sp,sp,4
   8d5cc:	f800283a 	ret

0008d5d0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8d5d0:	defffe04 	addi	sp,sp,-8
   8d5d4:	dfc00115 	stw	ra,4(sp)
   8d5d8:	df000015 	stw	fp,0(sp)
   8d5dc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8d5e0:	01000274 	movhi	r4,9
   8d5e4:	21067304 	addi	r4,r4,6604
   8d5e8:	01400274 	movhi	r5,9
   8d5ec:	297fb804 	addi	r5,r5,-288
   8d5f0:	01800274 	movhi	r6,9
   8d5f4:	31867304 	addi	r6,r6,6604
   8d5f8:	008d56c0 	call	8d56c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8d5fc:	01000234 	movhi	r4,8
   8d600:	21000804 	addi	r4,r4,32
   8d604:	01400234 	movhi	r5,8
   8d608:	29400804 	addi	r5,r5,32
   8d60c:	01800234 	movhi	r6,8
   8d610:	31808b04 	addi	r6,r6,556
   8d614:	008d56c0 	call	8d56c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8d618:	01000274 	movhi	r4,9
   8d61c:	213e9604 	addi	r4,r4,-1448
   8d620:	01400274 	movhi	r5,9
   8d624:	297e9604 	addi	r5,r5,-1448
   8d628:	01800274 	movhi	r6,9
   8d62c:	31bfb804 	addi	r6,r6,-288
   8d630:	008d56c0 	call	8d56c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8d634:	008e9280 	call	8e928 <alt_dcache_flush_all>
  alt_icache_flush_all();
   8d638:	008eaec0 	call	8eaec <alt_icache_flush_all>
}
   8d63c:	e037883a 	mov	sp,fp
   8d640:	dfc00117 	ldw	ra,4(sp)
   8d644:	df000017 	ldw	fp,0(sp)
   8d648:	dec00204 	addi	sp,sp,8
   8d64c:	f800283a 	ret

0008d650 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d650:	defffe04 	addi	sp,sp,-8
   8d654:	dfc00115 	stw	ra,4(sp)
   8d658:	df000015 	stw	fp,0(sp)
   8d65c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d660:	00800274 	movhi	r2,9
   8d664:	10866e04 	addi	r2,r2,6584
   8d668:	10800017 	ldw	r2,0(r2)
   8d66c:	10000526 	beq	r2,zero,8d684 <alt_get_errno+0x34>
   8d670:	00800274 	movhi	r2,9
   8d674:	10866e04 	addi	r2,r2,6584
   8d678:	10800017 	ldw	r2,0(r2)
   8d67c:	103ee83a 	callr	r2
   8d680:	00000206 	br	8d68c <alt_get_errno+0x3c>
   8d684:	00800274 	movhi	r2,9
   8d688:	108d3404 	addi	r2,r2,13520
}
   8d68c:	e037883a 	mov	sp,fp
   8d690:	dfc00117 	ldw	ra,4(sp)
   8d694:	df000017 	ldw	fp,0(sp)
   8d698:	dec00204 	addi	sp,sp,8
   8d69c:	f800283a 	ret

0008d6a0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8d6a0:	defff904 	addi	sp,sp,-28
   8d6a4:	dfc00615 	stw	ra,24(sp)
   8d6a8:	df000515 	stw	fp,20(sp)
   8d6ac:	df000504 	addi	fp,sp,20
   8d6b0:	e13ffd15 	stw	r4,-12(fp)
   8d6b4:	e17ffe15 	stw	r5,-8(fp)
   8d6b8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8d6bc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d6c0:	e0bffd17 	ldw	r2,-12(fp)
   8d6c4:	10000816 	blt	r2,zero,8d6e8 <lseek+0x48>
   8d6c8:	e13ffd17 	ldw	r4,-12(fp)
   8d6cc:	01400304 	movi	r5,12
   8d6d0:	008aa780 	call	8aa78 <__mulsi3>
   8d6d4:	1007883a 	mov	r3,r2
   8d6d8:	00800274 	movhi	r2,9
   8d6dc:	1081eb04 	addi	r2,r2,1964
   8d6e0:	1885883a 	add	r2,r3,r2
   8d6e4:	00000106 	br	8d6ec <lseek+0x4c>
   8d6e8:	0005883a 	mov	r2,zero
   8d6ec:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   8d6f0:	e0bffc17 	ldw	r2,-16(fp)
   8d6f4:	10001026 	beq	r2,zero,8d738 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8d6f8:	e0bffc17 	ldw	r2,-16(fp)
   8d6fc:	10800017 	ldw	r2,0(r2)
   8d700:	10800717 	ldw	r2,28(r2)
   8d704:	10000926 	beq	r2,zero,8d72c <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8d708:	e0bffc17 	ldw	r2,-16(fp)
   8d70c:	10800017 	ldw	r2,0(r2)
   8d710:	10800717 	ldw	r2,28(r2)
   8d714:	e13ffc17 	ldw	r4,-16(fp)
   8d718:	e17ffe17 	ldw	r5,-8(fp)
   8d71c:	e1bfff17 	ldw	r6,-4(fp)
   8d720:	103ee83a 	callr	r2
   8d724:	e0bffb15 	stw	r2,-20(fp)
   8d728:	00000506 	br	8d740 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8d72c:	00bfde84 	movi	r2,-134
   8d730:	e0bffb15 	stw	r2,-20(fp)
   8d734:	00000206 	br	8d740 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   8d738:	00bfebc4 	movi	r2,-81
   8d73c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   8d740:	e0bffb17 	ldw	r2,-20(fp)
   8d744:	1000060e 	bge	r2,zero,8d760 <lseek+0xc0>
  {
    ALT_ERRNO = -rc;
   8d748:	008d6500 	call	8d650 <alt_get_errno>
   8d74c:	e0fffb17 	ldw	r3,-20(fp)
   8d750:	00c7c83a 	sub	r3,zero,r3
   8d754:	10c00015 	stw	r3,0(r2)
    rc = -1;
   8d758:	00bfffc4 	movi	r2,-1
   8d75c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   8d760:	e0bffb17 	ldw	r2,-20(fp)
}
   8d764:	e037883a 	mov	sp,fp
   8d768:	dfc00117 	ldw	ra,4(sp)
   8d76c:	df000017 	ldw	fp,0(sp)
   8d770:	dec00204 	addi	sp,sp,8
   8d774:	f800283a 	ret

0008d778 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8d778:	defffd04 	addi	sp,sp,-12
   8d77c:	dfc00215 	stw	ra,8(sp)
   8d780:	df000115 	stw	fp,4(sp)
   8d784:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8d788:	0009883a 	mov	r4,zero
   8d78c:	008dc240 	call	8dc24 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   8d790:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8d794:	008dc580 	call	8dc58 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8d798:	01000274 	movhi	r4,9
   8d79c:	213fb004 	addi	r4,r4,-320
   8d7a0:	01400274 	movhi	r5,9
   8d7a4:	297fb004 	addi	r5,r5,-320
   8d7a8:	01800274 	movhi	r6,9
   8d7ac:	31bfb004 	addi	r6,r6,-320
   8d7b0:	008eeb00 	call	8eeb0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8d7b4:	008ea340 	call	8ea34 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8d7b8:	01000274 	movhi	r4,9
   8d7bc:	213aa404 	addi	r4,r4,-5488
   8d7c0:	008f69c0 	call	8f69c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8d7c4:	d126d217 	ldw	r4,-25784(gp)
   8d7c8:	d0e6d317 	ldw	r3,-25780(gp)
   8d7cc:	d0a6d417 	ldw	r2,-25776(gp)
   8d7d0:	180b883a 	mov	r5,r3
   8d7d4:	100d883a 	mov	r6,r2
   8d7d8:	00802680 	call	80268 <main>
   8d7dc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   8d7e0:	01000044 	movi	r4,1
   8d7e4:	008d2740 	call	8d274 <close>
  exit (result);
   8d7e8:	e13fff17 	ldw	r4,-4(fp)
   8d7ec:	008f6b00 	call	8f6b0 <exit>

0008d7f0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   8d7f0:	defffe04 	addi	sp,sp,-8
   8d7f4:	df000115 	stw	fp,4(sp)
   8d7f8:	df000104 	addi	fp,sp,4
   8d7fc:	e13fff15 	stw	r4,-4(fp)
}
   8d800:	e037883a 	mov	sp,fp
   8d804:	df000017 	ldw	fp,0(sp)
   8d808:	dec00104 	addi	sp,sp,4
   8d80c:	f800283a 	ret

0008d810 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   8d810:	defffe04 	addi	sp,sp,-8
   8d814:	df000115 	stw	fp,4(sp)
   8d818:	df000104 	addi	fp,sp,4
   8d81c:	e13fff15 	stw	r4,-4(fp)
}
   8d820:	e037883a 	mov	sp,fp
   8d824:	df000017 	ldw	fp,0(sp)
   8d828:	dec00104 	addi	sp,sp,4
   8d82c:	f800283a 	ret

0008d830 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d830:	defffe04 	addi	sp,sp,-8
   8d834:	dfc00115 	stw	ra,4(sp)
   8d838:	df000015 	stw	fp,0(sp)
   8d83c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d840:	00800274 	movhi	r2,9
   8d844:	10866e04 	addi	r2,r2,6584
   8d848:	10800017 	ldw	r2,0(r2)
   8d84c:	10000526 	beq	r2,zero,8d864 <alt_get_errno+0x34>
   8d850:	00800274 	movhi	r2,9
   8d854:	10866e04 	addi	r2,r2,6584
   8d858:	10800017 	ldw	r2,0(r2)
   8d85c:	103ee83a 	callr	r2
   8d860:	00000206 	br	8d86c <alt_get_errno+0x3c>
   8d864:	00800274 	movhi	r2,9
   8d868:	108d3404 	addi	r2,r2,13520
}
   8d86c:	e037883a 	mov	sp,fp
   8d870:	dfc00117 	ldw	ra,4(sp)
   8d874:	df000017 	ldw	fp,0(sp)
   8d878:	dec00204 	addi	sp,sp,8
   8d87c:	f800283a 	ret

0008d880 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   8d880:	defff904 	addi	sp,sp,-28
   8d884:	dfc00615 	stw	ra,24(sp)
   8d888:	df000515 	stw	fp,20(sp)
   8d88c:	df000504 	addi	fp,sp,20
   8d890:	e13ffd15 	stw	r4,-12(fp)
   8d894:	e17ffe15 	stw	r5,-8(fp)
   8d898:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d89c:	e0bffd17 	ldw	r2,-12(fp)
   8d8a0:	10000816 	blt	r2,zero,8d8c4 <read+0x44>
   8d8a4:	e13ffd17 	ldw	r4,-12(fp)
   8d8a8:	01400304 	movi	r5,12
   8d8ac:	008aa780 	call	8aa78 <__mulsi3>
   8d8b0:	1007883a 	mov	r3,r2
   8d8b4:	00800274 	movhi	r2,9
   8d8b8:	1081eb04 	addi	r2,r2,1964
   8d8bc:	1885883a 	add	r2,r3,r2
   8d8c0:	00000106 	br	8d8c8 <read+0x48>
   8d8c4:	0005883a 	mov	r2,zero
   8d8c8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8d8cc:	e0bffb17 	ldw	r2,-20(fp)
   8d8d0:	10002026 	beq	r2,zero,8d954 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d8d4:	e0bffb17 	ldw	r2,-20(fp)
   8d8d8:	10800217 	ldw	r2,8(r2)
   8d8dc:	108000cc 	andi	r2,r2,3
   8d8e0:	10800060 	cmpeqi	r2,r2,1
   8d8e4:	1000171e 	bne	r2,zero,8d944 <read+0xc4>
        (fd->dev->read))
   8d8e8:	e0bffb17 	ldw	r2,-20(fp)
   8d8ec:	10800017 	ldw	r2,0(r2)
   8d8f0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d8f4:	10001326 	beq	r2,zero,8d944 <read+0xc4>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   8d8f8:	e0bffb17 	ldw	r2,-20(fp)
   8d8fc:	10800017 	ldw	r2,0(r2)
   8d900:	10800517 	ldw	r2,20(r2)
   8d904:	e0ffff17 	ldw	r3,-4(fp)
   8d908:	e13ffb17 	ldw	r4,-20(fp)
   8d90c:	e17ffe17 	ldw	r5,-8(fp)
   8d910:	180d883a 	mov	r6,r3
   8d914:	103ee83a 	callr	r2
   8d918:	e0bffc15 	stw	r2,-16(fp)
   8d91c:	e0bffc17 	ldw	r2,-16(fp)
   8d920:	1000060e 	bge	r2,zero,8d93c <read+0xbc>
        {
          ALT_ERRNO = -rval;
   8d924:	008d8300 	call	8d830 <alt_get_errno>
   8d928:	e0fffc17 	ldw	r3,-16(fp)
   8d92c:	00c7c83a 	sub	r3,zero,r3
   8d930:	10c00015 	stw	r3,0(r2)
          return -1;
   8d934:	00bfffc4 	movi	r2,-1
   8d938:	00000a06 	br	8d964 <read+0xe4>
        }
        return rval;
   8d93c:	e0bffc17 	ldw	r2,-16(fp)
   8d940:	00000806 	br	8d964 <read+0xe4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   8d944:	008d8300 	call	8d830 <alt_get_errno>
   8d948:	00c00344 	movi	r3,13
   8d94c:	10c00015 	stw	r3,0(r2)
   8d950:	00000306 	br	8d960 <read+0xe0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   8d954:	008d8300 	call	8d830 <alt_get_errno>
   8d958:	00c01444 	movi	r3,81
   8d95c:	10c00015 	stw	r3,0(r2)
  }
  return -1;
   8d960:	00bfffc4 	movi	r2,-1
}
   8d964:	e037883a 	mov	sp,fp
   8d968:	dfc00117 	ldw	ra,4(sp)
   8d96c:	df000017 	ldw	fp,0(sp)
   8d970:	dec00204 	addi	sp,sp,8
   8d974:	f800283a 	ret

0008d978 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   8d978:	defffc04 	addi	sp,sp,-16
   8d97c:	dfc00315 	stw	ra,12(sp)
   8d980:	df000215 	stw	fp,8(sp)
   8d984:	dc000115 	stw	r16,4(sp)
   8d988:	df000204 	addi	fp,sp,8
   8d98c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   8d990:	e0bffe17 	ldw	r2,-8(fp)
   8d994:	108000d0 	cmplti	r2,r2,3
   8d998:	1000111e 	bne	r2,zero,8d9e0 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   8d99c:	04000274 	movhi	r16,9
   8d9a0:	8401eb04 	addi	r16,r16,1964
   8d9a4:	e0bffe17 	ldw	r2,-8(fp)
   8d9a8:	1009883a 	mov	r4,r2
   8d9ac:	01400304 	movi	r5,12
   8d9b0:	008aa780 	call	8aa78 <__mulsi3>
   8d9b4:	8085883a 	add	r2,r16,r2
   8d9b8:	10800204 	addi	r2,r2,8
   8d9bc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   8d9c0:	04000274 	movhi	r16,9
   8d9c4:	8401eb04 	addi	r16,r16,1964
   8d9c8:	e0bffe17 	ldw	r2,-8(fp)
   8d9cc:	1009883a 	mov	r4,r2
   8d9d0:	01400304 	movi	r5,12
   8d9d4:	008aa780 	call	8aa78 <__mulsi3>
   8d9d8:	8085883a 	add	r2,r16,r2
   8d9dc:	10000015 	stw	zero,0(r2)
  }
}
   8d9e0:	e6ffff04 	addi	sp,fp,-4
   8d9e4:	dfc00217 	ldw	ra,8(sp)
   8d9e8:	df000117 	ldw	fp,4(sp)
   8d9ec:	dc000017 	ldw	r16,0(sp)
   8d9f0:	dec00304 	addi	sp,sp,12
   8d9f4:	f800283a 	ret

0008d9f8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   8d9f8:	defff904 	addi	sp,sp,-28
   8d9fc:	df000615 	stw	fp,24(sp)
   8da00:	df000604 	addi	fp,sp,24
   8da04:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8da08:	0005303a 	rdctl	r2,status
   8da0c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8da10:	e0fffc17 	ldw	r3,-16(fp)
   8da14:	00bfff84 	movi	r2,-2
   8da18:	1884703a 	and	r2,r3,r2
   8da1c:	1001703a 	wrctl	status,r2
  
  return context;
   8da20:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   8da24:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   8da28:	d0a00c17 	ldw	r2,-32720(gp)
   8da2c:	10c000c4 	addi	r3,r2,3
   8da30:	00bfff04 	movi	r2,-4
   8da34:	1884703a 	and	r2,r3,r2
   8da38:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   8da3c:	d0e00c17 	ldw	r3,-32720(gp)
   8da40:	e0bfff17 	ldw	r2,-4(fp)
   8da44:	1885883a 	add	r2,r3,r2
   8da48:	00c00334 	movhi	r3,12
   8da4c:	18c00004 	addi	r3,r3,0
   8da50:	1880062e 	bgeu	r3,r2,8da6c <sbrk+0x74>
   8da54:	e0bffa17 	ldw	r2,-24(fp)
   8da58:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8da5c:	e0bffd17 	ldw	r2,-12(fp)
   8da60:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   8da64:	00bfffc4 	movi	r2,-1
   8da68:	00000b06 	br	8da98 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   8da6c:	d0a00c17 	ldw	r2,-32720(gp)
   8da70:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
   8da74:	d0e00c17 	ldw	r3,-32720(gp)
   8da78:	e0bfff17 	ldw	r2,-4(fp)
   8da7c:	1885883a 	add	r2,r3,r2
   8da80:	d0a00c15 	stw	r2,-32720(gp)
   8da84:	e0bffa17 	ldw	r2,-24(fp)
   8da88:	e0bffe15 	stw	r2,-8(fp)
   8da8c:	e0bffe17 	ldw	r2,-8(fp)
   8da90:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   8da94:	e0bffb17 	ldw	r2,-20(fp)
} 
   8da98:	e037883a 	mov	sp,fp
   8da9c:	df000017 	ldw	fp,0(sp)
   8daa0:	dec00104 	addi	sp,sp,4
   8daa4:	f800283a 	ret

0008daa8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8daa8:	defffe04 	addi	sp,sp,-8
   8daac:	dfc00115 	stw	ra,4(sp)
   8dab0:	df000015 	stw	fp,0(sp)
   8dab4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8dab8:	00800274 	movhi	r2,9
   8dabc:	10866e04 	addi	r2,r2,6584
   8dac0:	10800017 	ldw	r2,0(r2)
   8dac4:	10000526 	beq	r2,zero,8dadc <alt_get_errno+0x34>
   8dac8:	00800274 	movhi	r2,9
   8dacc:	10866e04 	addi	r2,r2,6584
   8dad0:	10800017 	ldw	r2,0(r2)
   8dad4:	103ee83a 	callr	r2
   8dad8:	00000206 	br	8dae4 <alt_get_errno+0x3c>
   8dadc:	00800274 	movhi	r2,9
   8dae0:	108d3404 	addi	r2,r2,13520
}
   8dae4:	e037883a 	mov	sp,fp
   8dae8:	dfc00117 	ldw	ra,4(sp)
   8daec:	df000017 	ldw	fp,0(sp)
   8daf0:	dec00204 	addi	sp,sp,8
   8daf4:	f800283a 	ret

0008daf8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   8daf8:	defff904 	addi	sp,sp,-28
   8dafc:	dfc00615 	stw	ra,24(sp)
   8db00:	df000515 	stw	fp,20(sp)
   8db04:	df000504 	addi	fp,sp,20
   8db08:	e13ffd15 	stw	r4,-12(fp)
   8db0c:	e17ffe15 	stw	r5,-8(fp)
   8db10:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8db14:	e0bffd17 	ldw	r2,-12(fp)
   8db18:	10000816 	blt	r2,zero,8db3c <write+0x44>
   8db1c:	e13ffd17 	ldw	r4,-12(fp)
   8db20:	01400304 	movi	r5,12
   8db24:	008aa780 	call	8aa78 <__mulsi3>
   8db28:	1007883a 	mov	r3,r2
   8db2c:	00800274 	movhi	r2,9
   8db30:	1081eb04 	addi	r2,r2,1964
   8db34:	1885883a 	add	r2,r3,r2
   8db38:	00000106 	br	8db40 <write+0x48>
   8db3c:	0005883a 	mov	r2,zero
   8db40:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8db44:	e0bffb17 	ldw	r2,-20(fp)
   8db48:	10001f26 	beq	r2,zero,8dbc8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   8db4c:	e0bffb17 	ldw	r2,-20(fp)
   8db50:	10800217 	ldw	r2,8(r2)
   8db54:	108000cc 	andi	r2,r2,3
   8db58:	10001726 	beq	r2,zero,8dbb8 <write+0xc0>
   8db5c:	e0bffb17 	ldw	r2,-20(fp)
   8db60:	10800017 	ldw	r2,0(r2)
   8db64:	10800617 	ldw	r2,24(r2)
   8db68:	10001326 	beq	r2,zero,8dbb8 <write+0xc0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   8db6c:	e0bffb17 	ldw	r2,-20(fp)
   8db70:	10800017 	ldw	r2,0(r2)
   8db74:	10800617 	ldw	r2,24(r2)
   8db78:	e0ffff17 	ldw	r3,-4(fp)
   8db7c:	e13ffb17 	ldw	r4,-20(fp)
   8db80:	e17ffe17 	ldw	r5,-8(fp)
   8db84:	180d883a 	mov	r6,r3
   8db88:	103ee83a 	callr	r2
   8db8c:	e0bffc15 	stw	r2,-16(fp)
   8db90:	e0bffc17 	ldw	r2,-16(fp)
   8db94:	1000060e 	bge	r2,zero,8dbb0 <write+0xb8>
      {
        ALT_ERRNO = -rval;
   8db98:	008daa80 	call	8daa8 <alt_get_errno>
   8db9c:	e0fffc17 	ldw	r3,-16(fp)
   8dba0:	00c7c83a 	sub	r3,zero,r3
   8dba4:	10c00015 	stw	r3,0(r2)
        return -1;
   8dba8:	00bfffc4 	movi	r2,-1
   8dbac:	00000a06 	br	8dbd8 <write+0xe0>
      }
      return rval;
   8dbb0:	e0bffc17 	ldw	r2,-16(fp)
   8dbb4:	00000806 	br	8dbd8 <write+0xe0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   8dbb8:	008daa80 	call	8daa8 <alt_get_errno>
   8dbbc:	00c00344 	movi	r3,13
   8dbc0:	10c00015 	stw	r3,0(r2)
   8dbc4:	00000306 	br	8dbd4 <write+0xdc>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   8dbc8:	008daa80 	call	8daa8 <alt_get_errno>
   8dbcc:	00c01444 	movi	r3,81
   8dbd0:	10c00015 	stw	r3,0(r2)
  }
  return -1;
   8dbd4:	00bfffc4 	movi	r2,-1
}
   8dbd8:	e037883a 	mov	sp,fp
   8dbdc:	dfc00117 	ldw	ra,4(sp)
   8dbe0:	df000017 	ldw	fp,0(sp)
   8dbe4:	dec00204 	addi	sp,sp,8
   8dbe8:	f800283a 	ret

0008dbec <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   8dbec:	defffd04 	addi	sp,sp,-12
   8dbf0:	dfc00215 	stw	ra,8(sp)
   8dbf4:	df000115 	stw	fp,4(sp)
   8dbf8:	df000104 	addi	fp,sp,4
   8dbfc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   8dc00:	e13fff17 	ldw	r4,-4(fp)
   8dc04:	01400274 	movhi	r5,9
   8dc08:	29466b04 	addi	r5,r5,6572
   8dc0c:	008e9940 	call	8e994 <alt_dev_llist_insert>
}
   8dc10:	e037883a 	mov	sp,fp
   8dc14:	dfc00117 	ldw	ra,4(sp)
   8dc18:	df000017 	ldw	fp,0(sp)
   8dc1c:	dec00204 	addi	sp,sp,8
   8dc20:	f800283a 	ret

0008dc24 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   8dc24:	defffd04 	addi	sp,sp,-12
   8dc28:	dfc00215 	stw	ra,8(sp)
   8dc2c:	df000115 	stw	fp,4(sp)
   8dc30:	df000104 	addi	fp,sp,4
   8dc34:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
   8dc38:	008f3640 	call	8f364 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   8dc3c:	00800044 	movi	r2,1
   8dc40:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   8dc44:	e037883a 	mov	sp,fp
   8dc48:	dfc00117 	ldw	ra,4(sp)
   8dc4c:	df000017 	ldw	fp,0(sp)
   8dc50:	dec00204 	addi	sp,sp,8
   8dc54:	f800283a 	ret

0008dc58 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   8dc58:	defffe04 	addi	sp,sp,-8
   8dc5c:	dfc00115 	stw	ra,4(sp)
   8dc60:	df000015 	stw	fp,0(sp)
   8dc64:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   8dc68:	01000474 	movhi	r4,17
   8dc6c:	21040004 	addi	r4,r4,4096
   8dc70:	000b883a 	mov	r5,zero
   8dc74:	000d883a 	mov	r6,zero
   8dc78:	01c0fa04 	movi	r7,1000
   8dc7c:	008e7600 	call	8e760 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   8dc80:	01000274 	movhi	r4,9
   8dc84:	21025504 	addi	r4,r4,2388
   8dc88:	000b883a 	mov	r5,zero
   8dc8c:	01800044 	movi	r6,1
   8dc90:	008de180 	call	8de18 <altera_avalon_jtag_uart_init>
   8dc94:	01000274 	movhi	r4,9
   8dc98:	21024b04 	addi	r4,r4,2348
   8dc9c:	008dbec0 	call	8dbec <alt_dev_reg>
}
   8dca0:	e037883a 	mov	sp,fp
   8dca4:	dfc00117 	ldw	ra,4(sp)
   8dca8:	df000017 	ldw	fp,0(sp)
   8dcac:	dec00204 	addi	sp,sp,8
   8dcb0:	f800283a 	ret

0008dcb4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   8dcb4:	defffa04 	addi	sp,sp,-24
   8dcb8:	dfc00515 	stw	ra,20(sp)
   8dcbc:	df000415 	stw	fp,16(sp)
   8dcc0:	df000404 	addi	fp,sp,16
   8dcc4:	e13ffd15 	stw	r4,-12(fp)
   8dcc8:	e17ffe15 	stw	r5,-8(fp)
   8dccc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8dcd0:	e0bffd17 	ldw	r2,-12(fp)
   8dcd4:	10800017 	ldw	r2,0(r2)
   8dcd8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   8dcdc:	e0bffc17 	ldw	r2,-16(fp)
   8dce0:	10c00a04 	addi	r3,r2,40
   8dce4:	e0bffd17 	ldw	r2,-12(fp)
   8dce8:	10800217 	ldw	r2,8(r2)
   8dcec:	1809883a 	mov	r4,r3
   8dcf0:	e17ffe17 	ldw	r5,-8(fp)
   8dcf4:	e1bfff17 	ldw	r6,-4(fp)
   8dcf8:	100f883a 	mov	r7,r2
   8dcfc:	008e2cc0 	call	8e2cc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   8dd00:	e037883a 	mov	sp,fp
   8dd04:	dfc00117 	ldw	ra,4(sp)
   8dd08:	df000017 	ldw	fp,0(sp)
   8dd0c:	dec00204 	addi	sp,sp,8
   8dd10:	f800283a 	ret

0008dd14 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   8dd14:	defffa04 	addi	sp,sp,-24
   8dd18:	dfc00515 	stw	ra,20(sp)
   8dd1c:	df000415 	stw	fp,16(sp)
   8dd20:	df000404 	addi	fp,sp,16
   8dd24:	e13ffd15 	stw	r4,-12(fp)
   8dd28:	e17ffe15 	stw	r5,-8(fp)
   8dd2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8dd30:	e0bffd17 	ldw	r2,-12(fp)
   8dd34:	10800017 	ldw	r2,0(r2)
   8dd38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   8dd3c:	e0bffc17 	ldw	r2,-16(fp)
   8dd40:	10c00a04 	addi	r3,r2,40
   8dd44:	e0bffd17 	ldw	r2,-12(fp)
   8dd48:	10800217 	ldw	r2,8(r2)
   8dd4c:	1809883a 	mov	r4,r3
   8dd50:	e17ffe17 	ldw	r5,-8(fp)
   8dd54:	e1bfff17 	ldw	r6,-4(fp)
   8dd58:	100f883a 	mov	r7,r2
   8dd5c:	008e4d40 	call	8e4d4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   8dd60:	e037883a 	mov	sp,fp
   8dd64:	dfc00117 	ldw	ra,4(sp)
   8dd68:	df000017 	ldw	fp,0(sp)
   8dd6c:	dec00204 	addi	sp,sp,8
   8dd70:	f800283a 	ret

0008dd74 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   8dd74:	defffc04 	addi	sp,sp,-16
   8dd78:	dfc00315 	stw	ra,12(sp)
   8dd7c:	df000215 	stw	fp,8(sp)
   8dd80:	df000204 	addi	fp,sp,8
   8dd84:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8dd88:	e0bfff17 	ldw	r2,-4(fp)
   8dd8c:	10800017 	ldw	r2,0(r2)
   8dd90:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   8dd94:	e0bffe17 	ldw	r2,-8(fp)
   8dd98:	10c00a04 	addi	r3,r2,40
   8dd9c:	e0bfff17 	ldw	r2,-4(fp)
   8dda0:	10800217 	ldw	r2,8(r2)
   8dda4:	1809883a 	mov	r4,r3
   8dda8:	100b883a 	mov	r5,r2
   8ddac:	008e1780 	call	8e178 <altera_avalon_jtag_uart_close>
}
   8ddb0:	e037883a 	mov	sp,fp
   8ddb4:	dfc00117 	ldw	ra,4(sp)
   8ddb8:	df000017 	ldw	fp,0(sp)
   8ddbc:	dec00204 	addi	sp,sp,8
   8ddc0:	f800283a 	ret

0008ddc4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   8ddc4:	defffa04 	addi	sp,sp,-24
   8ddc8:	dfc00515 	stw	ra,20(sp)
   8ddcc:	df000415 	stw	fp,16(sp)
   8ddd0:	df000404 	addi	fp,sp,16
   8ddd4:	e13ffd15 	stw	r4,-12(fp)
   8ddd8:	e17ffe15 	stw	r5,-8(fp)
   8dddc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   8dde0:	e0bffd17 	ldw	r2,-12(fp)
   8dde4:	10800017 	ldw	r2,0(r2)
   8dde8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   8ddec:	e0bffc17 	ldw	r2,-16(fp)
   8ddf0:	10800a04 	addi	r2,r2,40
   8ddf4:	1009883a 	mov	r4,r2
   8ddf8:	e17ffe17 	ldw	r5,-8(fp)
   8ddfc:	e1bfff17 	ldw	r6,-4(fp)
   8de00:	008e1e00 	call	8e1e0 <altera_avalon_jtag_uart_ioctl>
}
   8de04:	e037883a 	mov	sp,fp
   8de08:	dfc00117 	ldw	ra,4(sp)
   8de0c:	df000017 	ldw	fp,0(sp)
   8de10:	dec00204 	addi	sp,sp,8
   8de14:	f800283a 	ret

0008de18 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   8de18:	defffa04 	addi	sp,sp,-24
   8de1c:	dfc00515 	stw	ra,20(sp)
   8de20:	df000415 	stw	fp,16(sp)
   8de24:	df000404 	addi	fp,sp,16
   8de28:	e13ffd15 	stw	r4,-12(fp)
   8de2c:	e17ffe15 	stw	r5,-8(fp)
   8de30:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8de34:	e0bffd17 	ldw	r2,-12(fp)
   8de38:	00c00044 	movi	r3,1
   8de3c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   8de40:	e0bffd17 	ldw	r2,-12(fp)
   8de44:	10800017 	ldw	r2,0(r2)
   8de48:	10800104 	addi	r2,r2,4
   8de4c:	e0fffd17 	ldw	r3,-12(fp)
   8de50:	18c00817 	ldw	r3,32(r3)
   8de54:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   8de58:	e0fffe17 	ldw	r3,-8(fp)
   8de5c:	e0bfff17 	ldw	r2,-4(fp)
   8de60:	d8000015 	stw	zero,0(sp)
   8de64:	1809883a 	mov	r4,r3
   8de68:	100b883a 	mov	r5,r2
   8de6c:	01800274 	movhi	r6,9
   8de70:	31b7b604 	addi	r6,r6,-8488
   8de74:	e1fffd17 	ldw	r7,-12(fp)
   8de78:	008eb080 	call	8eb08 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   8de7c:	e0bffd17 	ldw	r2,-12(fp)
   8de80:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   8de84:	e0bffd17 	ldw	r2,-12(fp)
   8de88:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8de8c:	00800274 	movhi	r2,9
   8de90:	108d3904 	addi	r2,r2,13540
   8de94:	10800017 	ldw	r2,0(r2)
   8de98:	1809883a 	mov	r4,r3
   8de9c:	100b883a 	mov	r5,r2
   8dea0:	01800274 	movhi	r6,9
   8dea4:	31b83504 	addi	r6,r6,-7980
   8dea8:	e1fffd17 	ldw	r7,-12(fp)
   8deac:	008e7e80 	call	8e7e8 <alt_alarm_start>
   8deb0:	1000040e 	bge	r2,zero,8dec4 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   8deb4:	e0bffd17 	ldw	r2,-12(fp)
   8deb8:	00e00034 	movhi	r3,32768
   8debc:	18ffffc4 	addi	r3,r3,-1
   8dec0:	10c00115 	stw	r3,4(r2)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   8dec4:	e037883a 	mov	sp,fp
   8dec8:	dfc00117 	ldw	ra,4(sp)
   8decc:	df000017 	ldw	fp,0(sp)
   8ded0:	dec00204 	addi	sp,sp,8
   8ded4:	f800283a 	ret

0008ded8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   8ded8:	defff804 	addi	sp,sp,-32
   8dedc:	df000715 	stw	fp,28(sp)
   8dee0:	df000704 	addi	fp,sp,28
   8dee4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   8dee8:	e0bfff17 	ldw	r2,-4(fp)
   8deec:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   8def0:	e0bffb17 	ldw	r2,-20(fp)
   8def4:	10800017 	ldw	r2,0(r2)
   8def8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8defc:	e0bffc17 	ldw	r2,-16(fp)
   8df00:	10800104 	addi	r2,r2,4
   8df04:	10800037 	ldwio	r2,0(r2)
   8df08:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   8df0c:	e0bffd17 	ldw	r2,-12(fp)
   8df10:	1080c00c 	andi	r2,r2,768
   8df14:	1000011e 	bne	r2,zero,8df1c <altera_avalon_jtag_uart_irq+0x44>
      break;
   8df18:	00006a06 	br	8e0c4 <altera_avalon_jtag_uart_irq+0x1ec>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   8df1c:	e0bffd17 	ldw	r2,-12(fp)
   8df20:	1080400c 	andi	r2,r2,256
   8df24:	10003226 	beq	r2,zero,8dff0 <altera_avalon_jtag_uart_irq+0x118>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   8df28:	00800074 	movhi	r2,1
   8df2c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8df30:	e0bffb17 	ldw	r2,-20(fp)
   8df34:	10800a17 	ldw	r2,40(r2)
   8df38:	10800044 	addi	r2,r2,1
   8df3c:	1081ffcc 	andi	r2,r2,2047
   8df40:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   8df44:	e0bffb17 	ldw	r2,-20(fp)
   8df48:	10c00b17 	ldw	r3,44(r2)
   8df4c:	e0bffe17 	ldw	r2,-8(fp)
   8df50:	1880011e 	bne	r3,r2,8df58 <altera_avalon_jtag_uart_irq+0x80>
          break;
   8df54:	00001506 	br	8dfac <altera_avalon_jtag_uart_irq+0xd4>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   8df58:	e0bffc17 	ldw	r2,-16(fp)
   8df5c:	10800037 	ldwio	r2,0(r2)
   8df60:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   8df64:	e0bff917 	ldw	r2,-28(fp)
   8df68:	10a0000c 	andi	r2,r2,32768
   8df6c:	1000011e 	bne	r2,zero,8df74 <altera_avalon_jtag_uart_irq+0x9c>
          break;
   8df70:	00000e06 	br	8dfac <altera_avalon_jtag_uart_irq+0xd4>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   8df74:	e0bffb17 	ldw	r2,-20(fp)
   8df78:	10800a17 	ldw	r2,40(r2)
   8df7c:	e0fff917 	ldw	r3,-28(fp)
   8df80:	e13ffb17 	ldw	r4,-20(fp)
   8df84:	2085883a 	add	r2,r4,r2
   8df88:	10800e04 	addi	r2,r2,56
   8df8c:	10c00005 	stb	r3,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8df90:	e0bffb17 	ldw	r2,-20(fp)
   8df94:	10800a17 	ldw	r2,40(r2)
   8df98:	10800044 	addi	r2,r2,1
   8df9c:	10c1ffcc 	andi	r3,r2,2047
   8dfa0:	e0bffb17 	ldw	r2,-20(fp)
   8dfa4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   8dfa8:	003fe106 	br	8df30 <altera_avalon_jtag_uart_irq+0x58>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   8dfac:	e0bff917 	ldw	r2,-28(fp)
   8dfb0:	10bfffec 	andhi	r2,r2,65535
   8dfb4:	10000e26 	beq	r2,zero,8dff0 <altera_avalon_jtag_uart_irq+0x118>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8dfb8:	e0bffb17 	ldw	r2,-20(fp)
   8dfbc:	10c00817 	ldw	r3,32(r2)
   8dfc0:	00bfff84 	movi	r2,-2
   8dfc4:	1886703a 	and	r3,r3,r2
   8dfc8:	e0bffb17 	ldw	r2,-20(fp)
   8dfcc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   8dfd0:	e0bffc17 	ldw	r2,-16(fp)
   8dfd4:	10800104 	addi	r2,r2,4
   8dfd8:	e0fffb17 	ldw	r3,-20(fp)
   8dfdc:	18c00817 	ldw	r3,32(r3)
   8dfe0:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8dfe4:	e0bffc17 	ldw	r2,-16(fp)
   8dfe8:	10800104 	addi	r2,r2,4
   8dfec:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   8dff0:	e0bffd17 	ldw	r2,-12(fp)
   8dff4:	1080800c 	andi	r2,r2,512
   8dff8:	10003126 	beq	r2,zero,8e0c0 <altera_avalon_jtag_uart_irq+0x1e8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   8dffc:	e0bffd17 	ldw	r2,-12(fp)
   8e000:	1004d43a 	srli	r2,r2,16
   8e004:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   8e008:	00001406 	br	8e05c <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   8e00c:	e0bffc17 	ldw	r2,-16(fp)
   8e010:	e0fffb17 	ldw	r3,-20(fp)
   8e014:	18c00d17 	ldw	r3,52(r3)
   8e018:	e13ffb17 	ldw	r4,-20(fp)
   8e01c:	20c7883a 	add	r3,r4,r3
   8e020:	18c20e04 	addi	r3,r3,2104
   8e024:	18c00003 	ldbu	r3,0(r3)
   8e028:	18c03fcc 	andi	r3,r3,255
   8e02c:	18c0201c 	xori	r3,r3,128
   8e030:	18ffe004 	addi	r3,r3,-128
   8e034:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e038:	e0bffb17 	ldw	r2,-20(fp)
   8e03c:	10800d17 	ldw	r2,52(r2)
   8e040:	10800044 	addi	r2,r2,1
   8e044:	10c1ffcc 	andi	r3,r2,2047
   8e048:	e0bffb17 	ldw	r2,-20(fp)
   8e04c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   8e050:	e0bffa17 	ldw	r2,-24(fp)
   8e054:	10bfffc4 	addi	r2,r2,-1
   8e058:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   8e05c:	e0bffa17 	ldw	r2,-24(fp)
   8e060:	10000526 	beq	r2,zero,8e078 <altera_avalon_jtag_uart_irq+0x1a0>
   8e064:	e0bffb17 	ldw	r2,-20(fp)
   8e068:	10c00d17 	ldw	r3,52(r2)
   8e06c:	e0bffb17 	ldw	r2,-20(fp)
   8e070:	10800c17 	ldw	r2,48(r2)
   8e074:	18bfe51e 	bne	r3,r2,8e00c <altera_avalon_jtag_uart_irq+0x134>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   8e078:	e0bffa17 	ldw	r2,-24(fp)
   8e07c:	10001026 	beq	r2,zero,8e0c0 <altera_avalon_jtag_uart_irq+0x1e8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e080:	e0bffb17 	ldw	r2,-20(fp)
   8e084:	10c00817 	ldw	r3,32(r2)
   8e088:	00bfff44 	movi	r2,-3
   8e08c:	1886703a 	and	r3,r3,r2
   8e090:	e0bffb17 	ldw	r2,-20(fp)
   8e094:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e098:	e0bffb17 	ldw	r2,-20(fp)
   8e09c:	10800017 	ldw	r2,0(r2)
   8e0a0:	10800104 	addi	r2,r2,4
   8e0a4:	e0fffb17 	ldw	r3,-20(fp)
   8e0a8:	18c00817 	ldw	r3,32(r3)
   8e0ac:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e0b0:	e0bffc17 	ldw	r2,-16(fp)
   8e0b4:	10800104 	addi	r2,r2,4
   8e0b8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   8e0bc:	003f8f06 	br	8defc <altera_avalon_jtag_uart_irq+0x24>
   8e0c0:	003f8e06 	br	8defc <altera_avalon_jtag_uart_irq+0x24>
}
   8e0c4:	e037883a 	mov	sp,fp
   8e0c8:	df000017 	ldw	fp,0(sp)
   8e0cc:	dec00104 	addi	sp,sp,4
   8e0d0:	f800283a 	ret

0008e0d4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   8e0d4:	defff804 	addi	sp,sp,-32
   8e0d8:	df000715 	stw	fp,28(sp)
   8e0dc:	df000704 	addi	fp,sp,28
   8e0e0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   8e0e4:	e0bffb17 	ldw	r2,-20(fp)
   8e0e8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   8e0ec:	e0bff917 	ldw	r2,-28(fp)
   8e0f0:	10800017 	ldw	r2,0(r2)
   8e0f4:	10800104 	addi	r2,r2,4
   8e0f8:	10800037 	ldwio	r2,0(r2)
   8e0fc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   8e100:	e0bffa17 	ldw	r2,-24(fp)
   8e104:	1081000c 	andi	r2,r2,1024
   8e108:	10000a26 	beq	r2,zero,8e134 <altera_avalon_jtag_uart_timeout+0x60>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   8e10c:	e0bff917 	ldw	r2,-28(fp)
   8e110:	10800017 	ldw	r2,0(r2)
   8e114:	10800104 	addi	r2,r2,4
   8e118:	e0fff917 	ldw	r3,-28(fp)
   8e11c:	18c00817 	ldw	r3,32(r3)
   8e120:	18c10014 	ori	r3,r3,1024
   8e124:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   8e128:	e0bff917 	ldw	r2,-28(fp)
   8e12c:	10000915 	stw	zero,36(r2)
   8e130:	00000a06 	br	8e15c <altera_avalon_jtag_uart_timeout+0x88>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   8e134:	e0bff917 	ldw	r2,-28(fp)
   8e138:	10800917 	ldw	r2,36(r2)
   8e13c:	00e00034 	movhi	r3,32768
   8e140:	18ffff04 	addi	r3,r3,-4
   8e144:	18800536 	bltu	r3,r2,8e15c <altera_avalon_jtag_uart_timeout+0x88>
    sp->host_inactive++;
   8e148:	e0bff917 	ldw	r2,-28(fp)
   8e14c:	10800917 	ldw	r2,36(r2)
   8e150:	10c00044 	addi	r3,r2,1
   8e154:	e0bff917 	ldw	r2,-28(fp)
   8e158:	10c00915 	stw	r3,36(r2)
   8e15c:	00800274 	movhi	r2,9
   8e160:	108d3904 	addi	r2,r2,13540
   8e164:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   8e168:	e037883a 	mov	sp,fp
   8e16c:	df000017 	ldw	fp,0(sp)
   8e170:	dec00104 	addi	sp,sp,4
   8e174:	f800283a 	ret

0008e178 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   8e178:	defffd04 	addi	sp,sp,-12
   8e17c:	df000215 	stw	fp,8(sp)
   8e180:	df000204 	addi	fp,sp,8
   8e184:	e13ffe15 	stw	r4,-8(fp)
   8e188:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8e18c:	00000506 	br	8e1a4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   8e190:	e0bfff17 	ldw	r2,-4(fp)
   8e194:	1090000c 	andi	r2,r2,16384
   8e198:	10000226 	beq	r2,zero,8e1a4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   8e19c:	00bffd44 	movi	r2,-11
   8e1a0:	00000b06 	br	8e1d0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8e1a4:	e0bffe17 	ldw	r2,-8(fp)
   8e1a8:	10c00d17 	ldw	r3,52(r2)
   8e1ac:	e0bffe17 	ldw	r2,-8(fp)
   8e1b0:	10800c17 	ldw	r2,48(r2)
   8e1b4:	18800526 	beq	r3,r2,8e1cc <altera_avalon_jtag_uart_close+0x54>
   8e1b8:	e0bffe17 	ldw	r2,-8(fp)
   8e1bc:	10c00917 	ldw	r3,36(r2)
   8e1c0:	e0bffe17 	ldw	r2,-8(fp)
   8e1c4:	10800117 	ldw	r2,4(r2)
   8e1c8:	18bff136 	bltu	r3,r2,8e190 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   8e1cc:	0005883a 	mov	r2,zero
}
   8e1d0:	e037883a 	mov	sp,fp
   8e1d4:	df000017 	ldw	fp,0(sp)
   8e1d8:	dec00104 	addi	sp,sp,4
   8e1dc:	f800283a 	ret

0008e1e0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   8e1e0:	defffa04 	addi	sp,sp,-24
   8e1e4:	df000515 	stw	fp,20(sp)
   8e1e8:	df000504 	addi	fp,sp,20
   8e1ec:	e13ffd15 	stw	r4,-12(fp)
   8e1f0:	e17ffe15 	stw	r5,-8(fp)
   8e1f4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   8e1f8:	00bff9c4 	movi	r2,-25
   8e1fc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   8e200:	e0bffe17 	ldw	r2,-8(fp)
   8e204:	10da8060 	cmpeqi	r3,r2,27137
   8e208:	1800031e 	bne	r3,zero,8e218 <altera_avalon_jtag_uart_ioctl+0x38>
   8e20c:	109a80a0 	cmpeqi	r2,r2,27138
   8e210:	1000191e 	bne	r2,zero,8e278 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   8e214:	00002806 	br	8e2b8 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   8e218:	e0bffd17 	ldw	r2,-12(fp)
   8e21c:	10c00117 	ldw	r3,4(r2)
   8e220:	00a00034 	movhi	r2,32768
   8e224:	10bfffc4 	addi	r2,r2,-1
   8e228:	18801226 	beq	r3,r2,8e274 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
   8e22c:	e0bfff17 	ldw	r2,-4(fp)
   8e230:	10800017 	ldw	r2,0(r2)
   8e234:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   8e238:	e0bffc17 	ldw	r2,-16(fp)
   8e23c:	10800090 	cmplti	r2,r2,2
   8e240:	1000061e 	bne	r2,zero,8e25c <altera_avalon_jtag_uart_ioctl+0x7c>
   8e244:	e0fffc17 	ldw	r3,-16(fp)
   8e248:	00a00034 	movhi	r2,32768
   8e24c:	10bfffc4 	addi	r2,r2,-1
   8e250:	18800226 	beq	r3,r2,8e25c <altera_avalon_jtag_uart_ioctl+0x7c>
   8e254:	e0bffc17 	ldw	r2,-16(fp)
   8e258:	00000206 	br	8e264 <altera_avalon_jtag_uart_ioctl+0x84>
   8e25c:	00a00034 	movhi	r2,32768
   8e260:	10bfff84 	addi	r2,r2,-2
   8e264:	e0fffd17 	ldw	r3,-12(fp)
   8e268:	18800115 	stw	r2,4(r3)
      rc = 0;
   8e26c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8e270:	00001106 	br	8e2b8 <altera_avalon_jtag_uart_ioctl+0xd8>
   8e274:	00001006 	br	8e2b8 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   8e278:	e0bffd17 	ldw	r2,-12(fp)
   8e27c:	10c00117 	ldw	r3,4(r2)
   8e280:	00a00034 	movhi	r2,32768
   8e284:	10bfffc4 	addi	r2,r2,-1
   8e288:	18800a26 	beq	r3,r2,8e2b4 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   8e28c:	e0bffd17 	ldw	r2,-12(fp)
   8e290:	10c00917 	ldw	r3,36(r2)
   8e294:	e0bffd17 	ldw	r2,-12(fp)
   8e298:	10800117 	ldw	r2,4(r2)
   8e29c:	1885803a 	cmpltu	r2,r3,r2
   8e2a0:	10c03fcc 	andi	r3,r2,255
   8e2a4:	e0bfff17 	ldw	r2,-4(fp)
   8e2a8:	10c00015 	stw	r3,0(r2)
      rc = 0;
   8e2ac:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8e2b0:	00000006 	br	8e2b4 <altera_avalon_jtag_uart_ioctl+0xd4>
   8e2b4:	0001883a 	nop

  default:
    break;
  }

  return rc;
   8e2b8:	e0bffb17 	ldw	r2,-20(fp)
}
   8e2bc:	e037883a 	mov	sp,fp
   8e2c0:	df000017 	ldw	fp,0(sp)
   8e2c4:	dec00104 	addi	sp,sp,4
   8e2c8:	f800283a 	ret

0008e2cc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   8e2cc:	defff304 	addi	sp,sp,-52
   8e2d0:	dfc00c15 	stw	ra,48(sp)
   8e2d4:	df000b15 	stw	fp,44(sp)
   8e2d8:	df000b04 	addi	fp,sp,44
   8e2dc:	e13ffc15 	stw	r4,-16(fp)
   8e2e0:	e17ffd15 	stw	r5,-12(fp)
   8e2e4:	e1bffe15 	stw	r6,-8(fp)
   8e2e8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   8e2ec:	e0bffd17 	ldw	r2,-12(fp)
   8e2f0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8e2f4:	00004906 	br	8e41c <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   8e2f8:	e0bffc17 	ldw	r2,-16(fp)
   8e2fc:	10800a17 	ldw	r2,40(r2)
   8e300:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   8e304:	e0bffc17 	ldw	r2,-16(fp)
   8e308:	10800b17 	ldw	r2,44(r2)
   8e30c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   8e310:	e0fff717 	ldw	r3,-36(fp)
   8e314:	e0bff817 	ldw	r2,-32(fp)
   8e318:	18800536 	bltu	r3,r2,8e330 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   8e31c:	e0fff717 	ldw	r3,-36(fp)
   8e320:	e0bff817 	ldw	r2,-32(fp)
   8e324:	1885c83a 	sub	r2,r3,r2
   8e328:	e0bff615 	stw	r2,-40(fp)
   8e32c:	00000406 	br	8e340 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   8e330:	00c20004 	movi	r3,2048
   8e334:	e0bff817 	ldw	r2,-32(fp)
   8e338:	1885c83a 	sub	r2,r3,r2
   8e33c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e340:	e0bff617 	ldw	r2,-40(fp)
   8e344:	1000011e 	bne	r2,zero,8e34c <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
   8e348:	00001d06 	br	8e3c0 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
   8e34c:	e0fffe17 	ldw	r3,-8(fp)
   8e350:	e0bff617 	ldw	r2,-40(fp)
   8e354:	1880022e 	bgeu	r3,r2,8e360 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   8e358:	e0bffe17 	ldw	r2,-8(fp)
   8e35c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   8e360:	e0bff817 	ldw	r2,-32(fp)
   8e364:	10800e04 	addi	r2,r2,56
   8e368:	e0fffc17 	ldw	r3,-16(fp)
   8e36c:	1885883a 	add	r2,r3,r2
   8e370:	e13ff517 	ldw	r4,-44(fp)
   8e374:	100b883a 	mov	r5,r2
   8e378:	e1bff617 	ldw	r6,-40(fp)
   8e37c:	0085fb40 	call	85fb4 <memcpy>
      ptr   += n;
   8e380:	e0fff517 	ldw	r3,-44(fp)
   8e384:	e0bff617 	ldw	r2,-40(fp)
   8e388:	1885883a 	add	r2,r3,r2
   8e38c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   8e390:	e0fffe17 	ldw	r3,-8(fp)
   8e394:	e0bff617 	ldw	r2,-40(fp)
   8e398:	1885c83a 	sub	r2,r3,r2
   8e39c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e3a0:	e0fff817 	ldw	r3,-32(fp)
   8e3a4:	e0bff617 	ldw	r2,-40(fp)
   8e3a8:	1885883a 	add	r2,r3,r2
   8e3ac:	10c1ffcc 	andi	r3,r2,2047
   8e3b0:	e0bffc17 	ldw	r2,-16(fp)
   8e3b4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   8e3b8:	e0bffe17 	ldw	r2,-8(fp)
   8e3bc:	00bfce16 	blt	zero,r2,8e2f8 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   8e3c0:	e0fff517 	ldw	r3,-44(fp)
   8e3c4:	e0bffd17 	ldw	r2,-12(fp)
   8e3c8:	18800126 	beq	r3,r2,8e3d0 <altera_avalon_jtag_uart_read+0x104>
      break;
   8e3cc:	00001506 	br	8e424 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   8e3d0:	e0bfff17 	ldw	r2,-4(fp)
   8e3d4:	1090000c 	andi	r2,r2,16384
   8e3d8:	10000126 	beq	r2,zero,8e3e0 <altera_avalon_jtag_uart_read+0x114>
      break;
   8e3dc:	00001106 	br	8e424 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   8e3e0:	0001883a 	nop
   8e3e4:	e0bffc17 	ldw	r2,-16(fp)
   8e3e8:	10c00a17 	ldw	r3,40(r2)
   8e3ec:	e0bff717 	ldw	r2,-36(fp)
   8e3f0:	1880051e 	bne	r3,r2,8e408 <altera_avalon_jtag_uart_read+0x13c>
   8e3f4:	e0bffc17 	ldw	r2,-16(fp)
   8e3f8:	10c00917 	ldw	r3,36(r2)
   8e3fc:	e0bffc17 	ldw	r2,-16(fp)
   8e400:	10800117 	ldw	r2,4(r2)
   8e404:	18bff736 	bltu	r3,r2,8e3e4 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   8e408:	e0bffc17 	ldw	r2,-16(fp)
   8e40c:	10c00a17 	ldw	r3,40(r2)
   8e410:	e0bff717 	ldw	r2,-36(fp)
   8e414:	1880011e 	bne	r3,r2,8e41c <altera_avalon_jtag_uart_read+0x150>
      break;
   8e418:	00000206 	br	8e424 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8e41c:	e0bffe17 	ldw	r2,-8(fp)
   8e420:	00bfb516 	blt	zero,r2,8e2f8 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   8e424:	e0fff517 	ldw	r3,-44(fp)
   8e428:	e0bffd17 	ldw	r2,-12(fp)
   8e42c:	18801726 	beq	r3,r2,8e48c <altera_avalon_jtag_uart_read+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e430:	0005303a 	rdctl	r2,status
   8e434:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e438:	e0fffa17 	ldw	r3,-24(fp)
   8e43c:	00bfff84 	movi	r2,-2
   8e440:	1884703a 	and	r2,r3,r2
   8e444:	1001703a 	wrctl	status,r2
  
  return context;
   8e448:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   8e44c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8e450:	e0bffc17 	ldw	r2,-16(fp)
   8e454:	10800817 	ldw	r2,32(r2)
   8e458:	10c00054 	ori	r3,r2,1
   8e45c:	e0bffc17 	ldw	r2,-16(fp)
   8e460:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e464:	e0bffc17 	ldw	r2,-16(fp)
   8e468:	10800017 	ldw	r2,0(r2)
   8e46c:	10800104 	addi	r2,r2,4
   8e470:	e0fffc17 	ldw	r3,-16(fp)
   8e474:	18c00817 	ldw	r3,32(r3)
   8e478:	10c00035 	stwio	r3,0(r2)
   8e47c:	e0bff917 	ldw	r2,-28(fp)
   8e480:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e484:	e0bffb17 	ldw	r2,-20(fp)
   8e488:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   8e48c:	e0fff517 	ldw	r3,-44(fp)
   8e490:	e0bffd17 	ldw	r2,-12(fp)
   8e494:	18800426 	beq	r3,r2,8e4a8 <altera_avalon_jtag_uart_read+0x1dc>
    return ptr - buffer;
   8e498:	e0fff517 	ldw	r3,-44(fp)
   8e49c:	e0bffd17 	ldw	r2,-12(fp)
   8e4a0:	1885c83a 	sub	r2,r3,r2
   8e4a4:	00000606 	br	8e4c0 <altera_avalon_jtag_uart_read+0x1f4>
  else if (flags & O_NONBLOCK)
   8e4a8:	e0bfff17 	ldw	r2,-4(fp)
   8e4ac:	1090000c 	andi	r2,r2,16384
   8e4b0:	10000226 	beq	r2,zero,8e4bc <altera_avalon_jtag_uart_read+0x1f0>
    return -EWOULDBLOCK;
   8e4b4:	00bffd44 	movi	r2,-11
   8e4b8:	00000106 	br	8e4c0 <altera_avalon_jtag_uart_read+0x1f4>
  else
    return -EIO;
   8e4bc:	00bffec4 	movi	r2,-5
}
   8e4c0:	e037883a 	mov	sp,fp
   8e4c4:	dfc00117 	ldw	ra,4(sp)
   8e4c8:	df000017 	ldw	fp,0(sp)
   8e4cc:	dec00204 	addi	sp,sp,8
   8e4d0:	f800283a 	ret

0008e4d4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   8e4d4:	defff304 	addi	sp,sp,-52
   8e4d8:	dfc00c15 	stw	ra,48(sp)
   8e4dc:	df000b15 	stw	fp,44(sp)
   8e4e0:	df000b04 	addi	fp,sp,44
   8e4e4:	e13ffc15 	stw	r4,-16(fp)
   8e4e8:	e17ffd15 	stw	r5,-12(fp)
   8e4ec:	e1bffe15 	stw	r6,-8(fp)
   8e4f0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   8e4f4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   8e4f8:	e0bffd17 	ldw	r2,-12(fp)
   8e4fc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e500:	00003906 	br	8e5e8 <altera_avalon_jtag_uart_write+0x114>
   8e504:	00003806 	br	8e5e8 <altera_avalon_jtag_uart_write+0x114>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   8e508:	e0bffc17 	ldw	r2,-16(fp)
   8e50c:	10800c17 	ldw	r2,48(r2)
   8e510:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
   8e514:	e0bffc17 	ldw	r2,-16(fp)
   8e518:	10800d17 	ldw	r2,52(r2)
   8e51c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   8e520:	e0fff817 	ldw	r3,-32(fp)
   8e524:	e0bff517 	ldw	r2,-44(fp)
   8e528:	1880062e 	bgeu	r3,r2,8e544 <altera_avalon_jtag_uart_write+0x70>
        n = out - 1 - in;
   8e52c:	e0fff517 	ldw	r3,-44(fp)
   8e530:	e0bff817 	ldw	r2,-32(fp)
   8e534:	1885c83a 	sub	r2,r3,r2
   8e538:	10bfffc4 	addi	r2,r2,-1
   8e53c:	e0bff615 	stw	r2,-40(fp)
   8e540:	00000b06 	br	8e570 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   8e544:	e0bff517 	ldw	r2,-44(fp)
   8e548:	10000526 	beq	r2,zero,8e560 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   8e54c:	00c20004 	movi	r3,2048
   8e550:	e0bff817 	ldw	r2,-32(fp)
   8e554:	1885c83a 	sub	r2,r3,r2
   8e558:	e0bff615 	stw	r2,-40(fp)
   8e55c:	00000406 	br	8e570 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   8e560:	00c1ffc4 	movi	r3,2047
   8e564:	e0bff817 	ldw	r2,-32(fp)
   8e568:	1885c83a 	sub	r2,r3,r2
   8e56c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e570:	e0bff617 	ldw	r2,-40(fp)
   8e574:	1000011e 	bne	r2,zero,8e57c <altera_avalon_jtag_uart_write+0xa8>
        break;
   8e578:	00001d06 	br	8e5f0 <altera_avalon_jtag_uart_write+0x11c>

      if (n > count)
   8e57c:	e0fffe17 	ldw	r3,-8(fp)
   8e580:	e0bff617 	ldw	r2,-40(fp)
   8e584:	1880022e 	bgeu	r3,r2,8e590 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   8e588:	e0bffe17 	ldw	r2,-8(fp)
   8e58c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   8e590:	e0bff817 	ldw	r2,-32(fp)
   8e594:	10820e04 	addi	r2,r2,2104
   8e598:	e0fffc17 	ldw	r3,-16(fp)
   8e59c:	1885883a 	add	r2,r3,r2
   8e5a0:	1009883a 	mov	r4,r2
   8e5a4:	e17ffd17 	ldw	r5,-12(fp)
   8e5a8:	e1bff617 	ldw	r6,-40(fp)
   8e5ac:	0085fb40 	call	85fb4 <memcpy>
      ptr   += n;
   8e5b0:	e0fffd17 	ldw	r3,-12(fp)
   8e5b4:	e0bff617 	ldw	r2,-40(fp)
   8e5b8:	1885883a 	add	r2,r3,r2
   8e5bc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   8e5c0:	e0fffe17 	ldw	r3,-8(fp)
   8e5c4:	e0bff617 	ldw	r2,-40(fp)
   8e5c8:	1885c83a 	sub	r2,r3,r2
   8e5cc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e5d0:	e0fff817 	ldw	r3,-32(fp)
   8e5d4:	e0bff617 	ldw	r2,-40(fp)
   8e5d8:	1885883a 	add	r2,r3,r2
   8e5dc:	10c1ffcc 	andi	r3,r2,2047
   8e5e0:	e0bffc17 	ldw	r2,-16(fp)
   8e5e4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e5e8:	e0bffe17 	ldw	r2,-8(fp)
   8e5ec:	00bfc616 	blt	zero,r2,8e508 <altera_avalon_jtag_uart_write+0x34>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e5f0:	0005303a 	rdctl	r2,status
   8e5f4:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e5f8:	e0fffa17 	ldw	r3,-24(fp)
   8e5fc:	00bfff84 	movi	r2,-2
   8e600:	1884703a 	and	r2,r3,r2
   8e604:	1001703a 	wrctl	status,r2
  
  return context;
   8e608:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   8e60c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e610:	e0bffc17 	ldw	r2,-16(fp)
   8e614:	10800817 	ldw	r2,32(r2)
   8e618:	10c00094 	ori	r3,r2,2
   8e61c:	e0bffc17 	ldw	r2,-16(fp)
   8e620:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e624:	e0bffc17 	ldw	r2,-16(fp)
   8e628:	10800017 	ldw	r2,0(r2)
   8e62c:	10800104 	addi	r2,r2,4
   8e630:	e0fffc17 	ldw	r3,-16(fp)
   8e634:	18c00817 	ldw	r3,32(r3)
   8e638:	10c00035 	stwio	r3,0(r2)
   8e63c:	e0bff917 	ldw	r2,-28(fp)
   8e640:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e644:	e0bffb17 	ldw	r2,-20(fp)
   8e648:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   8e64c:	e0bffe17 	ldw	r2,-8(fp)
   8e650:	0080120e 	bge	zero,r2,8e69c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   8e654:	e0bfff17 	ldw	r2,-4(fp)
   8e658:	1090000c 	andi	r2,r2,16384
   8e65c:	10000126 	beq	r2,zero,8e664 <altera_avalon_jtag_uart_write+0x190>
        break;
   8e660:	00001006 	br	8e6a4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   8e664:	0001883a 	nop
   8e668:	e0bffc17 	ldw	r2,-16(fp)
   8e66c:	10c00d17 	ldw	r3,52(r2)
   8e670:	e0bff517 	ldw	r2,-44(fp)
   8e674:	1880051e 	bne	r3,r2,8e68c <altera_avalon_jtag_uart_write+0x1b8>
   8e678:	e0bffc17 	ldw	r2,-16(fp)
   8e67c:	10c00917 	ldw	r3,36(r2)
   8e680:	e0bffc17 	ldw	r2,-16(fp)
   8e684:	10800117 	ldw	r2,4(r2)
   8e688:	18bff736 	bltu	r3,r2,8e668 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   8e68c:	e0bffc17 	ldw	r2,-16(fp)
   8e690:	10800917 	ldw	r2,36(r2)
   8e694:	10000126 	beq	r2,zero,8e69c <altera_avalon_jtag_uart_write+0x1c8>
         break;
   8e698:	00000206 	br	8e6a4 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
   8e69c:	e0bffe17 	ldw	r2,-8(fp)
   8e6a0:	00bf9816 	blt	zero,r2,8e504 <altera_avalon_jtag_uart_write+0x30>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   8e6a4:	e0fffd17 	ldw	r3,-12(fp)
   8e6a8:	e0bff717 	ldw	r2,-36(fp)
   8e6ac:	18800426 	beq	r3,r2,8e6c0 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
   8e6b0:	e0fffd17 	ldw	r3,-12(fp)
   8e6b4:	e0bff717 	ldw	r2,-36(fp)
   8e6b8:	1885c83a 	sub	r2,r3,r2
   8e6bc:	00000606 	br	8e6d8 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
   8e6c0:	e0bfff17 	ldw	r2,-4(fp)
   8e6c4:	1090000c 	andi	r2,r2,16384
   8e6c8:	10000226 	beq	r2,zero,8e6d4 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
   8e6cc:	00bffd44 	movi	r2,-11
   8e6d0:	00000106 	br	8e6d8 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   8e6d4:	00bffec4 	movi	r2,-5
}
   8e6d8:	e037883a 	mov	sp,fp
   8e6dc:	dfc00117 	ldw	ra,4(sp)
   8e6e0:	df000017 	ldw	fp,0(sp)
   8e6e4:	dec00204 	addi	sp,sp,8
   8e6e8:	f800283a 	ret

0008e6ec <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   8e6ec:	defffa04 	addi	sp,sp,-24
   8e6f0:	dfc00515 	stw	ra,20(sp)
   8e6f4:	df000415 	stw	fp,16(sp)
   8e6f8:	df000404 	addi	fp,sp,16
   8e6fc:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   8e700:	0007883a 	mov	r3,zero
   8e704:	e0bfff17 	ldw	r2,-4(fp)
   8e708:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   8e70c:	e0bfff17 	ldw	r2,-4(fp)
   8e710:	10800104 	addi	r2,r2,4
   8e714:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e718:	0005303a 	rdctl	r2,status
   8e71c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e720:	e0fffd17 	ldw	r3,-12(fp)
   8e724:	00bfff84 	movi	r2,-2
   8e728:	1884703a 	and	r2,r3,r2
   8e72c:	1001703a 	wrctl	status,r2
  
  return context;
   8e730:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   8e734:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   8e738:	008f2600 	call	8f260 <alt_tick>
   8e73c:	e0bffc17 	ldw	r2,-16(fp)
   8e740:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e744:	e0bffe17 	ldw	r2,-8(fp)
   8e748:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   8e74c:	e037883a 	mov	sp,fp
   8e750:	dfc00117 	ldw	ra,4(sp)
   8e754:	df000017 	ldw	fp,0(sp)
   8e758:	dec00204 	addi	sp,sp,8
   8e75c:	f800283a 	ret

0008e760 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   8e760:	defff804 	addi	sp,sp,-32
   8e764:	dfc00715 	stw	ra,28(sp)
   8e768:	df000615 	stw	fp,24(sp)
   8e76c:	df000604 	addi	fp,sp,24
   8e770:	e13ffc15 	stw	r4,-16(fp)
   8e774:	e17ffd15 	stw	r5,-12(fp)
   8e778:	e1bffe15 	stw	r6,-8(fp)
   8e77c:	e1ffff15 	stw	r7,-4(fp)
   8e780:	e0bfff17 	ldw	r2,-4(fp)
   8e784:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   8e788:	00800274 	movhi	r2,9
   8e78c:	108d3904 	addi	r2,r2,13540
   8e790:	10800017 	ldw	r2,0(r2)
   8e794:	1000041e 	bne	r2,zero,8e7a8 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
   8e798:	00800274 	movhi	r2,9
   8e79c:	108d3904 	addi	r2,r2,13540
   8e7a0:	e0fffb17 	ldw	r3,-20(fp)
   8e7a4:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   8e7a8:	e0bffc17 	ldw	r2,-16(fp)
   8e7ac:	10800104 	addi	r2,r2,4
   8e7b0:	00c001c4 	movi	r3,7
   8e7b4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   8e7b8:	d8000015 	stw	zero,0(sp)
   8e7bc:	e13ffd17 	ldw	r4,-12(fp)
   8e7c0:	e17ffe17 	ldw	r5,-8(fp)
   8e7c4:	01800274 	movhi	r6,9
   8e7c8:	31b9bb04 	addi	r6,r6,-6420
   8e7cc:	e1fffc17 	ldw	r7,-16(fp)
   8e7d0:	008eb080 	call	8eb08 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   8e7d4:	e037883a 	mov	sp,fp
   8e7d8:	dfc00117 	ldw	ra,4(sp)
   8e7dc:	df000017 	ldw	fp,0(sp)
   8e7e0:	dec00204 	addi	sp,sp,8
   8e7e4:	f800283a 	ret

0008e7e8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   8e7e8:	defff504 	addi	sp,sp,-44
   8e7ec:	df000a15 	stw	fp,40(sp)
   8e7f0:	df000a04 	addi	fp,sp,40
   8e7f4:	e13ffc15 	stw	r4,-16(fp)
   8e7f8:	e17ffd15 	stw	r5,-12(fp)
   8e7fc:	e1bffe15 	stw	r6,-8(fp)
   8e800:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   8e804:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8e808:	00800274 	movhi	r2,9
   8e80c:	108d3904 	addi	r2,r2,13540
   8e810:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   8e814:	10003f26 	beq	r2,zero,8e914 <alt_alarm_start+0x12c>
  {
    if (alarm)
   8e818:	e0bffc17 	ldw	r2,-16(fp)
   8e81c:	10003b26 	beq	r2,zero,8e90c <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
   8e820:	e0bffc17 	ldw	r2,-16(fp)
   8e824:	e0fffe17 	ldw	r3,-8(fp)
   8e828:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   8e82c:	e0bffc17 	ldw	r2,-16(fp)
   8e830:	e0ffff17 	ldw	r3,-4(fp)
   8e834:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e838:	0005303a 	rdctl	r2,status
   8e83c:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e840:	e0fff817 	ldw	r3,-32(fp)
   8e844:	00bfff84 	movi	r2,-2
   8e848:	1884703a 	and	r2,r3,r2
   8e84c:	1001703a 	wrctl	status,r2
  
  return context;
   8e850:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   8e854:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   8e858:	00800274 	movhi	r2,9
   8e85c:	108d3a04 	addi	r2,r2,13544
   8e860:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   8e864:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   8e868:	e0fffd17 	ldw	r3,-12(fp)
   8e86c:	e0bff617 	ldw	r2,-40(fp)
   8e870:	1885883a 	add	r2,r3,r2
   8e874:	10c00044 	addi	r3,r2,1
   8e878:	e0bffc17 	ldw	r2,-16(fp)
   8e87c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   8e880:	e0bffc17 	ldw	r2,-16(fp)
   8e884:	10c00217 	ldw	r3,8(r2)
   8e888:	e0bff617 	ldw	r2,-40(fp)
   8e88c:	1880042e 	bgeu	r3,r2,8e8a0 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
   8e890:	e0bffc17 	ldw	r2,-16(fp)
   8e894:	00c00044 	movi	r3,1
   8e898:	10c00405 	stb	r3,16(r2)
   8e89c:	00000206 	br	8e8a8 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
   8e8a0:	e0bffc17 	ldw	r2,-16(fp)
   8e8a4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   8e8a8:	e0bffc17 	ldw	r2,-16(fp)
   8e8ac:	00c00274 	movhi	r3,9
   8e8b0:	18c67104 	addi	r3,r3,6596
   8e8b4:	e0fff915 	stw	r3,-28(fp)
   8e8b8:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e8bc:	e0bffa17 	ldw	r2,-24(fp)
   8e8c0:	e0fff917 	ldw	r3,-28(fp)
   8e8c4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8e8c8:	e0bff917 	ldw	r2,-28(fp)
   8e8cc:	10c00017 	ldw	r3,0(r2)
   8e8d0:	e0bffa17 	ldw	r2,-24(fp)
   8e8d4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8e8d8:	e0bff917 	ldw	r2,-28(fp)
   8e8dc:	10800017 	ldw	r2,0(r2)
   8e8e0:	e0fffa17 	ldw	r3,-24(fp)
   8e8e4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8e8e8:	e0bff917 	ldw	r2,-28(fp)
   8e8ec:	e0fffa17 	ldw	r3,-24(fp)
   8e8f0:	10c00015 	stw	r3,0(r2)
   8e8f4:	e0bff717 	ldw	r2,-36(fp)
   8e8f8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e8fc:	e0bffb17 	ldw	r2,-20(fp)
   8e900:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   8e904:	0005883a 	mov	r2,zero
   8e908:	00000306 	br	8e918 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
   8e90c:	00bffa84 	movi	r2,-22
   8e910:	00000106 	br	8e918 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
   8e914:	00bfde84 	movi	r2,-134
  }
}
   8e918:	e037883a 	mov	sp,fp
   8e91c:	df000017 	ldw	fp,0(sp)
   8e920:	dec00104 	addi	sp,sp,4
   8e924:	f800283a 	ret

0008e928 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   8e928:	deffff04 	addi	sp,sp,-4
   8e92c:	df000015 	stw	fp,0(sp)
   8e930:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   8e934:	e037883a 	mov	sp,fp
   8e938:	df000017 	ldw	fp,0(sp)
   8e93c:	dec00104 	addi	sp,sp,4
   8e940:	f800283a 	ret

0008e944 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8e944:	defffe04 	addi	sp,sp,-8
   8e948:	dfc00115 	stw	ra,4(sp)
   8e94c:	df000015 	stw	fp,0(sp)
   8e950:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8e954:	00800274 	movhi	r2,9
   8e958:	10866e04 	addi	r2,r2,6584
   8e95c:	10800017 	ldw	r2,0(r2)
   8e960:	10000526 	beq	r2,zero,8e978 <alt_get_errno+0x34>
   8e964:	00800274 	movhi	r2,9
   8e968:	10866e04 	addi	r2,r2,6584
   8e96c:	10800017 	ldw	r2,0(r2)
   8e970:	103ee83a 	callr	r2
   8e974:	00000206 	br	8e980 <alt_get_errno+0x3c>
   8e978:	00800274 	movhi	r2,9
   8e97c:	108d3404 	addi	r2,r2,13520
}
   8e980:	e037883a 	mov	sp,fp
   8e984:	dfc00117 	ldw	ra,4(sp)
   8e988:	df000017 	ldw	fp,0(sp)
   8e98c:	dec00204 	addi	sp,sp,8
   8e990:	f800283a 	ret

0008e994 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   8e994:	defffa04 	addi	sp,sp,-24
   8e998:	dfc00515 	stw	ra,20(sp)
   8e99c:	df000415 	stw	fp,16(sp)
   8e9a0:	df000404 	addi	fp,sp,16
   8e9a4:	e13ffe15 	stw	r4,-8(fp)
   8e9a8:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   8e9ac:	e0bffe17 	ldw	r2,-8(fp)
   8e9b0:	10000326 	beq	r2,zero,8e9c0 <alt_dev_llist_insert+0x2c>
   8e9b4:	e0bffe17 	ldw	r2,-8(fp)
   8e9b8:	10800217 	ldw	r2,8(r2)
   8e9bc:	1000051e 	bne	r2,zero,8e9d4 <alt_dev_llist_insert+0x40>
  {
    ALT_ERRNO = EINVAL;
   8e9c0:	008e9440 	call	8e944 <alt_get_errno>
   8e9c4:	00c00584 	movi	r3,22
   8e9c8:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   8e9cc:	00bffa84 	movi	r2,-22
   8e9d0:	00001306 	br	8ea20 <alt_dev_llist_insert+0x8c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   8e9d4:	e0bffe17 	ldw	r2,-8(fp)
   8e9d8:	e0ffff17 	ldw	r3,-4(fp)
   8e9dc:	e0fffc15 	stw	r3,-16(fp)
   8e9e0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e9e4:	e0bffd17 	ldw	r2,-12(fp)
   8e9e8:	e0fffc17 	ldw	r3,-16(fp)
   8e9ec:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8e9f0:	e0bffc17 	ldw	r2,-16(fp)
   8e9f4:	10c00017 	ldw	r3,0(r2)
   8e9f8:	e0bffd17 	ldw	r2,-12(fp)
   8e9fc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8ea00:	e0bffc17 	ldw	r2,-16(fp)
   8ea04:	10800017 	ldw	r2,0(r2)
   8ea08:	e0fffd17 	ldw	r3,-12(fp)
   8ea0c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8ea10:	e0bffc17 	ldw	r2,-16(fp)
   8ea14:	e0fffd17 	ldw	r3,-12(fp)
   8ea18:	10c00015 	stw	r3,0(r2)

  return 0;  
   8ea1c:	0005883a 	mov	r2,zero
}
   8ea20:	e037883a 	mov	sp,fp
   8ea24:	dfc00117 	ldw	ra,4(sp)
   8ea28:	df000017 	ldw	fp,0(sp)
   8ea2c:	dec00204 	addi	sp,sp,8
   8ea30:	f800283a 	ret

0008ea34 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   8ea34:	defffd04 	addi	sp,sp,-12
   8ea38:	dfc00215 	stw	ra,8(sp)
   8ea3c:	df000115 	stw	fp,4(sp)
   8ea40:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8ea44:	00800274 	movhi	r2,9
   8ea48:	10be9504 	addi	r2,r2,-1452
   8ea4c:	e0bfff15 	stw	r2,-4(fp)
   8ea50:	00000606 	br	8ea6c <_do_ctors+0x38>
        (*ctor) (); 
   8ea54:	e0bfff17 	ldw	r2,-4(fp)
   8ea58:	10800017 	ldw	r2,0(r2)
   8ea5c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8ea60:	e0bfff17 	ldw	r2,-4(fp)
   8ea64:	10bfff04 	addi	r2,r2,-4
   8ea68:	e0bfff15 	stw	r2,-4(fp)
   8ea6c:	e0ffff17 	ldw	r3,-4(fp)
   8ea70:	00800274 	movhi	r2,9
   8ea74:	10be9604 	addi	r2,r2,-1448
   8ea78:	18bff62e 	bgeu	r3,r2,8ea54 <_do_ctors+0x20>
        (*ctor) (); 
}
   8ea7c:	e037883a 	mov	sp,fp
   8ea80:	dfc00117 	ldw	ra,4(sp)
   8ea84:	df000017 	ldw	fp,0(sp)
   8ea88:	dec00204 	addi	sp,sp,8
   8ea8c:	f800283a 	ret

0008ea90 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   8ea90:	defffd04 	addi	sp,sp,-12
   8ea94:	dfc00215 	stw	ra,8(sp)
   8ea98:	df000115 	stw	fp,4(sp)
   8ea9c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8eaa0:	00800274 	movhi	r2,9
   8eaa4:	10be9504 	addi	r2,r2,-1452
   8eaa8:	e0bfff15 	stw	r2,-4(fp)
   8eaac:	00000606 	br	8eac8 <_do_dtors+0x38>
        (*dtor) (); 
   8eab0:	e0bfff17 	ldw	r2,-4(fp)
   8eab4:	10800017 	ldw	r2,0(r2)
   8eab8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8eabc:	e0bfff17 	ldw	r2,-4(fp)
   8eac0:	10bfff04 	addi	r2,r2,-4
   8eac4:	e0bfff15 	stw	r2,-4(fp)
   8eac8:	e0ffff17 	ldw	r3,-4(fp)
   8eacc:	00800274 	movhi	r2,9
   8ead0:	10be9604 	addi	r2,r2,-1448
   8ead4:	18bff62e 	bgeu	r3,r2,8eab0 <_do_dtors+0x20>
        (*dtor) (); 
}
   8ead8:	e037883a 	mov	sp,fp
   8eadc:	dfc00117 	ldw	ra,4(sp)
   8eae0:	df000017 	ldw	fp,0(sp)
   8eae4:	dec00204 	addi	sp,sp,8
   8eae8:	f800283a 	ret

0008eaec <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   8eaec:	deffff04 	addi	sp,sp,-4
   8eaf0:	df000015 	stw	fp,0(sp)
   8eaf4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   8eaf8:	e037883a 	mov	sp,fp
   8eafc:	df000017 	ldw	fp,0(sp)
   8eb00:	dec00104 	addi	sp,sp,4
   8eb04:	f800283a 	ret

0008eb08 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8eb08:	defff904 	addi	sp,sp,-28
   8eb0c:	dfc00615 	stw	ra,24(sp)
   8eb10:	df000515 	stw	fp,20(sp)
   8eb14:	df000504 	addi	fp,sp,20
   8eb18:	e13ffc15 	stw	r4,-16(fp)
   8eb1c:	e17ffd15 	stw	r5,-12(fp)
   8eb20:	e1bffe15 	stw	r6,-8(fp)
   8eb24:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   8eb28:	e0800217 	ldw	r2,8(fp)
   8eb2c:	d8800015 	stw	r2,0(sp)
   8eb30:	e13ffc17 	ldw	r4,-16(fp)
   8eb34:	e17ffd17 	ldw	r5,-12(fp)
   8eb38:	e1bffe17 	ldw	r6,-8(fp)
   8eb3c:	e1ffff17 	ldw	r7,-4(fp)
   8eb40:	008ece00 	call	8ece0 <alt_iic_isr_register>
}  
   8eb44:	e037883a 	mov	sp,fp
   8eb48:	dfc00117 	ldw	ra,4(sp)
   8eb4c:	df000017 	ldw	fp,0(sp)
   8eb50:	dec00204 	addi	sp,sp,8
   8eb54:	f800283a 	ret

0008eb58 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   8eb58:	defff904 	addi	sp,sp,-28
   8eb5c:	df000615 	stw	fp,24(sp)
   8eb60:	df000604 	addi	fp,sp,24
   8eb64:	e13ffe15 	stw	r4,-8(fp)
   8eb68:	e17fff15 	stw	r5,-4(fp)
   8eb6c:	e0bfff17 	ldw	r2,-4(fp)
   8eb70:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8eb74:	0005303a 	rdctl	r2,status
   8eb78:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8eb7c:	e0fffb17 	ldw	r3,-20(fp)
   8eb80:	00bfff84 	movi	r2,-2
   8eb84:	1884703a 	and	r2,r3,r2
   8eb88:	1001703a 	wrctl	status,r2
  
  return context;
   8eb8c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8eb90:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   8eb94:	e0bffa17 	ldw	r2,-24(fp)
   8eb98:	00c00044 	movi	r3,1
   8eb9c:	1884983a 	sll	r2,r3,r2
   8eba0:	1007883a 	mov	r3,r2
   8eba4:	00800274 	movhi	r2,9
   8eba8:	108d3804 	addi	r2,r2,13536
   8ebac:	10800017 	ldw	r2,0(r2)
   8ebb0:	1886b03a 	or	r3,r3,r2
   8ebb4:	00800274 	movhi	r2,9
   8ebb8:	108d3804 	addi	r2,r2,13536
   8ebbc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8ebc0:	00800274 	movhi	r2,9
   8ebc4:	108d3804 	addi	r2,r2,13536
   8ebc8:	10800017 	ldw	r2,0(r2)
   8ebcc:	100170fa 	wrctl	ienable,r2
   8ebd0:	e0bffc17 	ldw	r2,-16(fp)
   8ebd4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8ebd8:	e0bffd17 	ldw	r2,-12(fp)
   8ebdc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8ebe0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   8ebe4:	e037883a 	mov	sp,fp
   8ebe8:	df000017 	ldw	fp,0(sp)
   8ebec:	dec00104 	addi	sp,sp,4
   8ebf0:	f800283a 	ret

0008ebf4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   8ebf4:	defff904 	addi	sp,sp,-28
   8ebf8:	df000615 	stw	fp,24(sp)
   8ebfc:	df000604 	addi	fp,sp,24
   8ec00:	e13ffe15 	stw	r4,-8(fp)
   8ec04:	e17fff15 	stw	r5,-4(fp)
   8ec08:	e0bfff17 	ldw	r2,-4(fp)
   8ec0c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8ec10:	0005303a 	rdctl	r2,status
   8ec14:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8ec18:	e0fffb17 	ldw	r3,-20(fp)
   8ec1c:	00bfff84 	movi	r2,-2
   8ec20:	1884703a 	and	r2,r3,r2
   8ec24:	1001703a 	wrctl	status,r2
  
  return context;
   8ec28:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8ec2c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   8ec30:	e0bffa17 	ldw	r2,-24(fp)
   8ec34:	00c00044 	movi	r3,1
   8ec38:	1884983a 	sll	r2,r3,r2
   8ec3c:	0084303a 	nor	r2,zero,r2
   8ec40:	1007883a 	mov	r3,r2
   8ec44:	00800274 	movhi	r2,9
   8ec48:	108d3804 	addi	r2,r2,13536
   8ec4c:	10800017 	ldw	r2,0(r2)
   8ec50:	1886703a 	and	r3,r3,r2
   8ec54:	00800274 	movhi	r2,9
   8ec58:	108d3804 	addi	r2,r2,13536
   8ec5c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8ec60:	00800274 	movhi	r2,9
   8ec64:	108d3804 	addi	r2,r2,13536
   8ec68:	10800017 	ldw	r2,0(r2)
   8ec6c:	100170fa 	wrctl	ienable,r2
   8ec70:	e0bffc17 	ldw	r2,-16(fp)
   8ec74:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8ec78:	e0bffd17 	ldw	r2,-12(fp)
   8ec7c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8ec80:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   8ec84:	e037883a 	mov	sp,fp
   8ec88:	df000017 	ldw	fp,0(sp)
   8ec8c:	dec00104 	addi	sp,sp,4
   8ec90:	f800283a 	ret

0008ec94 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   8ec94:	defffc04 	addi	sp,sp,-16
   8ec98:	df000315 	stw	fp,12(sp)
   8ec9c:	df000304 	addi	fp,sp,12
   8eca0:	e13ffe15 	stw	r4,-8(fp)
   8eca4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   8eca8:	000530fa 	rdctl	r2,ienable
   8ecac:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   8ecb0:	e0bfff17 	ldw	r2,-4(fp)
   8ecb4:	00c00044 	movi	r3,1
   8ecb8:	1884983a 	sll	r2,r3,r2
   8ecbc:	1007883a 	mov	r3,r2
   8ecc0:	e0bffd17 	ldw	r2,-12(fp)
   8ecc4:	1884703a 	and	r2,r3,r2
   8ecc8:	1004c03a 	cmpne	r2,r2,zero
   8eccc:	10803fcc 	andi	r2,r2,255
}
   8ecd0:	e037883a 	mov	sp,fp
   8ecd4:	df000017 	ldw	fp,0(sp)
   8ecd8:	dec00104 	addi	sp,sp,4
   8ecdc:	f800283a 	ret

0008ece0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8ece0:	defff504 	addi	sp,sp,-44
   8ece4:	dfc00a15 	stw	ra,40(sp)
   8ece8:	df000915 	stw	fp,36(sp)
   8ecec:	df000904 	addi	fp,sp,36
   8ecf0:	e13ffc15 	stw	r4,-16(fp)
   8ecf4:	e17ffd15 	stw	r5,-12(fp)
   8ecf8:	e1bffe15 	stw	r6,-8(fp)
   8ecfc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   8ed00:	00bffa84 	movi	r2,-22
   8ed04:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   8ed08:	e0bffd17 	ldw	r2,-12(fp)
   8ed0c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8ed10:	e0bff817 	ldw	r2,-32(fp)
   8ed14:	10800808 	cmpgei	r2,r2,32
   8ed18:	1000271e 	bne	r2,zero,8edb8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8ed1c:	0005303a 	rdctl	r2,status
   8ed20:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8ed24:	e0fffa17 	ldw	r3,-24(fp)
   8ed28:	00bfff84 	movi	r2,-2
   8ed2c:	1884703a 	and	r2,r3,r2
   8ed30:	1001703a 	wrctl	status,r2
  
  return context;
   8ed34:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   8ed38:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
   8ed3c:	00c00274 	movhi	r3,9
   8ed40:	18cd4604 	addi	r3,r3,13592
   8ed44:	e0bff817 	ldw	r2,-32(fp)
   8ed48:	100490fa 	slli	r2,r2,3
   8ed4c:	1885883a 	add	r2,r3,r2
   8ed50:	e0fffe17 	ldw	r3,-8(fp)
   8ed54:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   8ed58:	00c00274 	movhi	r3,9
   8ed5c:	18cd4604 	addi	r3,r3,13592
   8ed60:	e0bff817 	ldw	r2,-32(fp)
   8ed64:	100490fa 	slli	r2,r2,3
   8ed68:	1885883a 	add	r2,r3,r2
   8ed6c:	10800104 	addi	r2,r2,4
   8ed70:	e0ffff17 	ldw	r3,-4(fp)
   8ed74:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   8ed78:	e0bffe17 	ldw	r2,-8(fp)
   8ed7c:	10000526 	beq	r2,zero,8ed94 <alt_iic_isr_register+0xb4>
   8ed80:	e0bff817 	ldw	r2,-32(fp)
   8ed84:	e13ffc17 	ldw	r4,-16(fp)
   8ed88:	100b883a 	mov	r5,r2
   8ed8c:	008eb580 	call	8eb58 <alt_ic_irq_enable>
   8ed90:	00000406 	br	8eda4 <alt_iic_isr_register+0xc4>
   8ed94:	e0bff817 	ldw	r2,-32(fp)
   8ed98:	e13ffc17 	ldw	r4,-16(fp)
   8ed9c:	100b883a 	mov	r5,r2
   8eda0:	008ebf40 	call	8ebf4 <alt_ic_irq_disable>
   8eda4:	e0bff715 	stw	r2,-36(fp)
   8eda8:	e0bff917 	ldw	r2,-28(fp)
   8edac:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8edb0:	e0bffb17 	ldw	r2,-20(fp)
   8edb4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   8edb8:	e0bff717 	ldw	r2,-36(fp)
}
   8edbc:	e037883a 	mov	sp,fp
   8edc0:	dfc00117 	ldw	ra,4(sp)
   8edc4:	df000017 	ldw	fp,0(sp)
   8edc8:	dec00204 	addi	sp,sp,8
   8edcc:	f800283a 	ret

0008edd0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   8edd0:	defff804 	addi	sp,sp,-32
   8edd4:	dfc00715 	stw	ra,28(sp)
   8edd8:	df000615 	stw	fp,24(sp)
   8eddc:	dc000515 	stw	r16,20(sp)
   8ede0:	df000604 	addi	fp,sp,24
   8ede4:	e13ffb15 	stw	r4,-20(fp)
   8ede8:	e17ffc15 	stw	r5,-16(fp)
   8edec:	e1bffd15 	stw	r6,-12(fp)
   8edf0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   8edf4:	e13ffc17 	ldw	r4,-16(fp)
   8edf8:	e17ffd17 	ldw	r5,-12(fp)
   8edfc:	e1bffe17 	ldw	r6,-8(fp)
   8ee00:	008f06c0 	call	8f06c <open>
   8ee04:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   8ee08:	e0bffa17 	ldw	r2,-24(fp)
   8ee0c:	10002216 	blt	r2,zero,8ee98 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   8ee10:	04000274 	movhi	r16,9
   8ee14:	8401eb04 	addi	r16,r16,1964
   8ee18:	e0bffa17 	ldw	r2,-24(fp)
   8ee1c:	1009883a 	mov	r4,r2
   8ee20:	01400304 	movi	r5,12
   8ee24:	008aa780 	call	8aa78 <__mulsi3>
   8ee28:	8085883a 	add	r2,r16,r2
   8ee2c:	10c00017 	ldw	r3,0(r2)
   8ee30:	e0bffb17 	ldw	r2,-20(fp)
   8ee34:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   8ee38:	04000274 	movhi	r16,9
   8ee3c:	8401eb04 	addi	r16,r16,1964
   8ee40:	e0bffa17 	ldw	r2,-24(fp)
   8ee44:	1009883a 	mov	r4,r2
   8ee48:	01400304 	movi	r5,12
   8ee4c:	008aa780 	call	8aa78 <__mulsi3>
   8ee50:	8085883a 	add	r2,r16,r2
   8ee54:	10800104 	addi	r2,r2,4
   8ee58:	10c00017 	ldw	r3,0(r2)
   8ee5c:	e0bffb17 	ldw	r2,-20(fp)
   8ee60:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   8ee64:	04000274 	movhi	r16,9
   8ee68:	8401eb04 	addi	r16,r16,1964
   8ee6c:	e0bffa17 	ldw	r2,-24(fp)
   8ee70:	1009883a 	mov	r4,r2
   8ee74:	01400304 	movi	r5,12
   8ee78:	008aa780 	call	8aa78 <__mulsi3>
   8ee7c:	8085883a 	add	r2,r16,r2
   8ee80:	10800204 	addi	r2,r2,8
   8ee84:	10c00017 	ldw	r3,0(r2)
   8ee88:	e0bffb17 	ldw	r2,-20(fp)
   8ee8c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   8ee90:	e13ffa17 	ldw	r4,-24(fp)
   8ee94:	008d9780 	call	8d978 <alt_release_fd>
  }
} 
   8ee98:	e6ffff04 	addi	sp,fp,-4
   8ee9c:	dfc00217 	ldw	ra,8(sp)
   8eea0:	df000117 	ldw	fp,4(sp)
   8eea4:	dc000017 	ldw	r16,0(sp)
   8eea8:	dec00304 	addi	sp,sp,12
   8eeac:	f800283a 	ret

0008eeb0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   8eeb0:	defffb04 	addi	sp,sp,-20
   8eeb4:	dfc00415 	stw	ra,16(sp)
   8eeb8:	df000315 	stw	fp,12(sp)
   8eebc:	df000304 	addi	fp,sp,12
   8eec0:	e13ffd15 	stw	r4,-12(fp)
   8eec4:	e17ffe15 	stw	r5,-8(fp)
   8eec8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   8eecc:	01000274 	movhi	r4,9
   8eed0:	2101ee04 	addi	r4,r4,1976
   8eed4:	e17ffd17 	ldw	r5,-12(fp)
   8eed8:	01800044 	movi	r6,1
   8eedc:	01c07fc4 	movi	r7,511
   8eee0:	008edd00 	call	8edd0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   8eee4:	01000274 	movhi	r4,9
   8eee8:	2101eb04 	addi	r4,r4,1964
   8eeec:	e17ffe17 	ldw	r5,-8(fp)
   8eef0:	000d883a 	mov	r6,zero
   8eef4:	01c07fc4 	movi	r7,511
   8eef8:	008edd00 	call	8edd0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   8eefc:	01000274 	movhi	r4,9
   8ef00:	2101f104 	addi	r4,r4,1988
   8ef04:	e17fff17 	ldw	r5,-4(fp)
   8ef08:	01800044 	movi	r6,1
   8ef0c:	01c07fc4 	movi	r7,511
   8ef10:	008edd00 	call	8edd0 <alt_open_fd>
}  
   8ef14:	e037883a 	mov	sp,fp
   8ef18:	dfc00117 	ldw	ra,4(sp)
   8ef1c:	df000017 	ldw	fp,0(sp)
   8ef20:	dec00204 	addi	sp,sp,8
   8ef24:	f800283a 	ret

0008ef28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ef28:	defffe04 	addi	sp,sp,-8
   8ef2c:	dfc00115 	stw	ra,4(sp)
   8ef30:	df000015 	stw	fp,0(sp)
   8ef34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8ef38:	00800274 	movhi	r2,9
   8ef3c:	10866e04 	addi	r2,r2,6584
   8ef40:	10800017 	ldw	r2,0(r2)
   8ef44:	10000526 	beq	r2,zero,8ef5c <alt_get_errno+0x34>
   8ef48:	00800274 	movhi	r2,9
   8ef4c:	10866e04 	addi	r2,r2,6584
   8ef50:	10800017 	ldw	r2,0(r2)
   8ef54:	103ee83a 	callr	r2
   8ef58:	00000206 	br	8ef64 <alt_get_errno+0x3c>
   8ef5c:	00800274 	movhi	r2,9
   8ef60:	108d3404 	addi	r2,r2,13520
}
   8ef64:	e037883a 	mov	sp,fp
   8ef68:	dfc00117 	ldw	ra,4(sp)
   8ef6c:	df000017 	ldw	fp,0(sp)
   8ef70:	dec00204 	addi	sp,sp,8
   8ef74:	f800283a 	ret

0008ef78 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   8ef78:	defffb04 	addi	sp,sp,-20
   8ef7c:	dfc00415 	stw	ra,16(sp)
   8ef80:	df000315 	stw	fp,12(sp)
   8ef84:	dc000215 	stw	r16,8(sp)
   8ef88:	df000304 	addi	fp,sp,12
   8ef8c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   8ef90:	e0bffe17 	ldw	r2,-8(fp)
   8ef94:	10800217 	ldw	r2,8(r2)
   8ef98:	10d00034 	orhi	r3,r2,16384
   8ef9c:	e0bffe17 	ldw	r2,-8(fp)
   8efa0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8efa4:	e03ffd15 	stw	zero,-12(fp)
   8efa8:	00002306 	br	8f038 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8efac:	04000274 	movhi	r16,9
   8efb0:	8401eb04 	addi	r16,r16,1964
   8efb4:	e0bffd17 	ldw	r2,-12(fp)
   8efb8:	1009883a 	mov	r4,r2
   8efbc:	01400304 	movi	r5,12
   8efc0:	008aa780 	call	8aa78 <__mulsi3>
   8efc4:	8085883a 	add	r2,r16,r2
   8efc8:	10c00017 	ldw	r3,0(r2)
   8efcc:	e0bffe17 	ldw	r2,-8(fp)
   8efd0:	10800017 	ldw	r2,0(r2)
   8efd4:	1880151e 	bne	r3,r2,8f02c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8efd8:	04000274 	movhi	r16,9
   8efdc:	8401eb04 	addi	r16,r16,1964
   8efe0:	e0bffd17 	ldw	r2,-12(fp)
   8efe4:	1009883a 	mov	r4,r2
   8efe8:	01400304 	movi	r5,12
   8efec:	008aa780 	call	8aa78 <__mulsi3>
   8eff0:	8085883a 	add	r2,r16,r2
   8eff4:	10800204 	addi	r2,r2,8
   8eff8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8effc:	10000b0e 	bge	r2,zero,8f02c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   8f000:	e13ffd17 	ldw	r4,-12(fp)
   8f004:	01400304 	movi	r5,12
   8f008:	008aa780 	call	8aa78 <__mulsi3>
   8f00c:	1007883a 	mov	r3,r2
   8f010:	00800274 	movhi	r2,9
   8f014:	1081eb04 	addi	r2,r2,1964
   8f018:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8f01c:	e0bffe17 	ldw	r2,-8(fp)
   8f020:	18800226 	beq	r3,r2,8f02c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   8f024:	00bffcc4 	movi	r2,-13
   8f028:	00000a06 	br	8f054 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8f02c:	e0bffd17 	ldw	r2,-12(fp)
   8f030:	10800044 	addi	r2,r2,1
   8f034:	e0bffd15 	stw	r2,-12(fp)
   8f038:	00800274 	movhi	r2,9
   8f03c:	10866d04 	addi	r2,r2,6580
   8f040:	10800017 	ldw	r2,0(r2)
   8f044:	1007883a 	mov	r3,r2
   8f048:	e0bffd17 	ldw	r2,-12(fp)
   8f04c:	18bfd72e 	bgeu	r3,r2,8efac <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   8f050:	0005883a 	mov	r2,zero
}
   8f054:	e6ffff04 	addi	sp,fp,-4
   8f058:	dfc00217 	ldw	ra,8(sp)
   8f05c:	df000117 	ldw	fp,4(sp)
   8f060:	dc000017 	ldw	r16,0(sp)
   8f064:	dec00304 	addi	sp,sp,12
   8f068:	f800283a 	ret

0008f06c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   8f06c:	defff604 	addi	sp,sp,-40
   8f070:	dfc00915 	stw	ra,36(sp)
   8f074:	df000815 	stw	fp,32(sp)
   8f078:	df000804 	addi	fp,sp,32
   8f07c:	e13ffd15 	stw	r4,-12(fp)
   8f080:	e17ffe15 	stw	r5,-8(fp)
   8f084:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   8f088:	00bfffc4 	movi	r2,-1
   8f08c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   8f090:	00bffb44 	movi	r2,-19
   8f094:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   8f098:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   8f09c:	e13ffd17 	ldw	r4,-12(fp)
   8f0a0:	01400274 	movhi	r5,9
   8f0a4:	29466b04 	addi	r5,r5,6572
   8f0a8:	008f3840 	call	8f384 <alt_find_dev>
   8f0ac:	e0bff815 	stw	r2,-32(fp)
   8f0b0:	e0bff817 	ldw	r2,-32(fp)
   8f0b4:	1000051e 	bne	r2,zero,8f0cc <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   8f0b8:	e13ffd17 	ldw	r4,-12(fp)
   8f0bc:	008f4140 	call	8f414 <alt_find_file>
   8f0c0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   8f0c4:	00800044 	movi	r2,1
   8f0c8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   8f0cc:	e0bff817 	ldw	r2,-32(fp)
   8f0d0:	10002b26 	beq	r2,zero,8f180 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   8f0d4:	e13ff817 	ldw	r4,-32(fp)
   8f0d8:	008f5280 	call	8f528 <alt_get_fd>
   8f0dc:	e0bff915 	stw	r2,-28(fp)
   8f0e0:	e0bff917 	ldw	r2,-28(fp)
   8f0e4:	1000030e 	bge	r2,zero,8f0f4 <open+0x88>
    {
      status = index;
   8f0e8:	e0bff917 	ldw	r2,-28(fp)
   8f0ec:	e0bffa15 	stw	r2,-24(fp)
   8f0f0:	00002506 	br	8f188 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   8f0f4:	e13ff917 	ldw	r4,-28(fp)
   8f0f8:	01400304 	movi	r5,12
   8f0fc:	008aa780 	call	8aa78 <__mulsi3>
   8f100:	1007883a 	mov	r3,r2
   8f104:	00800274 	movhi	r2,9
   8f108:	1081eb04 	addi	r2,r2,1964
   8f10c:	1885883a 	add	r2,r3,r2
   8f110:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   8f114:	e0fffe17 	ldw	r3,-8(fp)
   8f118:	00900034 	movhi	r2,16384
   8f11c:	10bfffc4 	addi	r2,r2,-1
   8f120:	1886703a 	and	r3,r3,r2
   8f124:	e0bffc17 	ldw	r2,-16(fp)
   8f128:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   8f12c:	e0bffb17 	ldw	r2,-20(fp)
   8f130:	1000051e 	bne	r2,zero,8f148 <open+0xdc>
   8f134:	e13ffc17 	ldw	r4,-16(fp)
   8f138:	008ef780 	call	8ef78 <alt_file_locked>
   8f13c:	e0bffa15 	stw	r2,-24(fp)
   8f140:	e0bffa17 	ldw	r2,-24(fp)
   8f144:	10001016 	blt	r2,zero,8f188 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   8f148:	e0bff817 	ldw	r2,-32(fp)
   8f14c:	10800317 	ldw	r2,12(r2)
   8f150:	10000826 	beq	r2,zero,8f174 <open+0x108>
   8f154:	e0bff817 	ldw	r2,-32(fp)
   8f158:	10800317 	ldw	r2,12(r2)
   8f15c:	e13ffc17 	ldw	r4,-16(fp)
   8f160:	e17ffd17 	ldw	r5,-12(fp)
   8f164:	e1bffe17 	ldw	r6,-8(fp)
   8f168:	e1ffff17 	ldw	r7,-4(fp)
   8f16c:	103ee83a 	callr	r2
   8f170:	00000106 	br	8f178 <open+0x10c>
   8f174:	0005883a 	mov	r2,zero
   8f178:	e0bffa15 	stw	r2,-24(fp)
   8f17c:	00000206 	br	8f188 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   8f180:	00bffb44 	movi	r2,-19
   8f184:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   8f188:	e0bffa17 	ldw	r2,-24(fp)
   8f18c:	1000080e 	bge	r2,zero,8f1b0 <open+0x144>
  {
    alt_release_fd (index);  
   8f190:	e13ff917 	ldw	r4,-28(fp)
   8f194:	008d9780 	call	8d978 <alt_release_fd>
    ALT_ERRNO = -status;
   8f198:	008ef280 	call	8ef28 <alt_get_errno>
   8f19c:	e0fffa17 	ldw	r3,-24(fp)
   8f1a0:	00c7c83a 	sub	r3,zero,r3
   8f1a4:	10c00015 	stw	r3,0(r2)
    return -1;
   8f1a8:	00bfffc4 	movi	r2,-1
   8f1ac:	00000106 	br	8f1b4 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   8f1b0:	e0bff917 	ldw	r2,-28(fp)
}
   8f1b4:	e037883a 	mov	sp,fp
   8f1b8:	dfc00117 	ldw	ra,4(sp)
   8f1bc:	df000017 	ldw	fp,0(sp)
   8f1c0:	dec00204 	addi	sp,sp,8
   8f1c4:	f800283a 	ret

0008f1c8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   8f1c8:	defffa04 	addi	sp,sp,-24
   8f1cc:	df000515 	stw	fp,20(sp)
   8f1d0:	df000504 	addi	fp,sp,20
   8f1d4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8f1d8:	0005303a 	rdctl	r2,status
   8f1dc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8f1e0:	e0fffc17 	ldw	r3,-16(fp)
   8f1e4:	00bfff84 	movi	r2,-2
   8f1e8:	1884703a 	and	r2,r3,r2
   8f1ec:	1001703a 	wrctl	status,r2
  
  return context;
   8f1f0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   8f1f4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   8f1f8:	e0bfff17 	ldw	r2,-4(fp)
   8f1fc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   8f200:	e0bffd17 	ldw	r2,-12(fp)
   8f204:	10800017 	ldw	r2,0(r2)
   8f208:	e0fffd17 	ldw	r3,-12(fp)
   8f20c:	18c00117 	ldw	r3,4(r3)
   8f210:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   8f214:	e0bffd17 	ldw	r2,-12(fp)
   8f218:	10800117 	ldw	r2,4(r2)
   8f21c:	e0fffd17 	ldw	r3,-12(fp)
   8f220:	18c00017 	ldw	r3,0(r3)
   8f224:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   8f228:	e0bffd17 	ldw	r2,-12(fp)
   8f22c:	e0fffd17 	ldw	r3,-12(fp)
   8f230:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   8f234:	e0bffd17 	ldw	r2,-12(fp)
   8f238:	e0fffd17 	ldw	r3,-12(fp)
   8f23c:	10c00015 	stw	r3,0(r2)
   8f240:	e0bffb17 	ldw	r2,-20(fp)
   8f244:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8f248:	e0bffe17 	ldw	r2,-8(fp)
   8f24c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   8f250:	e037883a 	mov	sp,fp
   8f254:	df000017 	ldw	fp,0(sp)
   8f258:	dec00104 	addi	sp,sp,4
   8f25c:	f800283a 	ret

0008f260 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   8f260:	defffb04 	addi	sp,sp,-20
   8f264:	dfc00415 	stw	ra,16(sp)
   8f268:	df000315 	stw	fp,12(sp)
   8f26c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   8f270:	d0a00e17 	ldw	r2,-32712(gp)
   8f274:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   8f278:	d0a6d717 	ldw	r2,-25764(gp)
   8f27c:	10800044 	addi	r2,r2,1
   8f280:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f284:	00002e06 	br	8f340 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   8f288:	e0bffd17 	ldw	r2,-12(fp)
   8f28c:	10800017 	ldw	r2,0(r2)
   8f290:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   8f294:	e0bffd17 	ldw	r2,-12(fp)
   8f298:	10800403 	ldbu	r2,16(r2)
   8f29c:	10803fcc 	andi	r2,r2,255
   8f2a0:	10000426 	beq	r2,zero,8f2b4 <alt_tick+0x54>
   8f2a4:	d0a6d717 	ldw	r2,-25764(gp)
   8f2a8:	1000021e 	bne	r2,zero,8f2b4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   8f2ac:	e0bffd17 	ldw	r2,-12(fp)
   8f2b0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   8f2b4:	e0bffd17 	ldw	r2,-12(fp)
   8f2b8:	10800217 	ldw	r2,8(r2)
   8f2bc:	d0e6d717 	ldw	r3,-25764(gp)
   8f2c0:	18801d36 	bltu	r3,r2,8f338 <alt_tick+0xd8>
   8f2c4:	e0bffd17 	ldw	r2,-12(fp)
   8f2c8:	10800403 	ldbu	r2,16(r2)
   8f2cc:	10803fcc 	andi	r2,r2,255
   8f2d0:	1000191e 	bne	r2,zero,8f338 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   8f2d4:	e0bffd17 	ldw	r2,-12(fp)
   8f2d8:	10800317 	ldw	r2,12(r2)
   8f2dc:	e0fffd17 	ldw	r3,-12(fp)
   8f2e0:	18c00517 	ldw	r3,20(r3)
   8f2e4:	1809883a 	mov	r4,r3
   8f2e8:	103ee83a 	callr	r2
   8f2ec:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   8f2f0:	e0bfff17 	ldw	r2,-4(fp)
   8f2f4:	1000031e 	bne	r2,zero,8f304 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   8f2f8:	e13ffd17 	ldw	r4,-12(fp)
   8f2fc:	008f1c80 	call	8f1c8 <alt_alarm_stop>
   8f300:	00000d06 	br	8f338 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   8f304:	e0bffd17 	ldw	r2,-12(fp)
   8f308:	10c00217 	ldw	r3,8(r2)
   8f30c:	e0bfff17 	ldw	r2,-4(fp)
   8f310:	1887883a 	add	r3,r3,r2
   8f314:	e0bffd17 	ldw	r2,-12(fp)
   8f318:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   8f31c:	e0bffd17 	ldw	r2,-12(fp)
   8f320:	10c00217 	ldw	r3,8(r2)
   8f324:	d0a6d717 	ldw	r2,-25764(gp)
   8f328:	1880032e 	bgeu	r3,r2,8f338 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   8f32c:	e0bffd17 	ldw	r2,-12(fp)
   8f330:	00c00044 	movi	r3,1
   8f334:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   8f338:	e0bffe17 	ldw	r2,-8(fp)
   8f33c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f340:	e0fffd17 	ldw	r3,-12(fp)
   8f344:	d0a00e04 	addi	r2,gp,-32712
   8f348:	18bfcf1e 	bne	r3,r2,8f288 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   8f34c:	0001883a 	nop
}
   8f350:	e037883a 	mov	sp,fp
   8f354:	dfc00117 	ldw	ra,4(sp)
   8f358:	df000017 	ldw	fp,0(sp)
   8f35c:	dec00204 	addi	sp,sp,8
   8f360:	f800283a 	ret

0008f364 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   8f364:	deffff04 	addi	sp,sp,-4
   8f368:	df000015 	stw	fp,0(sp)
   8f36c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   8f370:	000170fa 	wrctl	ienable,zero
}
   8f374:	e037883a 	mov	sp,fp
   8f378:	df000017 	ldw	fp,0(sp)
   8f37c:	dec00104 	addi	sp,sp,4
   8f380:	f800283a 	ret

0008f384 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   8f384:	defffa04 	addi	sp,sp,-24
   8f388:	dfc00515 	stw	ra,20(sp)
   8f38c:	df000415 	stw	fp,16(sp)
   8f390:	df000404 	addi	fp,sp,16
   8f394:	e13ffe15 	stw	r4,-8(fp)
   8f398:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   8f39c:	e0bfff17 	ldw	r2,-4(fp)
   8f3a0:	10800017 	ldw	r2,0(r2)
   8f3a4:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   8f3a8:	e13ffe17 	ldw	r4,-8(fp)
   8f3ac:	00808b00 	call	808b0 <strlen>
   8f3b0:	10800044 	addi	r2,r2,1
   8f3b4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f3b8:	00000d06 	br	8f3f0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   8f3bc:	e0bffc17 	ldw	r2,-16(fp)
   8f3c0:	10c00217 	ldw	r3,8(r2)
   8f3c4:	e0bffd17 	ldw	r2,-12(fp)
   8f3c8:	1809883a 	mov	r4,r3
   8f3cc:	e17ffe17 	ldw	r5,-8(fp)
   8f3d0:	100d883a 	mov	r6,r2
   8f3d4:	008f6e80 	call	8f6e8 <memcmp>
   8f3d8:	1000021e 	bne	r2,zero,8f3e4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   8f3dc:	e0bffc17 	ldw	r2,-16(fp)
   8f3e0:	00000706 	br	8f400 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   8f3e4:	e0bffc17 	ldw	r2,-16(fp)
   8f3e8:	10800017 	ldw	r2,0(r2)
   8f3ec:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f3f0:	e0fffc17 	ldw	r3,-16(fp)
   8f3f4:	e0bfff17 	ldw	r2,-4(fp)
   8f3f8:	18bff01e 	bne	r3,r2,8f3bc <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   8f3fc:	0005883a 	mov	r2,zero
}
   8f400:	e037883a 	mov	sp,fp
   8f404:	dfc00117 	ldw	ra,4(sp)
   8f408:	df000017 	ldw	fp,0(sp)
   8f40c:	dec00204 	addi	sp,sp,8
   8f410:	f800283a 	ret

0008f414 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   8f414:	defffb04 	addi	sp,sp,-20
   8f418:	dfc00415 	stw	ra,16(sp)
   8f41c:	df000315 	stw	fp,12(sp)
   8f420:	df000304 	addi	fp,sp,12
   8f424:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   8f428:	00800274 	movhi	r2,9
   8f42c:	10866904 	addi	r2,r2,6564
   8f430:	10800017 	ldw	r2,0(r2)
   8f434:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f438:	00003106 	br	8f500 <alt_find_file+0xec>
  {
    len = strlen(next->name);
   8f43c:	e0bffd17 	ldw	r2,-12(fp)
   8f440:	10800217 	ldw	r2,8(r2)
   8f444:	1009883a 	mov	r4,r2
   8f448:	00808b00 	call	808b0 <strlen>
   8f44c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   8f450:	e0bffd17 	ldw	r2,-12(fp)
   8f454:	10c00217 	ldw	r3,8(r2)
   8f458:	e0bffe17 	ldw	r2,-8(fp)
   8f45c:	10bfffc4 	addi	r2,r2,-1
   8f460:	1885883a 	add	r2,r3,r2
   8f464:	10800003 	ldbu	r2,0(r2)
   8f468:	10803fcc 	andi	r2,r2,255
   8f46c:	1080201c 	xori	r2,r2,128
   8f470:	10bfe004 	addi	r2,r2,-128
   8f474:	10800bd8 	cmpnei	r2,r2,47
   8f478:	1000031e 	bne	r2,zero,8f488 <alt_find_file+0x74>
    {
      len -= 1;
   8f47c:	e0bffe17 	ldw	r2,-8(fp)
   8f480:	10bfffc4 	addi	r2,r2,-1
   8f484:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f488:	e0bffe17 	ldw	r2,-8(fp)
   8f48c:	e0ffff17 	ldw	r3,-4(fp)
   8f490:	1885883a 	add	r2,r3,r2
   8f494:	10800003 	ldbu	r2,0(r2)
   8f498:	10803fcc 	andi	r2,r2,255
   8f49c:	1080201c 	xori	r2,r2,128
   8f4a0:	10bfe004 	addi	r2,r2,-128
   8f4a4:	10800be0 	cmpeqi	r2,r2,47
   8f4a8:	1000081e 	bne	r2,zero,8f4cc <alt_find_file+0xb8>
   8f4ac:	e0bffe17 	ldw	r2,-8(fp)
   8f4b0:	e0ffff17 	ldw	r3,-4(fp)
   8f4b4:	1885883a 	add	r2,r3,r2
   8f4b8:	10800003 	ldbu	r2,0(r2)
   8f4bc:	10803fcc 	andi	r2,r2,255
   8f4c0:	1080201c 	xori	r2,r2,128
   8f4c4:	10bfe004 	addi	r2,r2,-128
   8f4c8:	10000a1e 	bne	r2,zero,8f4f4 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
   8f4cc:	e0bffd17 	ldw	r2,-12(fp)
   8f4d0:	10c00217 	ldw	r3,8(r2)
   8f4d4:	e0bffe17 	ldw	r2,-8(fp)
   8f4d8:	1809883a 	mov	r4,r3
   8f4dc:	e17fff17 	ldw	r5,-4(fp)
   8f4e0:	100d883a 	mov	r6,r2
   8f4e4:	008f6e80 	call	8f6e8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f4e8:	1000021e 	bne	r2,zero,8f4f4 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   8f4ec:	e0bffd17 	ldw	r2,-12(fp)
   8f4f0:	00000806 	br	8f514 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
   8f4f4:	e0bffd17 	ldw	r2,-12(fp)
   8f4f8:	10800017 	ldw	r2,0(r2)
   8f4fc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f500:	e0fffd17 	ldw	r3,-12(fp)
   8f504:	00800274 	movhi	r2,9
   8f508:	10866904 	addi	r2,r2,6564
   8f50c:	18bfcb1e 	bne	r3,r2,8f43c <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   8f510:	0005883a 	mov	r2,zero
}
   8f514:	e037883a 	mov	sp,fp
   8f518:	dfc00117 	ldw	ra,4(sp)
   8f51c:	df000017 	ldw	fp,0(sp)
   8f520:	dec00204 	addi	sp,sp,8
   8f524:	f800283a 	ret

0008f528 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   8f528:	defffa04 	addi	sp,sp,-24
   8f52c:	dfc00515 	stw	ra,20(sp)
   8f530:	df000415 	stw	fp,16(sp)
   8f534:	dc000315 	stw	r16,12(sp)
   8f538:	df000404 	addi	fp,sp,16
   8f53c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   8f540:	00bffa04 	movi	r2,-24
   8f544:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f548:	e03ffc15 	stw	zero,-16(fp)
   8f54c:	00002106 	br	8f5d4 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
   8f550:	04000274 	movhi	r16,9
   8f554:	8401eb04 	addi	r16,r16,1964
   8f558:	e0bffc17 	ldw	r2,-16(fp)
   8f55c:	1009883a 	mov	r4,r2
   8f560:	01400304 	movi	r5,12
   8f564:	008aa780 	call	8aa78 <__mulsi3>
   8f568:	8085883a 	add	r2,r16,r2
   8f56c:	10800017 	ldw	r2,0(r2)
   8f570:	1000151e 	bne	r2,zero,8f5c8 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
   8f574:	04000274 	movhi	r16,9
   8f578:	8401eb04 	addi	r16,r16,1964
   8f57c:	e0bffc17 	ldw	r2,-16(fp)
   8f580:	1009883a 	mov	r4,r2
   8f584:	01400304 	movi	r5,12
   8f588:	008aa780 	call	8aa78 <__mulsi3>
   8f58c:	8085883a 	add	r2,r16,r2
   8f590:	e0fffe17 	ldw	r3,-8(fp)
   8f594:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   8f598:	00800274 	movhi	r2,9
   8f59c:	10866d04 	addi	r2,r2,6580
   8f5a0:	10c00017 	ldw	r3,0(r2)
   8f5a4:	e0bffc17 	ldw	r2,-16(fp)
   8f5a8:	1880040e 	bge	r3,r2,8f5bc <alt_get_fd+0x94>
      {
        alt_max_fd = i;
   8f5ac:	00800274 	movhi	r2,9
   8f5b0:	10866d04 	addi	r2,r2,6580
   8f5b4:	e0fffc17 	ldw	r3,-16(fp)
   8f5b8:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
   8f5bc:	e0bffc17 	ldw	r2,-16(fp)
   8f5c0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   8f5c4:	00000606 	br	8f5e0 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f5c8:	e0bffc17 	ldw	r2,-16(fp)
   8f5cc:	10800044 	addi	r2,r2,1
   8f5d0:	e0bffc15 	stw	r2,-16(fp)
   8f5d4:	e0bffc17 	ldw	r2,-16(fp)
   8f5d8:	10800810 	cmplti	r2,r2,32
   8f5dc:	103fdc1e 	bne	r2,zero,8f550 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   8f5e0:	e0bffd17 	ldw	r2,-12(fp)
}
   8f5e4:	e6ffff04 	addi	sp,fp,-4
   8f5e8:	dfc00217 	ldw	ra,8(sp)
   8f5ec:	df000117 	ldw	fp,4(sp)
   8f5f0:	dc000017 	ldw	r16,0(sp)
   8f5f4:	dec00304 	addi	sp,sp,12
   8f5f8:	f800283a 	ret

0008f5fc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   8f5fc:	defffe04 	addi	sp,sp,-8
   8f600:	df000115 	stw	fp,4(sp)
   8f604:	df000104 	addi	fp,sp,4
   8f608:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   8f60c:	e0bfff17 	ldw	r2,-4(fp)
   8f610:	10bffe84 	addi	r2,r2,-6
   8f614:	10c00428 	cmpgeui	r3,r2,16
   8f618:	18001b1e 	bne	r3,zero,8f688 <alt_exception_cause_generated_bad_addr+0x8c>
   8f61c:	1085883a 	add	r2,r2,r2
   8f620:	1087883a 	add	r3,r2,r2
   8f624:	00800274 	movhi	r2,9
   8f628:	10bd8e04 	addi	r2,r2,-2504
   8f62c:	1885883a 	add	r2,r3,r2
   8f630:	10800017 	ldw	r2,0(r2)
   8f634:	1000683a 	jmp	r2
   8f638:	0008f678 	rdprs	zero,zero,9177
   8f63c:	0008f678 	rdprs	zero,zero,9177
   8f640:	0008f688 	cmpgei	zero,zero,9178
   8f644:	0008f688 	cmpgei	zero,zero,9178
   8f648:	0008f688 	cmpgei	zero,zero,9178
   8f64c:	0008f678 	rdprs	zero,zero,9177
   8f650:	0008f680 	call	8f68 <__alt_mem_onchip_memory2-0x77098>
   8f654:	0008f688 	cmpgei	zero,zero,9178
   8f658:	0008f678 	rdprs	zero,zero,9177
   8f65c:	0008f678 	rdprs	zero,zero,9177
   8f660:	0008f688 	cmpgei	zero,zero,9178
   8f664:	0008f678 	rdprs	zero,zero,9177
   8f668:	0008f680 	call	8f68 <__alt_mem_onchip_memory2-0x77098>
   8f66c:	0008f688 	cmpgei	zero,zero,9178
   8f670:	0008f688 	cmpgei	zero,zero,9178
   8f674:	0008f678 	rdprs	zero,zero,9177
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   8f678:	00800044 	movi	r2,1
   8f67c:	00000306 	br	8f68c <alt_exception_cause_generated_bad_addr+0x90>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   8f680:	0005883a 	mov	r2,zero
   8f684:	00000106 	br	8f68c <alt_exception_cause_generated_bad_addr+0x90>

  default:
    return 0;
   8f688:	0005883a 	mov	r2,zero
  }
}
   8f68c:	e037883a 	mov	sp,fp
   8f690:	df000017 	ldw	fp,0(sp)
   8f694:	dec00104 	addi	sp,sp,4
   8f698:	f800283a 	ret

0008f69c <atexit>:
   8f69c:	200b883a 	mov	r5,r4
   8f6a0:	000d883a 	mov	r6,zero
   8f6a4:	0009883a 	mov	r4,zero
   8f6a8:	000f883a 	mov	r7,zero
   8f6ac:	008f7641 	jmpi	8f764 <__register_exitproc>

0008f6b0 <exit>:
   8f6b0:	defffe04 	addi	sp,sp,-8
   8f6b4:	000b883a 	mov	r5,zero
   8f6b8:	dc000015 	stw	r16,0(sp)
   8f6bc:	dfc00115 	stw	ra,4(sp)
   8f6c0:	2021883a 	mov	r16,r4
   8f6c4:	008f8800 	call	8f880 <__call_exitprocs>
   8f6c8:	00800274 	movhi	r2,9
   8f6cc:	10866304 	addi	r2,r2,6540
   8f6d0:	11000017 	ldw	r4,0(r2)
   8f6d4:	20800f17 	ldw	r2,60(r4)
   8f6d8:	10000126 	beq	r2,zero,8f6e0 <exit+0x30>
   8f6dc:	103ee83a 	callr	r2
   8f6e0:	8009883a 	mov	r4,r16
   8f6e4:	008fa240 	call	8fa24 <_exit>

0008f6e8 <memcmp>:
   8f6e8:	01c000c4 	movi	r7,3
   8f6ec:	3980192e 	bgeu	r7,r6,8f754 <memcmp+0x6c>
   8f6f0:	2144b03a 	or	r2,r4,r5
   8f6f4:	11c4703a 	and	r2,r2,r7
   8f6f8:	10000f26 	beq	r2,zero,8f738 <memcmp+0x50>
   8f6fc:	21c00003 	ldbu	r7,0(r4)
   8f700:	28800003 	ldbu	r2,0(r5)
   8f704:	3880151e 	bne	r7,r2,8f75c <memcmp+0x74>
   8f708:	30ffff84 	addi	r3,r6,-2
   8f70c:	01bfffc4 	movi	r6,-1
   8f710:	00000406 	br	8f724 <memcmp+0x3c>
   8f714:	21c00003 	ldbu	r7,0(r4)
   8f718:	28800003 	ldbu	r2,0(r5)
   8f71c:	18ffffc4 	addi	r3,r3,-1
   8f720:	38800e1e 	bne	r7,r2,8f75c <memcmp+0x74>
   8f724:	21000044 	addi	r4,r4,1
   8f728:	29400044 	addi	r5,r5,1
   8f72c:	19bff91e 	bne	r3,r6,8f714 <memcmp+0x2c>
   8f730:	0005883a 	mov	r2,zero
   8f734:	f800283a 	ret
   8f738:	20c00017 	ldw	r3,0(r4)
   8f73c:	28800017 	ldw	r2,0(r5)
   8f740:	1880041e 	bne	r3,r2,8f754 <memcmp+0x6c>
   8f744:	31bfff04 	addi	r6,r6,-4
   8f748:	21000104 	addi	r4,r4,4
   8f74c:	29400104 	addi	r5,r5,4
   8f750:	39bff936 	bltu	r7,r6,8f738 <memcmp+0x50>
   8f754:	303fe91e 	bne	r6,zero,8f6fc <memcmp+0x14>
   8f758:	003ff506 	br	8f730 <memcmp+0x48>
   8f75c:	3885c83a 	sub	r2,r7,r2
   8f760:	f800283a 	ret

0008f764 <__register_exitproc>:
   8f764:	defffa04 	addi	sp,sp,-24
   8f768:	00800274 	movhi	r2,9
   8f76c:	10866304 	addi	r2,r2,6540
   8f770:	dc000315 	stw	r16,12(sp)
   8f774:	14000017 	ldw	r16,0(r2)
   8f778:	dc400415 	stw	r17,16(sp)
   8f77c:	dfc00515 	stw	ra,20(sp)
   8f780:	80805217 	ldw	r2,328(r16)
   8f784:	2023883a 	mov	r17,r4
   8f788:	10003a26 	beq	r2,zero,8f874 <__register_exitproc+0x110>
   8f78c:	10c00117 	ldw	r3,4(r2)
   8f790:	020007c4 	movi	r8,31
   8f794:	40c0190e 	bge	r8,r3,8f7fc <__register_exitproc+0x98>
   8f798:	00800034 	movhi	r2,0
   8f79c:	10800004 	addi	r2,r2,0
   8f7a0:	1000061e 	bne	r2,zero,8f7bc <__register_exitproc+0x58>
   8f7a4:	00bfffc4 	movi	r2,-1
   8f7a8:	dfc00517 	ldw	ra,20(sp)
   8f7ac:	dc400417 	ldw	r17,16(sp)
   8f7b0:	dc000317 	ldw	r16,12(sp)
   8f7b4:	dec00604 	addi	sp,sp,24
   8f7b8:	f800283a 	ret
   8f7bc:	01006404 	movi	r4,400
   8f7c0:	d9400015 	stw	r5,0(sp)
   8f7c4:	d9800115 	stw	r6,4(sp)
   8f7c8:	d9c00215 	stw	r7,8(sp)
   8f7cc:	00000000 	call	0 <__alt_mem_onchip_memory2-0x80000>
   8f7d0:	d9400017 	ldw	r5,0(sp)
   8f7d4:	d9800117 	ldw	r6,4(sp)
   8f7d8:	d9c00217 	ldw	r7,8(sp)
   8f7dc:	103ff126 	beq	r2,zero,8f7a4 <__register_exitproc+0x40>
   8f7e0:	81005217 	ldw	r4,328(r16)
   8f7e4:	10000115 	stw	zero,4(r2)
   8f7e8:	0007883a 	mov	r3,zero
   8f7ec:	11000015 	stw	r4,0(r2)
   8f7f0:	80805215 	stw	r2,328(r16)
   8f7f4:	10006215 	stw	zero,392(r2)
   8f7f8:	10006315 	stw	zero,396(r2)
   8f7fc:	88000d1e 	bne	r17,zero,8f834 <__register_exitproc+0xd0>
   8f800:	19000084 	addi	r4,r3,2
   8f804:	2109883a 	add	r4,r4,r4
   8f808:	18c00044 	addi	r3,r3,1
   8f80c:	2109883a 	add	r4,r4,r4
   8f810:	10c00115 	stw	r3,4(r2)
   8f814:	1105883a 	add	r2,r2,r4
   8f818:	11400015 	stw	r5,0(r2)
   8f81c:	0005883a 	mov	r2,zero
   8f820:	dfc00517 	ldw	ra,20(sp)
   8f824:	dc400417 	ldw	r17,16(sp)
   8f828:	dc000317 	ldw	r16,12(sp)
   8f82c:	dec00604 	addi	sp,sp,24
   8f830:	f800283a 	ret
   8f834:	18c9883a 	add	r4,r3,r3
   8f838:	2109883a 	add	r4,r4,r4
   8f83c:	1109883a 	add	r4,r2,r4
   8f840:	21802215 	stw	r6,136(r4)
   8f844:	01800044 	movi	r6,1
   8f848:	12006217 	ldw	r8,392(r2)
   8f84c:	30cc983a 	sll	r6,r6,r3
   8f850:	4190b03a 	or	r8,r8,r6
   8f854:	12006215 	stw	r8,392(r2)
   8f858:	21c04215 	stw	r7,264(r4)
   8f85c:	01000084 	movi	r4,2
   8f860:	893fe71e 	bne	r17,r4,8f800 <__register_exitproc+0x9c>
   8f864:	11006317 	ldw	r4,396(r2)
   8f868:	218cb03a 	or	r6,r4,r6
   8f86c:	11806315 	stw	r6,396(r2)
   8f870:	003fe306 	br	8f800 <__register_exitproc+0x9c>
   8f874:	80805304 	addi	r2,r16,332
   8f878:	80805215 	stw	r2,328(r16)
   8f87c:	003fc306 	br	8f78c <__register_exitproc+0x28>

0008f880 <__call_exitprocs>:
   8f880:	00800274 	movhi	r2,9
   8f884:	10866304 	addi	r2,r2,6540
   8f888:	10800017 	ldw	r2,0(r2)
   8f88c:	defff304 	addi	sp,sp,-52
   8f890:	df000b15 	stw	fp,44(sp)
   8f894:	d8800015 	stw	r2,0(sp)
   8f898:	10805204 	addi	r2,r2,328
   8f89c:	dd400815 	stw	r21,32(sp)
   8f8a0:	dfc00c15 	stw	ra,48(sp)
   8f8a4:	ddc00a15 	stw	r23,40(sp)
   8f8a8:	dd800915 	stw	r22,36(sp)
   8f8ac:	dd000715 	stw	r20,28(sp)
   8f8b0:	dcc00615 	stw	r19,24(sp)
   8f8b4:	dc800515 	stw	r18,20(sp)
   8f8b8:	dc400415 	stw	r17,16(sp)
   8f8bc:	dc000315 	stw	r16,12(sp)
   8f8c0:	d9000115 	stw	r4,4(sp)
   8f8c4:	2839883a 	mov	fp,r5
   8f8c8:	d8800215 	stw	r2,8(sp)
   8f8cc:	057fffc4 	movi	r21,-1
   8f8d0:	d8800017 	ldw	r2,0(sp)
   8f8d4:	14805217 	ldw	r18,328(r2)
   8f8d8:	90001826 	beq	r18,zero,8f93c <__call_exitprocs+0xbc>
   8f8dc:	ddc00217 	ldw	r23,8(sp)
   8f8e0:	90c00117 	ldw	r3,4(r18)
   8f8e4:	1c3fffc4 	addi	r16,r3,-1
   8f8e8:	80001116 	blt	r16,zero,8f930 <__call_exitprocs+0xb0>
   8f8ec:	18c00044 	addi	r3,r3,1
   8f8f0:	8427883a 	add	r19,r16,r16
   8f8f4:	18c7883a 	add	r3,r3,r3
   8f8f8:	95802204 	addi	r22,r18,136
   8f8fc:	9ce7883a 	add	r19,r19,r19
   8f900:	18c7883a 	add	r3,r3,r3
   8f904:	b4e7883a 	add	r19,r22,r19
   8f908:	90e3883a 	add	r17,r18,r3
   8f90c:	e0001726 	beq	fp,zero,8f96c <__call_exitprocs+0xec>
   8f910:	8c87c83a 	sub	r3,r17,r18
   8f914:	b0c7883a 	add	r3,r22,r3
   8f918:	18c01e17 	ldw	r3,120(r3)
   8f91c:	1f001326 	beq	r3,fp,8f96c <__call_exitprocs+0xec>
   8f920:	843fffc4 	addi	r16,r16,-1
   8f924:	9cffff04 	addi	r19,r19,-4
   8f928:	8c7fff04 	addi	r17,r17,-4
   8f92c:	857ff71e 	bne	r16,r21,8f90c <__call_exitprocs+0x8c>
   8f930:	00800034 	movhi	r2,0
   8f934:	10800004 	addi	r2,r2,0
   8f938:	10002a1e 	bne	r2,zero,8f9e4 <__call_exitprocs+0x164>
   8f93c:	dfc00c17 	ldw	ra,48(sp)
   8f940:	df000b17 	ldw	fp,44(sp)
   8f944:	ddc00a17 	ldw	r23,40(sp)
   8f948:	dd800917 	ldw	r22,36(sp)
   8f94c:	dd400817 	ldw	r21,32(sp)
   8f950:	dd000717 	ldw	r20,28(sp)
   8f954:	dcc00617 	ldw	r19,24(sp)
   8f958:	dc800517 	ldw	r18,20(sp)
   8f95c:	dc400417 	ldw	r17,16(sp)
   8f960:	dc000317 	ldw	r16,12(sp)
   8f964:	dec00d04 	addi	sp,sp,52
   8f968:	f800283a 	ret
   8f96c:	91000117 	ldw	r4,4(r18)
   8f970:	88c00017 	ldw	r3,0(r17)
   8f974:	213fffc4 	addi	r4,r4,-1
   8f978:	24001526 	beq	r4,r16,8f9d0 <__call_exitprocs+0x150>
   8f97c:	88000015 	stw	zero,0(r17)
   8f980:	183fe726 	beq	r3,zero,8f920 <__call_exitprocs+0xa0>
   8f984:	00800044 	movi	r2,1
   8f988:	1408983a 	sll	r4,r2,r16
   8f98c:	91406217 	ldw	r5,392(r18)
   8f990:	95000117 	ldw	r20,4(r18)
   8f994:	214a703a 	and	r5,r4,r5
   8f998:	28000b26 	beq	r5,zero,8f9c8 <__call_exitprocs+0x148>
   8f99c:	91406317 	ldw	r5,396(r18)
   8f9a0:	2148703a 	and	r4,r4,r5
   8f9a4:	20000c1e 	bne	r4,zero,8f9d8 <__call_exitprocs+0x158>
   8f9a8:	99400017 	ldw	r5,0(r19)
   8f9ac:	d9000117 	ldw	r4,4(sp)
   8f9b0:	183ee83a 	callr	r3
   8f9b4:	90c00117 	ldw	r3,4(r18)
   8f9b8:	1d3fc51e 	bne	r3,r20,8f8d0 <__call_exitprocs+0x50>
   8f9bc:	b8c00017 	ldw	r3,0(r23)
   8f9c0:	1cbfd726 	beq	r3,r18,8f920 <__call_exitprocs+0xa0>
   8f9c4:	003fc206 	br	8f8d0 <__call_exitprocs+0x50>
   8f9c8:	183ee83a 	callr	r3
   8f9cc:	003ff906 	br	8f9b4 <__call_exitprocs+0x134>
   8f9d0:	94000115 	stw	r16,4(r18)
   8f9d4:	003fea06 	br	8f980 <__call_exitprocs+0x100>
   8f9d8:	99000017 	ldw	r4,0(r19)
   8f9dc:	183ee83a 	callr	r3
   8f9e0:	003ff406 	br	8f9b4 <__call_exitprocs+0x134>
   8f9e4:	90c00117 	ldw	r3,4(r18)
   8f9e8:	1800081e 	bne	r3,zero,8fa0c <__call_exitprocs+0x18c>
   8f9ec:	90c00017 	ldw	r3,0(r18)
   8f9f0:	18000a26 	beq	r3,zero,8fa1c <__call_exitprocs+0x19c>
   8f9f4:	9009883a 	mov	r4,r18
   8f9f8:	b8c00015 	stw	r3,0(r23)
   8f9fc:	00000000 	call	0 <__alt_mem_onchip_memory2-0x80000>
   8fa00:	bc800017 	ldw	r18,0(r23)
   8fa04:	903fb61e 	bne	r18,zero,8f8e0 <__call_exitprocs+0x60>
   8fa08:	003fcc06 	br	8f93c <__call_exitprocs+0xbc>
   8fa0c:	90c00017 	ldw	r3,0(r18)
   8fa10:	902f883a 	mov	r23,r18
   8fa14:	1825883a 	mov	r18,r3
   8fa18:	003ffa06 	br	8fa04 <__call_exitprocs+0x184>
   8fa1c:	0007883a 	mov	r3,zero
   8fa20:	003ffb06 	br	8fa10 <__call_exitprocs+0x190>

0008fa24 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   8fa24:	defffd04 	addi	sp,sp,-12
   8fa28:	df000215 	stw	fp,8(sp)
   8fa2c:	df000204 	addi	fp,sp,8
   8fa30:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   8fa34:	0001883a 	nop
   8fa38:	e0bfff17 	ldw	r2,-4(fp)
   8fa3c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   8fa40:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   8fa44:	10000226 	beq	r2,zero,8fa50 <_exit+0x2c>
    ALT_SIM_FAIL();
   8fa48:	002af070 	cmpltui	zero,zero,43969
   8fa4c:	00000106 	br	8fa54 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   8fa50:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   8fa54:	003fff06 	br	8fa54 <_exit+0x30>
